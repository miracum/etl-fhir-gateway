name: ci

on:
  push:
    branches:
      - master
      - beta
  release:
    types:
      - created
  pull_request:
    branches:
      - master
      - beta

permissions: read-all

jobs:
  build:
    uses: miracum/.github/.github/workflows/standard-build.yaml@392030c6f94fcfaa509a606af2b0907d022f2257 # v1.8.3
    permissions:
      contents: read
      id-token: write
      packages: write
      pull-requests: write
      actions: read
      security-events: write
    with:
      enable-build-test-layer: true
      enable-upload-test-image: true
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  build-native-image:
    name: Build native image
    runs-on: ubuntu-22.04
    needs:
      - build
    steps:
      - name: "Checkout code"
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - name: Set up JDK
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4.2.1
        with:
          java-version: "21"
          distribution: "temurin"
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@db19848a5fa7950289d3668fb053140cf3028d43 # v3.3.2
      - name: bootBuildImage
        env:
          FHIR_GATEWAY_IMAGE_NAME: "${{ fromJson(needs.build.outputs.image-meta-json).tags[0] }}"
        run: ./gradlew bootBuildImage --imageName="${FHIR_GATEWAY_IMAGE_NAME}-native"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3.1.0
        if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push Docker image to registry
        if: ${{ github.event_name != 'pull_request' }}
        env:
          FHIR_GATEWAY_IMAGE_NAME: "${{ fromJson(needs.build.outputs.image-meta-json).tags[0] }}"
        run: docker push "${FHIR_GATEWAY_IMAGE_NAME}-native"

  add-test-coverage:
    runs-on: ubuntu-22.04
    needs:
      - build
    permissions:
      # for add Coverage PR Comment
      pull-requests: write
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Download test image
        uses: actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427 # v4.1.4
        with:
          name: ${{ needs.build.outputs.image-slug }}-test
          path: /tmp

      - name: Load test image
        run: |
          ls -lsa /tmp
          docker load --input /tmp/image-test.tar
          docker image ls

      - name: Copy unit test coverage reports from test container
        env:
          UNIT_TEST_IMAGE: ${{ fromJson(needs.build.outputs.test-image-meta-json).tags[0] }}
        run: |
          docker create --name=unit-test-container "${UNIT_TEST_IMAGE}"
          docker cp unit-test-container:/test ${{ github.workspace }}/test

      - name: Add coverage to PR
        id: jacoco
        uses: madrapps/jacoco-report@db72e7e7c96f98d239967958b0a0a6ca7d3bb45f # v1.6.1
        with:
          paths: |
            ${{ github.workspace }}/test/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 40
          min-coverage-changed-files: 60
          update-comment: true
          title: "## Code Coverage Report"

  test:
    runs-on: ubuntu-22.04
    needs:
      - build
    steps:
      - name: "Checkout code"
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          persist-credentials: false

      - name: Download build image
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
        if: ${{ github.event_name == 'pull_request' }}
        with:
          name: ${{ needs.build.outputs.image-slug }}
          path: /tmp

      - name: load image
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          ls -lsa /tmp
          docker load --input /tmp/image.tar
          docker image ls

      - name: Run E2E tests
        env:
          FHIR_GATEWAY_IMAGE_NAME: "${{ fromJson(needs.build.outputs.image-meta-json).tags[0] }}"
        run: |
          docker compose -p e2e -f deploy/docker-compose.yml -f deploy/docker-compose.gw-deps.yml -f tests/e2e/docker-compose.yml --project-directory=tests/e2e build
          docker compose -p e2e -f deploy/docker-compose.yml -f deploy/docker-compose.gw-deps.yml --project-directory=tests/e2e up -d
          docker compose -p e2e -f deploy/docker-compose.yml -f deploy/docker-compose.gw-deps.yml -f tests/e2e/docker-compose.yml --project-directory=tests/e2e run tester

      - name: Print E2E logs
        env:
          FHIR_GATEWAY_IMAGE_NAME: "${{ fromJson(needs.build.outputs.image-meta-json).tags[0] }}"
        if: ${{ always() }}
        run: |
          docker compose -p e2e -f deploy/docker-compose.yml -f deploy/docker-compose.gw-deps.yml -f tests/e2e/docker-compose.yml logs
          docker compose -p e2e -f deploy/docker-compose.yml -f deploy/docker-compose.gw-deps.yml -f tests/e2e/docker-compose.yml down --volumes --remove-orphans

  lint:
    uses: miracum/.github/.github/workflows/standard-lint.yaml@392030c6f94fcfaa509a606af2b0907d022f2257 # v1.8.3
    permissions:
      contents: read
      pull-requests: write
      issues: write
      security-events: write
      actions: read
    with:
      codeql-languages: '["java", "python"]'
      enable-codeql: true
      java-version: "21"
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  release:
    uses: miracum/.github/.github/workflows/standard-release.yaml@392030c6f94fcfaa509a606af2b0907d022f2257 # v1.8.3
    needs:
      - build
      - test
    permissions:
      contents: write
      pull-requests: write
      issues: write
    secrets:
      semantic-release-token: ${{ secrets.MIRACUM_BOT_SEMANTIC_RELEASE_TOKEN }}
