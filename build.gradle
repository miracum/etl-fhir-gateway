plugins {
    id "org.springframework.boot" version "3.2.5"
    id "io.spring.dependency-management" version "1.1.4"
    id "java"
    id "jacoco"
    id "com.diffplug.spotless" version "6.25.0"
}

group = "org.miracum.etl"
version = "3.12.13"
sourceCompatibility = "21"
targetCompatibility = "21"

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

ext {
    set("springCloudVersion", "2023.0.1")
    set("hapiVersion", "7.0.2")
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-data-jdbc"
    implementation "org.springframework.boot:spring-boot-starter-web"

    implementation "org.springframework.retry:spring-retry"

    implementation "org.springframework.cloud:spring-cloud-stream"
    implementation "org.springframework.cloud:spring-cloud-stream-binder-kafka"
    implementation "org.springframework.kafka:spring-kafka"

    implementation "org.miracum:kafka-fhir-serializer:1.0.5"

    implementation "io.micrometer:micrometer-registry-prometheus:1.12.5"
    implementation "io.micrometer:micrometer-core:1.12.5"

    implementation "net.logstash.logback:logstash-logback-encoder:7.4"

    implementation "ca.uhn.hapi.fhir:hapi-fhir-base:${hapiVersion}"
    implementation "ca.uhn.hapi.fhir:hapi-fhir-client:${hapiVersion}"
    implementation "ca.uhn.hapi.fhir:hapi-fhir-structures-r4:${hapiVersion}"
    implementation "ca.uhn.hapi.fhir:hapi-fhir-client-okhttp:${hapiVersion}"

    developmentOnly "org.springframework.boot:spring-boot-devtools"
    runtimeOnly "org.postgresql:postgresql:42.7.3"
    runtimeOnly 'com.h2database:h2:2.2.224'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named("test") {
  useJUnitPlatform()
}

jacoco {
}

jacocoTestReport {
	reports {
		csv.required = true
		html.required = true
		xml.required = true
	}
}

jar {
    enabled = false
}

spotless {
    java {
        importOrder()
        removeUnusedImports()
        googleJavaFormat()
    }
}
