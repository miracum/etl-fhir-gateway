version: "3.7"

services:
  mock-data-loader:
    image: confluentinc/cp-kafkacat:6.2.1
    entrypoint: ["/bin/bash", "-c"]
    command: >
      "while true; do
        kafkacat -b kafka1:19092 -K: -t fhir.all -P -l /data/mock-data.ndjson;
        kafkacat -b kafka1:19092 -K: -t fhir.all-2 -P -l /data/mock-data-2.ndjson;
        sleep 10;
      done"
    volumes:
      - ./mock-data.ndjson:/data/mock-data.ndjson:ro
      - ./mock-data-2.ndjson:/data/mock-data-2.ndjson:ro
    depends_on:
      - kafka1

  zoo1:
    image: zookeeper:3.7.0
    restart: unless-stopped
    hostname: zoo1
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181

  kafka1:
    image: confluentinc/cp-kafka:7.0.0
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zoo1

  kafdrop:
    image: obsidiandynamics/kafdrop:3.27.0
    ports:
      - "8090:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka1:19092"
    depends_on:
      - kafka1
