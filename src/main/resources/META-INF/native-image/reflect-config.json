[
  {
    "name": "[B"
  },
  {
    "name": "[C"
  },
  {
    "name": "[D"
  },
  {
    "name": "[F"
  },
  {
    "name": "[I"
  },
  {
    "name": "[J"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
  },
  {
    "name": "[Lio.micrometer.core.instrument.distribution.FixedBoundaryHistogram;"
  },
  {
    "name": "[Ljava.lang.Class;"
  },
  {
    "name": "[Ljava.lang.String;"
  },
  {
    "name": "[Ljava.lang.annotation.Annotation;"
  },
  {
    "name": "[Ljava.sql.Statement;"
  },
  {
    "name": "[Ljavax.management.openmbean.CompositeData;"
  },
  {
    "name": "[Lorg.springframework.cloud.stream.config.BindingHandlerAdvise$MappingsProvider;"
  },
  {
    "name": "[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
  },
  {
    "name": "[Lorg.springframework.web.bind.annotation.RequestMethod;"
  },
  {
    "name": "[Lsun.security.pkcs.SignerInfo;"
  },
  {
    "name": "[S"
  },
  {
    "name": "[Z"
  },
  {
    "name": "boolean",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "<init>", "parameterTypes": ["java.lang.Boolean"] },
      { "name": "from", "parameterTypes": ["java.lang.Boolean"] },
      { "name": "of", "parameterTypes": ["java.lang.Boolean"] },
      { "name": "valueOf", "parameterTypes": ["java.lang.Boolean"] }
    ]
  },
  {
    "name": "ca.uhn.fhir.android.AndroidMarker"
  },
  {
    "name": "ca.uhn.fhir.context.FhirContext",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "ca.uhn.fhir.interceptor.model.RequestPartitionId"
  },
  {
    "name": "ca.uhn.fhir.jpa.api.model.ResourceVersionConflictResolutionStrategy"
  },
  {
    "name": "ca.uhn.fhir.jpa.delete.DeleteConflictOutcome"
  },
  {
    "name": "ca.uhn.fhir.jpa.model.cross.IResourceLookup"
  },
  {
    "name": "ca.uhn.fhir.model.api.IElement",
    "allPublicFields": true
  },
  {
    "name": "ca.uhn.fhir.parser.JsonParser$1",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "ca.uhn.fhir.repackage.javax.xml.stream.XMLInputFactory"
  },
  {
    "name": "ca.uhn.fhir.rest.client.api.IGenericClient",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "ca.uhn.fhir.rest.client.api.IRestfulClient",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "ca.uhn.fhir.rest.client.impl.BaseClient",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "fetchResourceFromUrl",
        "parameterTypes": ["java.lang.Class", "java.lang.String"]
      },
      { "name": "getEncoding", "parameterTypes": [] },
      { "name": "getHttpClient", "parameterTypes": [] },
      { "name": "getInterceptorService", "parameterTypes": [] },
      { "name": "getLastResponse", "parameterTypes": [] },
      { "name": "getLastResponseBody", "parameterTypes": [] },
      { "name": "getServerBase", "parameterTypes": [] },
      { "name": "getSummary", "parameterTypes": [] },
      { "name": "getUrlBase", "parameterTypes": [] },
      { "name": "isKeepResponses", "parameterTypes": [] },
      { "name": "isPrettyPrint", "parameterTypes": [] },
      { "name": "registerInterceptor", "parameterTypes": ["java.lang.Object"] },
      { "name": "setDontValidateConformance", "parameterTypes": ["boolean"] },
      {
        "name": "setEncoding",
        "parameterTypes": ["ca.uhn.fhir.rest.api.EncodingEnum"]
      },
      {
        "name": "setFormatParamStyle",
        "parameterTypes": ["ca.uhn.fhir.rest.api.RequestFormatParamStyleEnum"]
      },
      {
        "name": "setInterceptorService",
        "parameterTypes": ["ca.uhn.fhir.interceptor.api.IInterceptorService"]
      },
      { "name": "setKeepResponses", "parameterTypes": ["boolean"] },
      { "name": "setPrettyPrint", "parameterTypes": ["java.lang.Boolean"] },
      {
        "name": "setSummary",
        "parameterTypes": ["ca.uhn.fhir.rest.api.SummaryEnum"]
      },
      {
        "name": "unregisterInterceptor",
        "parameterTypes": ["java.lang.Object"]
      }
    ]
  },
  {
    "name": "ca.uhn.fhir.rest.client.impl.GenericClient",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "capabilities", "parameterTypes": [] },
      { "name": "create", "parameterTypes": [] },
      { "name": "delete", "parameterTypes": [] },
      { "name": "fetchConformance", "parameterTypes": [] },
      { "name": "forceConformanceCheck", "parameterTypes": [] },
      { "name": "getFhirContext", "parameterTypes": [] },
      { "name": "history", "parameterTypes": [] },
      { "name": "loadPage", "parameterTypes": [] },
      { "name": "meta", "parameterTypes": [] },
      { "name": "operation", "parameterTypes": [] },
      { "name": "patch", "parameterTypes": [] },
      { "name": "read", "parameterTypes": [] },
      {
        "name": "read",
        "parameterTypes": ["ca.uhn.fhir.model.primitive.UriDt"]
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.Class",
          "ca.uhn.fhir.model.primitive.UriDt"
        ]
      },
      {
        "name": "read",
        "parameterTypes": ["java.lang.Class", "java.lang.String"]
      },
      { "name": "search", "parameterTypes": [] },
      { "name": "setLogRequestAndResponse", "parameterTypes": ["boolean"] },
      { "name": "transaction", "parameterTypes": [] },
      { "name": "update", "parameterTypes": [] },
      {
        "name": "update",
        "parameterTypes": [
          "ca.uhn.fhir.model.primitive.IdDt",
          "org.hl7.fhir.instance.model.api.IBaseResource"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.hl7.fhir.instance.model.api.IBaseResource"
        ]
      },
      { "name": "validate", "parameterTypes": [] },
      {
        "name": "validate",
        "parameterTypes": ["org.hl7.fhir.instance.model.api.IBaseResource"]
      },
      {
        "name": "vread",
        "parameterTypes": [
          "java.lang.Class",
          "ca.uhn.fhir.model.primitive.IdDt"
        ]
      },
      {
        "name": "vread",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "ca.uhn.fhir.rest.server.method.BaseMethodBinding"
  },
  {
    "name": "ca.uhn.fhir.util.XmlUtil",
    "methods": [
      { "name": "createXmlReader", "parameterTypes": ["java.io.Reader"] }
    ]
  },
  {
    "name": "ca.uhn.fhir.util.jar.DependencyLogImpl",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "ch.qos.logback.classic.BasicConfigurator",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "ch.qos.logback.classic.LoggerContext"
  },
  {
    "name": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "ch.qos.logback.classic.pattern.DateConverter",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LevelConverter",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LoggerConverter",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "ch.qos.logback.classic.pattern.MDCConverter",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "ch.qos.logback.classic.pattern.MessageConverter",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "ch.qos.logback.classic.pattern.ThreadConverter",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "ch.qos.logback.classic.util.DefaultJoranConfigurator",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.ctc.wstx.stax.WstxInputFactory"
  },
  {
    "name": "com.fasterxml.jackson.annotation.JacksonAnnotation",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonInclude",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.core.JsonGenerator"
  },
  {
    "name": "com.fasterxml.jackson.core.ObjectCodec",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getJsonFactory", "parameterTypes": [] },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.core.TreeCodec",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.core.Versioned",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.Module",
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "getDependencies", "parameterTypes": [] }]
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectMapper",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "createArrayNode", "parameterTypes": [] },
      { "name": "createObjectNode", "parameterTypes": [] },
      { "name": "getFactory", "parameterTypes": [] },
      { "name": "missingNode", "parameterTypes": [] },
      { "name": "nullNode", "parameterTypes": [] },
      {
        "name": "readTree",
        "parameterTypes": ["com.fasterxml.jackson.core.JsonParser"]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      },
      {
        "name": "treeAsTokens",
        "parameterTypes": ["com.fasterxml.jackson.core.TreeNode"]
      },
      {
        "name": "treeToValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.TreeNode",
          "java.lang.Class"
        ]
      },
      { "name": "version", "parameterTypes": [] },
      {
        "name": "writeTree",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonGenerator",
          "com.fasterxml.jackson.core.TreeNode"
        ]
      },
      {
        "name": "writeValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonGenerator",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.fasterxml.jackson.databind.module.SimpleModule",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addAbstractTypeMapping",
        "parameterTypes": ["java.lang.Class", "java.lang.Class"]
      },
      {
        "name": "addDeserializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonDeserializer"
        ]
      },
      {
        "name": "addKeyDeserializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.KeyDeserializer"
        ]
      },
      {
        "name": "addKeySerializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addSerializer",
        "parameterTypes": ["com.fasterxml.jackson.databind.JsonSerializer"]
      },
      {
        "name": "addSerializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addValueInstantiator",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.deser.ValueInstantiator"
        ]
      },
      { "name": "getModuleName", "parameterTypes": [] },
      { "name": "getTypeId", "parameterTypes": [] },
      {
        "name": "registerSubtypes",
        "parameterTypes": ["java.util.Collection"]
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.jsontype.NamedType[]"
        ]
      },
      { "name": "registerSubtypes", "parameterTypes": ["java.lang.Class[]"] },
      {
        "name": "setAbstractTypes",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"
        ]
      },
      {
        "name": "setDeserializerModifier",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"
        ]
      },
      {
        "name": "setDeserializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleDeserializers"
        ]
      },
      {
        "name": "setKeyDeserializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"
        ]
      },
      {
        "name": "setKeySerializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleSerializers"
        ]
      },
      {
        "name": "setMixInAnnotation",
        "parameterTypes": ["java.lang.Class", "java.lang.Class"]
      },
      {
        "name": "setSerializerModifier",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ser.BeanSerializerModifier"
        ]
      },
      {
        "name": "setSerializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleSerializers"
        ]
      },
      {
        "name": "setValueInstantiators",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleValueInstantiators"
        ]
      },
      {
        "name": "setupModule",
        "parameterTypes": ["com.fasterxml.jackson.databind.Module$SetupContext"]
      },
      { "name": "version", "parameterTypes": [] }
    ]
  },
  {
    "name": "com.fasterxml.jackson.dataformat.cbor.CBORFactory"
  },
  {
    "name": "com.fasterxml.jackson.dataformat.smile.SmileFactory"
  },
  {
    "name": "com.fasterxml.jackson.dataformat.xml.XmlMapper"
  },
  {
    "name": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.fasterxml.jackson.datatype.joda.JodaModule"
  },
  {
    "name": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.fasterxml.jackson.module.kotlin.KotlinModule"
  },
  {
    "name": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "setupModule",
        "parameterTypes": ["com.fasterxml.jackson.databind.Module$SetupContext"]
      }
    ]
  },
  {
    "name": "com.google.common.base.Optional"
  },
  {
    "name": "com.google.gson.Gson"
  },
  {
    "name": "com.ibm.lang.management.OperatingSystemMXBean"
  },
  {
    "name": "com.jayway.jsonpath.DocumentContext"
  },
  {
    "name": "com.rometools.rome.feed.WireFeed"
  },
  {
    "name": "com.samskivert.mustache.Template"
  },
  {
    "name": "com.sun.crypto.provider.AESCipher$General",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.sun.crypto.provider.ARCFOURCipher",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.sun.crypto.provider.DESCipher",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.sun.crypto.provider.DESedeCipher",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.sun.crypto.provider.HmacCore$HmacSHA256",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.sun.crypto.provider.PBKDF2Core$HmacSHA256",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.sun.management.GarbageCollectionNotificationInfo"
  },
  {
    "name": "com.sun.management.GarbageCollectorMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.GcInfo",
    "queryAllPublicMethods": true,
    "fields": [{ "name": "builder" }, { "name": "extAttributes" }],
    "methods": [{ "name": "getMemoryUsageBeforeGc", "parameterTypes": [] }]
  },
  {
    "name": "com.sun.management.HotSpotDiagnosticMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.OperatingSystemMXBean",
    "methods": [
      { "name": "getCpuLoad", "parameterTypes": [] },
      { "name": "getProcessCpuLoad", "parameterTypes": [] }
    ]
  },
  {
    "name": "com.sun.management.ThreadMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.UnixOperatingSystemMXBean",
    "queryAllPublicMethods": true,
    "methods": [
      { "name": "getMaxFileDescriptorCount", "parameterTypes": [] },
      { "name": "getOpenFileDescriptorCount", "parameterTypes": [] }
    ]
  },
  {
    "name": "com.sun.management.VMOption",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.internal.GarbageCollectorExtImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.HotSpotDiagnostic",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.HotSpotThreadImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.OperatingSystemImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.xml.internal.stream.XMLInputFactoryImpl",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.zaxxer.hikari.HikariConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addDataSourceProperty",
        "parameterTypes": ["java.lang.String", "java.lang.Object"]
      },
      {
        "name": "addHealthCheckProperty",
        "parameterTypes": ["java.lang.String", "java.lang.String"]
      },
      {
        "name": "copyStateTo",
        "parameterTypes": ["com.zaxxer.hikari.HikariConfig"]
      },
      { "name": "getCatalog", "parameterTypes": [] },
      { "name": "getConnectionInitSql", "parameterTypes": [] },
      { "name": "getConnectionTestQuery", "parameterTypes": [] },
      { "name": "getConnectionTimeout", "parameterTypes": [] },
      { "name": "getDataSource", "parameterTypes": [] },
      { "name": "getDataSourceClassName", "parameterTypes": [] },
      { "name": "getDataSourceJNDI", "parameterTypes": [] },
      { "name": "getDataSourceProperties", "parameterTypes": [] },
      { "name": "getDriverClassName", "parameterTypes": [] },
      { "name": "getExceptionOverrideClassName", "parameterTypes": [] },
      { "name": "getHealthCheckProperties", "parameterTypes": [] },
      { "name": "getHealthCheckRegistry", "parameterTypes": [] },
      { "name": "getIdleTimeout", "parameterTypes": [] },
      { "name": "getInitializationFailTimeout", "parameterTypes": [] },
      { "name": "getJdbcUrl", "parameterTypes": [] },
      { "name": "getKeepaliveTime", "parameterTypes": [] },
      { "name": "getLeakDetectionThreshold", "parameterTypes": [] },
      { "name": "getMaxLifetime", "parameterTypes": [] },
      { "name": "getMaximumPoolSize", "parameterTypes": [] },
      { "name": "getMetricRegistry", "parameterTypes": [] },
      { "name": "getMetricsTrackerFactory", "parameterTypes": [] },
      { "name": "getMinimumIdle", "parameterTypes": [] },
      { "name": "getPassword", "parameterTypes": [] },
      { "name": "getPoolName", "parameterTypes": [] },
      { "name": "getScheduledExecutor", "parameterTypes": [] },
      { "name": "getSchema", "parameterTypes": [] },
      { "name": "getThreadFactory", "parameterTypes": [] },
      { "name": "getTransactionIsolation", "parameterTypes": [] },
      { "name": "getUsername", "parameterTypes": [] },
      { "name": "getValidationTimeout", "parameterTypes": [] },
      { "name": "isAllowPoolSuspension", "parameterTypes": [] },
      { "name": "isAutoCommit", "parameterTypes": [] },
      { "name": "isIsolateInternalQueries", "parameterTypes": [] },
      { "name": "isReadOnly", "parameterTypes": [] },
      { "name": "isRegisterMbeans", "parameterTypes": [] },
      { "name": "setAllowPoolSuspension", "parameterTypes": ["boolean"] },
      { "name": "setAutoCommit", "parameterTypes": ["boolean"] },
      { "name": "setCatalog", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setConnectionInitSql",
        "parameterTypes": ["java.lang.String"]
      },
      {
        "name": "setConnectionTestQuery",
        "parameterTypes": ["java.lang.String"]
      },
      { "name": "setConnectionTimeout", "parameterTypes": ["long"] },
      { "name": "setDataSource", "parameterTypes": ["javax.sql.DataSource"] },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": ["java.lang.String"]
      },
      { "name": "setDataSourceJNDI", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setDataSourceProperties",
        "parameterTypes": ["java.util.Properties"]
      },
      { "name": "setDriverClassName", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setExceptionOverrideClassName",
        "parameterTypes": ["java.lang.String"]
      },
      {
        "name": "setHealthCheckProperties",
        "parameterTypes": ["java.util.Properties"]
      },
      { "name": "setIdleTimeout", "parameterTypes": ["long"] },
      { "name": "setInitializationFailTimeout", "parameterTypes": ["long"] },
      { "name": "setIsolateInternalQueries", "parameterTypes": ["boolean"] },
      { "name": "setJdbcUrl", "parameterTypes": ["java.lang.String"] },
      { "name": "setKeepaliveTime", "parameterTypes": ["long"] },
      { "name": "setLeakDetectionThreshold", "parameterTypes": ["long"] },
      { "name": "setMaxLifetime", "parameterTypes": ["long"] },
      { "name": "setMaximumPoolSize", "parameterTypes": ["int"] },
      { "name": "setMinimumIdle", "parameterTypes": ["int"] },
      { "name": "setPassword", "parameterTypes": ["java.lang.String"] },
      { "name": "setPoolName", "parameterTypes": ["java.lang.String"] },
      { "name": "setReadOnly", "parameterTypes": ["boolean"] },
      { "name": "setRegisterMbeans", "parameterTypes": ["boolean"] },
      {
        "name": "setScheduledExecutor",
        "parameterTypes": ["java.util.concurrent.ScheduledExecutorService"]
      },
      { "name": "setSchema", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setThreadFactory",
        "parameterTypes": ["java.util.concurrent.ThreadFactory"]
      },
      {
        "name": "setTransactionIsolation",
        "parameterTypes": ["java.lang.String"]
      },
      { "name": "setUsername", "parameterTypes": ["java.lang.String"] },
      { "name": "setValidationTimeout", "parameterTypes": ["long"] },
      { "name": "validate", "parameterTypes": [] }
    ]
  },
  {
    "name": "com.zaxxer.hikari.HikariConfigMXBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.zaxxer.hikari.HikariDataSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      { "name": "close", "parameterTypes": [] },
      { "name": "getConnection", "parameterTypes": [] },
      {
        "name": "getConnection",
        "parameterTypes": ["java.lang.String", "java.lang.String"]
      },
      { "name": "getLogWriter", "parameterTypes": [] },
      { "name": "getLoginTimeout", "parameterTypes": [] },
      { "name": "getParentLogger", "parameterTypes": [] },
      { "name": "isWrapperFor", "parameterTypes": ["java.lang.Class"] },
      {
        "name": "setHealthCheckRegistry",
        "parameterTypes": ["java.lang.Object"]
      },
      { "name": "setLogWriter", "parameterTypes": ["java.io.PrintWriter"] },
      { "name": "setLoginTimeout", "parameterTypes": ["int"] },
      { "name": "setMetricRegistry", "parameterTypes": ["java.lang.Object"] },
      {
        "name": "setMetricsTrackerFactory",
        "parameterTypes": ["com.zaxxer.hikari.metrics.MetricsTrackerFactory"]
      },
      { "name": "unwrap", "parameterTypes": ["java.lang.Class"] }
    ]
  },
  {
    "name": "com.zaxxer.hikari.pool.PoolBase",
    "fields": [{ "name": "catalog" }]
  },
  {
    "name": "com.zaxxer.hikari.pool.PoolEntry",
    "fields": [{ "name": "state" }]
  },
  {
    "name": "freemarker.template.Configuration"
  },
  {
    "name": "groovy.text.TemplateEngine"
  },
  {
    "name": "io.cloudevents.CloudEvent"
  },
  {
    "name": "io.micrometer.common.lang.NonNullApi",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.common.lang.NonNullFields",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.common.lang.Nullable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.context.ContextSnapshot"
  },
  {
    "name": "io.micrometer.context.ContextSnapshotFactory"
  },
  {
    "name": "io.micrometer.core.instrument.Clock",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.Clock$1",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "monotonicTime", "parameterTypes": [] },
      { "name": "wallTime", "parameterTypes": [] }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.MeterRegistry",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "clear", "parameterTypes": [] },
      { "name": "close", "parameterTypes": [] },
      { "name": "config", "parameterTypes": [] },
      {
        "name": "counter",
        "parameterTypes": ["java.lang.String", "java.lang.Iterable"]
      },
      {
        "name": "counter",
        "parameterTypes": ["java.lang.String", "java.lang.String[]"]
      },
      { "name": "find", "parameterTypes": ["java.lang.String"] },
      {
        "name": "forEachMeter",
        "parameterTypes": ["java.util.function.Consumer"]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.lang.Number"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.lang.Object",
          "java.util.function.ToDoubleFunction"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": ["java.lang.String", "java.lang.Number"]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.util.function.ToDoubleFunction"
        ]
      },
      {
        "name": "gaugeCollectionSize",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.util.Collection"
        ]
      },
      {
        "name": "gaugeMapSize",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.util.Map"
        ]
      },
      { "name": "get", "parameterTypes": ["java.lang.String"] },
      { "name": "getMeters", "parameterTypes": [] },
      { "name": "isClosed", "parameterTypes": [] },
      { "name": "more", "parameterTypes": [] },
      {
        "name": "remove",
        "parameterTypes": ["io.micrometer.core.instrument.Meter$Id"]
      },
      {
        "name": "remove",
        "parameterTypes": ["io.micrometer.core.instrument.Meter"]
      },
      {
        "name": "removeByPreFilterId",
        "parameterTypes": ["io.micrometer.core.instrument.Meter$Id"]
      },
      {
        "name": "summary",
        "parameterTypes": ["java.lang.String", "java.lang.Iterable"]
      },
      {
        "name": "summary",
        "parameterTypes": ["java.lang.String", "java.lang.String[]"]
      },
      {
        "name": "timer",
        "parameterTypes": ["java.lang.String", "java.lang.Iterable"]
      },
      {
        "name": "timer",
        "parameterTypes": ["java.lang.String", "java.lang.String[]"]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.MeterBinder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": ["io.micrometer.core.instrument.MeterRegistry"]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": ["io.micrometer.core.instrument.MeterRegistry"]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": ["io.micrometer.core.instrument.MeterRegistry"]
      },
      { "name": "close", "parameterTypes": [] }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": ["io.micrometer.core.instrument.MeterRegistry"]
      },
      { "name": "close", "parameterTypes": [] }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": ["io.micrometer.core.instrument.MeterRegistry"]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": ["io.micrometer.core.instrument.MeterRegistry"]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": ["io.micrometer.core.instrument.MeterRegistry"]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.logging.LogbackMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": ["io.micrometer.core.instrument.MeterRegistry"]
      },
      { "name": "close", "parameterTypes": [] }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": ["io.micrometer.core.instrument.MeterRegistry"]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.ProcessorMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": ["io.micrometer.core.instrument.MeterRegistry"]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.UptimeMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": ["io.micrometer.core.instrument.MeterRegistry"]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.config.MeterFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "map",
        "parameterTypes": ["io.micrometer.core.instrument.Meter$Id"]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.config.MeterFilter$9",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "accept",
        "parameterTypes": ["io.micrometer.core.instrument.Meter$Id"]
      },
      {
        "name": "configure",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id",
          "io.micrometer.core.instrument.distribution.DistributionStatisticConfig"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.config.MeterRegistryConfig",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [{ "name": "requireValid", "parameterTypes": [] }]
  },
  {
    "name": "io.micrometer.core.instrument.distribution.AbstractTimeWindowHistogram",
    "fields": [{ "name": "rotating" }]
  },
  {
    "name": "io.micrometer.core.instrument.distribution.TimeWindowMax",
    "fields": [{ "name": "rotating" }]
  },
  {
    "name": "io.micrometer.core.instrument.distribution.TimeWindowSum",
    "fields": [{ "name": "rotating" }]
  },
  {
    "name": "io.micrometer.core.instrument.observation.DefaultMeterObservationHandler",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onEvent",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Event",
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onStart",
        "parameterTypes": ["io.micrometer.observation.Observation$Context"]
      },
      {
        "name": "onStop",
        "parameterTypes": ["io.micrometer.observation.Observation$Context"]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.observation.MeterObservationHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "supportsContext",
        "parameterTypes": ["io.micrometer.observation.Observation$Context"]
      }
    ]
  },
  {
    "name": "io.micrometer.observation.ObservationFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.observation.ObservationHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "onError",
        "parameterTypes": ["io.micrometer.observation.Observation$Context"]
      },
      {
        "name": "onScopeClosed",
        "parameterTypes": ["io.micrometer.observation.Observation$Context"]
      },
      {
        "name": "onScopeOpened",
        "parameterTypes": ["io.micrometer.observation.Observation$Context"]
      },
      {
        "name": "onScopeReset",
        "parameterTypes": ["io.micrometer.observation.Observation$Context"]
      }
    ]
  },
  {
    "name": "io.micrometer.observation.ObservationPredicate",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.observation.ObservationRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.observation.SimpleObservationRegistry",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getCurrentObservation", "parameterTypes": [] },
      { "name": "getCurrentObservationScope", "parameterTypes": [] },
      { "name": "isNoop", "parameterTypes": [] },
      { "name": "observationConfig", "parameterTypes": [] },
      {
        "name": "setCurrentObservationScope",
        "parameterTypes": ["io.micrometer.observation.Observation$Scope"]
      }
    ]
  },
  {
    "name": "io.micrometer.prometheus.PrometheusConfig",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [{ "name": "validate", "parameterTypes": [] }]
  },
  {
    "name": "io.micrometer.prometheus.PrometheusMeterRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.tracing.Tracer"
  },
  {
    "name": "io.prometheus.client.CollectorRegistry",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.reactivex.rxjava3.core.Flowable"
  },
  {
    "name": "io.smallrye.mutiny.Multi"
  },
  {
    "name": "io.vavr.control.Option"
  },
  {
    "name": "io.vavr.control.Try"
  },
  {
    "name": "jakarta.annotation.Nonnull",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.annotation.Nullable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.ejb.EJB"
  },
  {
    "name": "jakarta.ejb.TransactionAttribute"
  },
  {
    "name": "jakarta.faces.context.FacesContext"
  },
  {
    "name": "jakarta.inject.Provider"
  },
  {
    "name": "jakarta.inject.Qualifier"
  },
  {
    "name": "jakarta.json.bind.Jsonb"
  },
  {
    "name": "jakarta.persistence.Persistence"
  },
  {
    "name": "jakarta.persistence.PersistenceContext"
  },
  {
    "name": "jakarta.servlet.Filter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.servlet.GenericFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.servlet.GenericServlet",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getInitParameter", "parameterTypes": ["java.lang.String"] },
      { "name": "getInitParameterNames", "parameterTypes": [] },
      { "name": "getServletConfig", "parameterTypes": [] },
      { "name": "getServletContext", "parameterTypes": [] },
      { "name": "getServletInfo", "parameterTypes": [] },
      { "name": "log", "parameterTypes": ["java.lang.String"] },
      {
        "name": "log",
        "parameterTypes": ["java.lang.String", "java.lang.Throwable"]
      }
    ]
  },
  {
    "name": "jakarta.servlet.MultipartConfigElement",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.servlet.Servlet",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.servlet.ServletConfig",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.servlet.ServletContext",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.servlet.http.HttpServlet",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "init", "parameterTypes": ["jakarta.servlet.ServletConfig"] },
      {
        "name": "service",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse"
        ]
      }
    ]
  },
  {
    "name": "jakarta.servlet.jsp.jstl.core.Config"
  },
  {
    "name": "jakarta.transaction.Transactional"
  },
  {
    "name": "jakarta.validation.Validator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.validation.ValidatorFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.validation.bootstrap.GenericBootstrap"
  },
  {
    "name": "jakarta.xml.bind.Binder"
  },
  {
    "name": "jakarta.xml.ws.WebServiceRef"
  },
  {
    "name": "java.io.Closeable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.io.FilePermission"
  },
  {
    "name": "java.io.Serializable",
    "allPublicFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      { "name": "getProperty", "parameterTypes": ["java.lang.String"] }
    ]
  },
  {
    "name": "java.lang.AutoCloseable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.Boolean",
    "fields": [{ "name": "TYPE" }],
    "methods": [{ "name": "toboolean", "parameterTypes": [] }]
  },
  {
    "name": "java.lang.Byte",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.Character",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.Class",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      { "name": "getConstantPool", "parameterTypes": [] },
      { "name": "getModule", "parameterTypes": [] }
    ]
  },
  {
    "name": "java.lang.ClassLoader",
    "methods": [
      {
        "name": "defineClass",
        "parameterTypes": [
          "java.lang.String",
          "byte[]",
          "int",
          "int",
          "java.security.ProtectionDomain"
        ]
      }
    ]
  },
  {
    "name": "java.lang.Cloneable",
    "methods": [
      { "name": "getProperty", "parameterTypes": ["java.lang.String"] }
    ]
  },
  {
    "name": "java.lang.Comparable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Deprecated",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.Double",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.Float",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.Integer",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.Iterable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      { "name": "forEach", "parameterTypes": ["java.util.function.Consumer"] },
      { "name": "spliterator", "parameterTypes": [] }
    ]
  },
  {
    "name": "java.lang.Long",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.Module",
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "isNamed", "parameterTypes": [] }]
  },
  {
    "name": "java.lang.Number",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Object",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$SpelConverter"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$SpelConverter"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$SpelConverter"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$SpelConverter"
        ]
      }
    ]
  },
  {
    "name": "java.lang.Record",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Runnable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.RuntimePermission"
  },
  {
    "name": "java.lang.SecurityManager",
    "methods": [
      {
        "name": "checkPermission",
        "parameterTypes": ["java.security.Permission"]
      }
    ]
  },
  {
    "name": "java.lang.Short",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.StackTraceElement",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.String",
    "queryAllDeclaredMethods": true,
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.System",
    "methods": [{ "name": "getSecurityManager", "parameterTypes": [] }]
  },
  {
    "name": "java.lang.Thread",
    "fields": [{ "name": "threadLocalRandomProbe" }],
    "methods": [{ "name": "ofVirtual", "parameterTypes": [] }]
  },
  {
    "name": "java.lang.Thread$Builder",
    "methods": [
      { "name": "name", "parameterTypes": ["java.lang.String", "long"] },
      { "name": "start", "parameterTypes": ["java.lang.Runnable"] }
    ]
  },
  {
    "name": "java.lang.ThreadBuilders$VirtualThreadBuilder",
    "methods": [{ "name": "factory", "parameterTypes": [] }]
  },
  {
    "name": "java.lang.Void",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.WrongThreadException"
  },
  {
    "name": "java.lang.constant.Constable",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.invoke.TypeDescriptor$OfField",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.BufferPoolMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.ClassLoadingMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.CompilationMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.LockInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.ManagementPermission",
    "methods": [{ "name": "<init>", "parameterTypes": ["java.lang.String"] }]
  },
  {
    "name": "java.lang.management.MemoryMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryManagerMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryPoolMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryUsage",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "from",
        "parameterTypes": ["javax.management.openmbean.CompositeData"]
      }
    ]
  },
  {
    "name": "java.lang.management.MonitorInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.PlatformLoggingMXBean",
    "queryAllPublicMethods": true,
    "methods": [
      { "name": "getLoggerLevel", "parameterTypes": ["java.lang.String"] },
      { "name": "getLoggerNames", "parameterTypes": [] },
      { "name": "getParentLoggerName", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setLoggerLevel",
        "parameterTypes": ["java.lang.String", "java.lang.String"]
      }
    ]
  },
  {
    "name": "java.lang.management.RuntimeMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.ThreadInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.AccessibleObject",
    "fields": [{ "name": "override" }]
  },
  {
    "name": "java.lang.reflect.AnnotatedElement",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.GenericArrayType",
    "methods": [{ "name": "getGenericComponentType", "parameterTypes": [] }]
  },
  {
    "name": "java.lang.reflect.GenericDeclaration",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.ParameterizedType",
    "methods": [
      { "name": "getActualTypeArguments", "parameterTypes": [] },
      { "name": "getOwnerType", "parameterTypes": [] },
      { "name": "getRawType", "parameterTypes": [] }
    ]
  },
  {
    "name": "java.lang.reflect.Type",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.TypeVariable",
    "methods": [{ "name": "getBounds", "parameterTypes": [] }]
  },
  {
    "name": "java.lang.reflect.WildcardType",
    "methods": [
      { "name": "getLowerBounds", "parameterTypes": [] },
      { "name": "getUpperBounds", "parameterTypes": [] }
    ]
  },
  {
    "name": "java.math.BigDecimal",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.math.BigInteger"
  },
  {
    "name": "java.net.NetPermission"
  },
  {
    "name": "java.net.SocketPermission"
  },
  {
    "name": "java.net.URI",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "<init>", "parameterTypes": ["java.lang.String"] },
      { "name": "from", "parameterTypes": ["java.lang.String"] },
      { "name": "of", "parameterTypes": ["java.lang.String"] },
      { "name": "valueOf", "parameterTypes": ["java.lang.String"] }
    ]
  },
  {
    "name": "java.net.URLPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.String", "java.lang.String"]
      }
    ]
  },
  {
    "name": "java.net.UnixDomainSocketAddress",
    "methods": [{ "name": "of", "parameterTypes": ["java.lang.String"] }]
  },
  {
    "name": "java.nio.channels.ServerSocketChannel",
    "methods": [
      { "name": "open", "parameterTypes": ["java.net.ProtocolFamily"] }
    ]
  },
  {
    "name": "java.nio.channels.SocketChannel",
    "methods": [
      { "name": "open", "parameterTypes": ["java.net.ProtocolFamily"] }
    ]
  },
  {
    "name": "java.security.AccessController",
    "methods": [
      {
        "name": "doPrivileged",
        "parameterTypes": ["java.security.PrivilegedExceptionAction"]
      }
    ]
  },
  {
    "name": "java.security.AlgorithmParametersSpi"
  },
  {
    "name": "java.security.AllPermission"
  },
  {
    "name": "java.security.KeyStoreSpi"
  },
  {
    "name": "java.security.SecureRandomParameters"
  },
  {
    "name": "java.security.SecurityPermission"
  },
  {
    "name": "java.sql.Array"
  },
  {
    "name": "java.sql.Connection",
    "methods": [{ "name": "getMetaData", "parameterTypes": [] }]
  },
  {
    "name": "java.sql.Date"
  },
  {
    "name": "java.sql.Driver"
  },
  {
    "name": "java.sql.DriverManager"
  },
  {
    "name": "java.sql.ResultSet"
  },
  {
    "name": "java.sql.Time"
  },
  {
    "name": "java.sql.Timestamp"
  },
  {
    "name": "java.sql.Types",
    "allPublicFields": true
  },
  {
    "name": "java.sql.Wrapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.text.ListFormat"
  },
  {
    "name": "java.time.DurationEditor"
  },
  {
    "name": "java.util.ArrayList"
  },
  {
    "name": "java.util.Date"
  },
  {
    "name": "java.util.Enumeration"
  },
  {
    "name": "java.util.EventListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.HashSet"
  },
  {
    "name": "java.util.List"
  },
  {
    "name": "java.util.Map",
    "methods": [
      { "name": "getProperty", "parameterTypes": ["java.lang.String"] }
    ]
  },
  {
    "name": "java.util.Properties",
    "queryAllPublicMethods": true,
    "methods": [
      { "name": "getProperty", "parameterTypes": ["java.lang.String"] }
    ]
  },
  {
    "name": "java.util.PropertyPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.String", "java.lang.String"]
      }
    ]
  },
  {
    "name": "java.util.Set"
  },
  {
    "name": "java.util.UUID"
  },
  {
    "name": "java.util.concurrent.Executor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.concurrent.ForkJoinTask",
    "fields": [{ "name": "aux" }, { "name": "status" }]
  },
  {
    "name": "java.util.concurrent.ThreadFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.concurrent.atomic.AtomicBoolean",
    "fields": [{ "name": "value" }]
  },
  {
    "name": "java.util.concurrent.atomic.AtomicReference",
    "fields": [{ "name": "value" }]
  },
  {
    "name": "java.util.concurrent.atomic.Striped64",
    "fields": [{ "name": "base" }, { "name": "cellsBusy" }]
  },
  {
    "name": "java.util.concurrent.atomic.Striped64$Cell",
    "fields": [{ "name": "value" }]
  },
  {
    "name": "java.util.function.BiPredicate",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      { "name": "and", "parameterTypes": ["java.util.function.BiPredicate"] },
      { "name": "negate", "parameterTypes": [] },
      { "name": "or", "parameterTypes": ["java.util.function.BiPredicate"] }
    ]
  },
  {
    "name": "java.util.function.Function",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      { "name": "andThen", "parameterTypes": ["java.util.function.Function"] },
      { "name": "compose", "parameterTypes": ["java.util.function.Function"] }
    ]
  },
  {
    "name": "java.util.logging.LogManager",
    "methods": [{ "name": "getLoggingMXBean", "parameterTypes": [] }]
  },
  {
    "name": "java.util.logging.LoggingMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.logging.SimpleFormatter",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "java.util.zip.CRC32C",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "java.util.zip.Checksum",
    "methods": [{ "name": "update", "parameterTypes": ["java.nio.ByteBuffer"] }]
  },
  {
    "name": "javafx.beans.value.ObservableValue"
  },
  {
    "name": "javax.annotation.Nonnull",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "javax.annotation.Nullable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "javax.annotation.meta.TypeQualifier",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "javax.annotation.meta.TypeQualifierDefault",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "javax.management.MBeanOperationInfo",
    "queryAllPublicMethods": true,
    "methods": [{ "name": "getSignature", "parameterTypes": [] }]
  },
  {
    "name": "javax.management.MBeanServerBuilder",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "javax.management.ObjectName"
  },
  {
    "name": "javax.management.StandardEmitterMBean",
    "methods": [
      {
        "name": "cacheMBeanInfo",
        "parameterTypes": ["javax.management.MBeanInfo"]
      },
      { "name": "getCachedMBeanInfo", "parameterTypes": [] },
      { "name": "getMBeanInfo", "parameterTypes": [] }
    ]
  },
  {
    "name": "javax.management.openmbean.CompositeData"
  },
  {
    "name": "javax.management.openmbean.OpenMBeanOperationInfoSupport"
  },
  {
    "name": "javax.management.openmbean.TabularData"
  },
  {
    "name": "javax.money.MonetaryAmount"
  },
  {
    "name": "javax.naming.InitialContext"
  },
  {
    "name": "javax.security.auth.x500.X500Principal",
    "fields": [{ "name": "thisX500Name" }],
    "methods": [
      { "name": "<init>", "parameterTypes": ["sun.security.x509.X500Name"] }
    ]
  },
  {
    "name": "javax.smartcardio.CardPermission"
  },
  {
    "name": "javax.sql.CommonDataSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [{ "name": "createShardingKeyBuilder", "parameterTypes": [] }]
  },
  {
    "name": "javax.sql.DataSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [{ "name": "createConnectionBuilder", "parameterTypes": [] }]
  },
  {
    "name": "javax.xml.stream.events.XMLEvent"
  },
  {
    "name": "jdk.crac.management.CRaCMXBean"
  },
  {
    "name": "jdk.internal.loader.ClassLoaders$AppClassLoader",
    "methods": [{ "name": "clearCache", "parameterTypes": [] }]
  },
  {
    "name": "jdk.internal.loader.ClassLoaders$PlatformClassLoader",
    "methods": [{ "name": "clearCache", "parameterTypes": [] }]
  },
  {
    "name": "jdk.internal.misc.Unsafe"
  },
  {
    "name": "jdk.internal.reflect.ConstantPool",
    "methods": [
      { "name": "getMethodAt", "parameterTypes": ["int"] },
      { "name": "getSize", "parameterTypes": [] }
    ]
  },
  {
    "name": "jdk.management.jfr.ConfigurationInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.EventTypeInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.FlightRecorderMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.FlightRecorderMXBeanImpl",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "cacheMBeanInfo",
        "parameterTypes": ["javax.management.MBeanInfo"]
      },
      { "name": "getCachedMBeanInfo", "parameterTypes": [] },
      { "name": "getMBeanInfo", "parameterTypes": [] },
      { "name": "getNotificationInfo", "parameterTypes": [] }
    ]
  },
  {
    "name": "jdk.management.jfr.RecordingInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.SettingDescriptorInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "kotlin.Metadata"
  },
  {
    "name": "kotlin.Unit"
  },
  {
    "name": "kotlin.jvm.JvmInline"
  },
  {
    "name": "kotlin.reflect.full.KClasses"
  },
  {
    "name": "kotlinx.coroutines.reactor.MonoKt"
  },
  {
    "name": "kotlinx.serialization.cbor.Cbor"
  },
  {
    "name": "kotlinx.serialization.json.Json"
  },
  {
    "name": "kotlinx.serialization.protobuf.ProtoBuf"
  },
  {
    "name": "okhttp3.OkHttpClient"
  },
  {
    "name": "okhttp3.Request",
    "methods": [{ "name": "tag", "parameterTypes": ["java.lang.Class"] }]
  },
  {
    "name": "org.aopalliance.aop.Advice",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.aopalliance.intercept.Interceptor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.aopalliance.intercept.MethodInterceptor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.catalina.core.ApplicationContextFacade",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addFilter",
        "parameterTypes": ["java.lang.String", "jakarta.servlet.Filter"]
      },
      {
        "name": "addFilter",
        "parameterTypes": ["java.lang.String", "java.lang.Class"]
      },
      {
        "name": "addFilter",
        "parameterTypes": ["java.lang.String", "java.lang.String"]
      },
      {
        "name": "addJspFile",
        "parameterTypes": ["java.lang.String", "java.lang.String"]
      },
      { "name": "addListener", "parameterTypes": ["java.lang.Class"] },
      { "name": "addListener", "parameterTypes": ["java.lang.String"] },
      { "name": "addListener", "parameterTypes": ["java.util.EventListener"] },
      {
        "name": "addServlet",
        "parameterTypes": ["java.lang.String", "jakarta.servlet.Servlet"]
      },
      {
        "name": "addServlet",
        "parameterTypes": ["java.lang.String", "java.lang.Class"]
      },
      {
        "name": "addServlet",
        "parameterTypes": ["java.lang.String", "java.lang.String"]
      },
      { "name": "createFilter", "parameterTypes": ["java.lang.Class"] },
      { "name": "createListener", "parameterTypes": ["java.lang.Class"] },
      { "name": "createServlet", "parameterTypes": ["java.lang.Class"] },
      { "name": "declareRoles", "parameterTypes": ["java.lang.String[]"] },
      { "name": "getAttribute", "parameterTypes": ["java.lang.String"] },
      { "name": "getAttributeNames", "parameterTypes": [] },
      { "name": "getClassLoader", "parameterTypes": [] },
      { "name": "getContext", "parameterTypes": ["java.lang.String"] },
      { "name": "getContextPath", "parameterTypes": [] },
      { "name": "getDefaultSessionTrackingModes", "parameterTypes": [] },
      { "name": "getEffectiveMajorVersion", "parameterTypes": [] },
      { "name": "getEffectiveMinorVersion", "parameterTypes": [] },
      { "name": "getEffectiveSessionTrackingModes", "parameterTypes": [] },
      {
        "name": "getFilterRegistration",
        "parameterTypes": ["java.lang.String"]
      },
      { "name": "getFilterRegistrations", "parameterTypes": [] },
      { "name": "getInitParameter", "parameterTypes": ["java.lang.String"] },
      { "name": "getInitParameterNames", "parameterTypes": [] },
      { "name": "getJspConfigDescriptor", "parameterTypes": [] },
      { "name": "getMajorVersion", "parameterTypes": [] },
      { "name": "getMimeType", "parameterTypes": ["java.lang.String"] },
      { "name": "getMinorVersion", "parameterTypes": [] },
      { "name": "getNamedDispatcher", "parameterTypes": ["java.lang.String"] },
      { "name": "getRealPath", "parameterTypes": ["java.lang.String"] },
      { "name": "getRequestCharacterEncoding", "parameterTypes": [] },
      {
        "name": "getRequestDispatcher",
        "parameterTypes": ["java.lang.String"]
      },
      { "name": "getResource", "parameterTypes": ["java.lang.String"] },
      { "name": "getResourceAsStream", "parameterTypes": ["java.lang.String"] },
      { "name": "getResourcePaths", "parameterTypes": ["java.lang.String"] },
      { "name": "getResponseCharacterEncoding", "parameterTypes": [] },
      { "name": "getServerInfo", "parameterTypes": [] },
      { "name": "getServletContextName", "parameterTypes": [] },
      {
        "name": "getServletRegistration",
        "parameterTypes": ["java.lang.String"]
      },
      { "name": "getServletRegistrations", "parameterTypes": [] },
      { "name": "getSessionCookieConfig", "parameterTypes": [] },
      { "name": "getSessionTimeout", "parameterTypes": [] },
      { "name": "getVirtualServerName", "parameterTypes": [] },
      { "name": "log", "parameterTypes": ["java.lang.String"] },
      {
        "name": "log",
        "parameterTypes": ["java.lang.String", "java.lang.Throwable"]
      },
      { "name": "removeAttribute", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setAttribute",
        "parameterTypes": ["java.lang.String", "java.lang.Object"]
      },
      {
        "name": "setInitParameter",
        "parameterTypes": ["java.lang.String", "java.lang.String"]
      },
      {
        "name": "setRequestCharacterEncoding",
        "parameterTypes": ["java.lang.String"]
      },
      {
        "name": "setResponseCharacterEncoding",
        "parameterTypes": ["java.lang.String"]
      },
      { "name": "setSessionTimeout", "parameterTypes": ["int"] },
      { "name": "setSessionTrackingModes", "parameterTypes": ["java.util.Set"] }
    ]
  },
  {
    "name": "org.apache.catalina.loader.JdbcLeakPrevention",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      { "name": "clearJdbcDriverRegistrations", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.apache.catalina.util.CharsetMapper",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.coyote.AbstractProtocol",
    "methods": [
      { "name": "getAddress", "parameterTypes": [] },
      { "name": "getLocalPort", "parameterTypes": [] },
      { "name": "getProperty", "parameterTypes": ["java.lang.String"] },
      { "name": "setPort", "parameterTypes": ["int"] },
      {
        "name": "setProperty",
        "parameterTypes": ["java.lang.String", "java.lang.String"]
      }
    ]
  },
  {
    "name": "org.apache.coyote.http11.AbstractHttp11Protocol",
    "methods": [{ "name": "isSSLEnabled", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.coyote.http11.Http11NioProtocol",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.el.ExpressionFactoryImpl",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.hc.client5.http.impl.classic.HttpClients"
  },
  {
    "name": "org.apache.jasper.compiler.JspConfig"
  },
  {
    "name": "org.apache.jasper.servlet.JspServlet"
  },
  {
    "name": "org.apache.kafka.clients.consumer.CooperativeStickyAssignor",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.kafka.clients.consumer.RangeAssignor",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.kafka.common.metrics.stats.CumulativeCount"
  },
  {
    "name": "org.apache.kafka.common.metrics.stats.CumulativeSum"
  },
  {
    "name": "org.apache.kafka.common.serialization.ByteArrayDeserializer",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.kafka.common.serialization.StringDeserializer",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.kafka.common.serialization.StringSerializer",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.apache.kafka.common.utils.AppInfoParser$AppInfo",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.apache.kafka.common.utils.AppInfoParser$AppInfoMBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.impl.Log4jContextFactory"
  },
  {
    "name": "org.apache.tomcat.util.net.AbstractEndpoint",
    "methods": [{ "name": "setBindOnInit", "parameterTypes": ["boolean"] }]
  },
  {
    "name": "org.apache.tomcat.util.net.NioEndpoint",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.tomcat.websocket.server.WsFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.crac.Core"
  },
  {
    "name": "org.eclipse.collections.api.list.ImmutableList"
  },
  {
    "name": "org.eclipse.core.runtime.FileLocator"
  },
  {
    "name": "org.eclipse.jetty.client.HttpClient"
  },
  {
    "name": "org.graalvm.nativeimage.ImageInfo",
    "methods": [{ "name": "inImageCode", "parameterTypes": [] }]
  },
  {
    "name": "org.h2.Driver"
  },
  {
    "name": "org.hibernate.validator.internal.engine.AbstractConfigurationImpl",
    "methods": [
      {
        "name": "externalClassLoader",
        "parameterTypes": ["java.lang.ClassLoader"]
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.engine.ConfigurationImpl"
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Log_$logger",
    "methods": [
      { "name": "<init>", "parameterTypes": ["org.jboss.logging.Logger"] }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Log_$logger_en"
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Messages_$bundle",
    "fields": [{ "name": "INSTANCE" }]
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Messages_$bundle_en"
  },
  {
    "name": "org.hl7.fhir.dstu3.model.Constants"
  },
  {
    "name": "org.hl7.fhir.instance.model.api.IAnyResource",
    "allPublicFields": true
  },
  {
    "name": "org.hl7.fhir.instance.model.api.IBase",
    "allPublicFields": true
  },
  {
    "name": "org.hl7.fhir.instance.model.api.IBaseBundle",
    "allPublicFields": true
  },
  {
    "name": "org.hl7.fhir.instance.model.api.IBaseConformance",
    "allPublicFields": true
  },
  {
    "name": "org.hl7.fhir.instance.model.api.IBaseHasExtensions",
    "allPublicFields": true
  },
  {
    "name": "org.hl7.fhir.instance.model.api.IBaseHasModifierExtensions",
    "allPublicFields": true
  },
  {
    "name": "org.hl7.fhir.instance.model.api.IBaseParameters",
    "allPublicFields": true
  },
  {
    "name": "org.hl7.fhir.instance.model.api.IDomainResource",
    "allPublicFields": true
  },
  {
    "name": "org.hl7.fhir.r4.hapi.ctx.FhirR4",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Account",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Account$CoverageComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Account$GuarantorComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ActivityDefinition"
  },
  {
    "name": "org.hl7.fhir.r4.model.Address",
    "allDeclaredFields": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Address$AddressTypeEnumFactory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.AdverseEvent"
  },
  {
    "name": "org.hl7.fhir.r4.model.Age",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.AllergyIntolerance",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.AllergyIntolerance$AllergyIntoleranceReactionComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Annotation",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Appointment",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Appointment$AppointmentParticipantComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.AppointmentResponse",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Attachment",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.AuditEvent"
  },
  {
    "name": "org.hl7.fhir.r4.model.BackboneElement",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.BackboneType",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Base",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Base64BinaryType"
  },
  {
    "name": "org.hl7.fhir.r4.model.BaseExtension",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.BaseNarrative",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.BaseReference",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.BaseResource",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Basic"
  },
  {
    "name": "org.hl7.fhir.r4.model.Binary"
  },
  {
    "name": "org.hl7.fhir.r4.model.BiologicallyDerivedProduct"
  },
  {
    "name": "org.hl7.fhir.r4.model.BodyStructure"
  },
  {
    "name": "org.hl7.fhir.r4.model.BooleanType",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Bundle",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Bundle$BundleEntryComponent",
    "allDeclaredFields": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Bundle$BundleEntryRequestComponent",
    "allDeclaredFields": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Bundle$BundleEntryResponseComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Bundle$BundleEntrySearchComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Bundle$BundleLinkComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Bundle$BundleTypeEnumFactory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Bundle$HTTPVerbEnumFactory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.CanonicalType"
  },
  {
    "name": "org.hl7.fhir.r4.model.CapabilityStatement",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.CapabilityStatement$CapabilityStatementDocumentComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.CapabilityStatement$CapabilityStatementImplementationComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.CapabilityStatement$CapabilityStatementKindEnumFactory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.CapabilityStatement$CapabilityStatementMessagingComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.CapabilityStatement$CapabilityStatementMessagingEndpointComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.CapabilityStatement$CapabilityStatementMessagingSupportedMessageComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.CapabilityStatement$CapabilityStatementRestComponent",
    "allDeclaredFields": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.CapabilityStatement$CapabilityStatementRestResourceComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.CapabilityStatement$CapabilityStatementRestResourceOperationComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.CapabilityStatement$CapabilityStatementRestResourceSearchParamComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.CapabilityStatement$CapabilityStatementRestSecurityComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.CapabilityStatement$CapabilityStatementSoftwareComponent",
    "allDeclaredFields": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.CapabilityStatement$ResourceInteractionComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.CapabilityStatement$RestfulCapabilityModeEnumFactory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.CapabilityStatement$SystemInteractionComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.CarePlan",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.CarePlan$CarePlanActivityComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.CarePlan$CarePlanActivityDetailComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.CareTeam",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.CareTeam$CareTeamParticipantComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.CatalogEntry"
  },
  {
    "name": "org.hl7.fhir.r4.model.ChargeItem"
  },
  {
    "name": "org.hl7.fhir.r4.model.ChargeItemDefinition"
  },
  {
    "name": "org.hl7.fhir.r4.model.Claim",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Claim$AccidentComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Claim$CareTeamComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Claim$DetailComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Claim$DiagnosisComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Claim$InsuranceComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Claim$ItemComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Claim$PayeeComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Claim$ProcedureComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Claim$RelatedClaimComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Claim$SubDetailComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Claim$SupportingInformationComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ClaimResponse",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.ClaimResponse$AddedItemComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ClaimResponse$AddedItemDetailComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ClaimResponse$AddedItemSubDetailComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ClaimResponse$AdjudicationComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ClaimResponse$ErrorComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ClaimResponse$InsuranceComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ClaimResponse$ItemComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ClaimResponse$ItemDetailComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ClaimResponse$NoteComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ClaimResponse$PaymentComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ClaimResponse$SubDetailComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ClaimResponse$TotalComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ClinicalImpression",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.ClinicalImpression$ClinicalImpressionFindingComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ClinicalImpression$ClinicalImpressionInvestigationComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.CodeSystem"
  },
  {
    "name": "org.hl7.fhir.r4.model.CodeType",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.CodeableConcept",
    "allDeclaredFields": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Coding",
    "allDeclaredFields": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Communication"
  },
  {
    "name": "org.hl7.fhir.r4.model.CommunicationRequest",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.CommunicationRequest$CommunicationRequestPayloadComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.CompartmentDefinition"
  },
  {
    "name": "org.hl7.fhir.r4.model.Composition",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Composition$CompositionAttesterComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Composition$CompositionEventComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Composition$CompositionRelatesToComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Composition$SectionComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ConceptMap"
  },
  {
    "name": "org.hl7.fhir.r4.model.Condition",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Condition$ConditionEvidenceComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Condition$ConditionStageComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Consent"
  },
  {
    "name": "org.hl7.fhir.r4.model.Constants",
    "fields": [{ "name": "VERSION" }]
  },
  {
    "name": "org.hl7.fhir.r4.model.ContactDetail",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ContactPoint",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Contract",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Contract$ActionComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Contract$ActionSubjectComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Contract$AnswerComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Contract$AssetContextComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Contract$ComputableLanguageComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Contract$ContentDefinitionComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Contract$ContractAssetComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Contract$ContractOfferComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Contract$ContractPartyComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Contract$FriendlyLanguageComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Contract$LegalLanguageComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Contract$SecurityLabelComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Contract$SignatoryComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Contract$TermComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Contract$ValuedItemComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Contributor",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Count",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Coverage",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Coverage$ClassComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Coverage$CostToBeneficiaryComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Coverage$ExemptionComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.CoverageEligibilityRequest"
  },
  {
    "name": "org.hl7.fhir.r4.model.CoverageEligibilityResponse"
  },
  {
    "name": "org.hl7.fhir.r4.model.DataRequirement",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.DataRequirement$DataRequirementCodeFilterComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.DataRequirement$DataRequirementDateFilterComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.DataRequirement$DataRequirementSortComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.DateTimeType",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.DateType",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.DecimalType",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.DetectedIssue",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.DetectedIssue$DetectedIssueEvidenceComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.DetectedIssue$DetectedIssueMitigationComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Device",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Device$DeviceDeviceNameComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Device$DevicePropertyComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Device$DeviceSpecializationComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Device$DeviceUdiCarrierComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Device$DeviceVersionComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.DeviceDefinition",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.DeviceDefinition$DeviceDefinitionCapabilityComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.DeviceDefinition$DeviceDefinitionDeviceNameComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.DeviceDefinition$DeviceDefinitionMaterialComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.DeviceDefinition$DeviceDefinitionPropertyComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.DeviceDefinition$DeviceDefinitionSpecializationComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.DeviceDefinition$DeviceDefinitionUdiDeviceIdentifierComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.DeviceMetric",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.DeviceMetric$DeviceMetricCalibrationComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.DeviceRequest",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.DeviceRequest$DeviceRequestParameterComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.DeviceUseStatement"
  },
  {
    "name": "org.hl7.fhir.r4.model.DiagnosticReport",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.DiagnosticReport$DiagnosticReportMediaComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Distance",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.DocumentManifest"
  },
  {
    "name": "org.hl7.fhir.r4.model.DocumentReference",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.DocumentReference$DocumentReferenceContentComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.DocumentReference$DocumentReferenceContextComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.DocumentReference$DocumentReferenceRelatesToComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.DomainResource",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Dosage",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Dosage$DosageDoseAndRateComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Duration",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.EffectEvidenceSynthesis"
  },
  {
    "name": "org.hl7.fhir.r4.model.Element",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ElementDefinition",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ElementDefinition$ElementDefinitionBaseComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ElementDefinition$ElementDefinitionBindingComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ElementDefinition$ElementDefinitionConstraintComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ElementDefinition$ElementDefinitionExampleComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ElementDefinition$ElementDefinitionMappingComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ElementDefinition$ElementDefinitionSlicingComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ElementDefinition$ElementDefinitionSlicingDiscriminatorComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ElementDefinition$TypeRefComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Encounter",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Encounter$ClassHistoryComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Encounter$DiagnosisComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Encounter$EncounterHospitalizationComponent",
    "allDeclaredFields": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Encounter$EncounterLocationComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Encounter$EncounterParticipantComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Encounter$EncounterStatusEnumFactory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Encounter$StatusHistoryComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Endpoint",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.EnrollmentRequest"
  },
  {
    "name": "org.hl7.fhir.r4.model.EnrollmentResponse"
  },
  {
    "name": "org.hl7.fhir.r4.model.Enumeration",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["org.hl7.fhir.r4.model.EnumFactory"]
      }
    ]
  },
  {
    "name": "org.hl7.fhir.r4.model.Enumerations$AdministrativeGenderEnumFactory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Enumerations$FHIRVersionEnumFactory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Enumerations$PublicationStatusEnumFactory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.EpisodeOfCare",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.EpisodeOfCare$DiagnosisComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.EpisodeOfCare$EpisodeOfCareStatusHistoryComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.EventDefinition"
  },
  {
    "name": "org.hl7.fhir.r4.model.Evidence"
  },
  {
    "name": "org.hl7.fhir.r4.model.EvidenceVariable"
  },
  {
    "name": "org.hl7.fhir.r4.model.ExampleScenario"
  },
  {
    "name": "org.hl7.fhir.r4.model.ExplanationOfBenefit"
  },
  {
    "name": "org.hl7.fhir.r4.model.Expression",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Extension",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.FamilyMemberHistory",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.FamilyMemberHistory$FamilyMemberHistoryConditionComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Flag"
  },
  {
    "name": "org.hl7.fhir.r4.model.Goal",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Goal$GoalTargetComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.GraphDefinition"
  },
  {
    "name": "org.hl7.fhir.r4.model.Group",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Group$GroupCharacteristicComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Group$GroupMemberComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.GuidanceResponse"
  },
  {
    "name": "org.hl7.fhir.r4.model.HealthcareService",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.HealthcareService$HealthcareServiceAvailableTimeComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.HealthcareService$HealthcareServiceEligibilityComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.HealthcareService$HealthcareServiceNotAvailableComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.HumanName",
    "allDeclaredFields": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.IdType",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Identifier",
    "allDeclaredFields": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Identifier$IdentifierUseEnumFactory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.ImagingStudy",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.ImagingStudy$ImagingStudySeriesComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ImagingStudy$ImagingStudySeriesInstanceComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ImagingStudy$ImagingStudySeriesPerformerComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Immunization",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Immunization$ImmunizationEducationComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Immunization$ImmunizationPerformerComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Immunization$ImmunizationProtocolAppliedComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Immunization$ImmunizationReactionComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ImmunizationEvaluation",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.ImmunizationRecommendation",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.ImmunizationRecommendation$ImmunizationRecommendationRecommendationComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ImmunizationRecommendation$ImmunizationRecommendationRecommendationDateCriterionComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ImplementationGuide"
  },
  {
    "name": "org.hl7.fhir.r4.model.InstantType",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.InsurancePlan",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.InsurancePlan$CoverageBenefitComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.InsurancePlan$CoverageBenefitLimitComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.InsurancePlan$InsurancePlanContactComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.InsurancePlan$InsurancePlanCoverageComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.InsurancePlan$InsurancePlanPlanComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.InsurancePlan$InsurancePlanPlanGeneralCostComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.InsurancePlan$InsurancePlanPlanSpecificCostComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.InsurancePlan$PlanBenefitComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.InsurancePlan$PlanBenefitCostComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.IntegerType"
  },
  {
    "name": "org.hl7.fhir.r4.model.Invoice"
  },
  {
    "name": "org.hl7.fhir.r4.model.Library"
  },
  {
    "name": "org.hl7.fhir.r4.model.Linkage"
  },
  {
    "name": "org.hl7.fhir.r4.model.ListResource"
  },
  {
    "name": "org.hl7.fhir.r4.model.Location",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Location$LocationHoursOfOperationComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Location$LocationPositionComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.MarkdownType"
  },
  {
    "name": "org.hl7.fhir.r4.model.MarketingStatus",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Measure"
  },
  {
    "name": "org.hl7.fhir.r4.model.MeasureReport"
  },
  {
    "name": "org.hl7.fhir.r4.model.Media",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Medication",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Medication$MedicationBatchComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Medication$MedicationIngredientComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.MedicationAdministration",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.MedicationAdministration$MedicationAdministrationDosageComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.MedicationAdministration$MedicationAdministrationPerformerComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.MedicationDispense",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.MedicationDispense$MedicationDispensePerformerComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.MedicationDispense$MedicationDispenseSubstitutionComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.MedicationKnowledge"
  },
  {
    "name": "org.hl7.fhir.r4.model.MedicationRequest",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.MedicationRequest$MedicationRequestDispenseRequestComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.MedicationRequest$MedicationRequestDispenseRequestInitialFillComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.MedicationRequest$MedicationRequestSubstitutionComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.MedicationStatement",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.MedicinalProduct"
  },
  {
    "name": "org.hl7.fhir.r4.model.MedicinalProductAuthorization"
  },
  {
    "name": "org.hl7.fhir.r4.model.MedicinalProductContraindication"
  },
  {
    "name": "org.hl7.fhir.r4.model.MedicinalProductIndication"
  },
  {
    "name": "org.hl7.fhir.r4.model.MedicinalProductIngredient"
  },
  {
    "name": "org.hl7.fhir.r4.model.MedicinalProductInteraction"
  },
  {
    "name": "org.hl7.fhir.r4.model.MedicinalProductManufactured"
  },
  {
    "name": "org.hl7.fhir.r4.model.MedicinalProductPackaged"
  },
  {
    "name": "org.hl7.fhir.r4.model.MedicinalProductPharmaceutical"
  },
  {
    "name": "org.hl7.fhir.r4.model.MedicinalProductUndesirableEffect"
  },
  {
    "name": "org.hl7.fhir.r4.model.MessageDefinition"
  },
  {
    "name": "org.hl7.fhir.r4.model.MessageHeader"
  },
  {
    "name": "org.hl7.fhir.r4.model.Meta",
    "allDeclaredFields": true,
    "queryAllPublicConstructors": true,
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      { "name": "copy", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.hl7.fhir.r4.model.MetadataResource",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.MolecularSequence",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.MolecularSequence$MolecularSequenceQualityComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.MolecularSequence$MolecularSequenceQualityRocComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.MolecularSequence$MolecularSequenceReferenceSeqComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.MolecularSequence$MolecularSequenceRepositoryComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.MolecularSequence$MolecularSequenceStructureVariantComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.MolecularSequence$MolecularSequenceStructureVariantInnerComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.MolecularSequence$MolecularSequenceStructureVariantOuterComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.MolecularSequence$MolecularSequenceVariantComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Money",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.MoneyQuantity",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.NamingSystem"
  },
  {
    "name": "org.hl7.fhir.r4.model.Narrative",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.NutritionOrder",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.NutritionOrder$NutritionOrderEnteralFormulaAdministrationComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.NutritionOrder$NutritionOrderEnteralFormulaComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.NutritionOrder$NutritionOrderOralDietComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.NutritionOrder$NutritionOrderOralDietNutrientComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.NutritionOrder$NutritionOrderOralDietTextureComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.NutritionOrder$NutritionOrderSupplementComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Observation",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Observation$ObservationComponentComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Observation$ObservationReferenceRangeComponent",
    "allDeclaredFields": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Observation$ObservationStatusEnumFactory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.ObservationDefinition"
  },
  {
    "name": "org.hl7.fhir.r4.model.OidType"
  },
  {
    "name": "org.hl7.fhir.r4.model.OperationDefinition"
  },
  {
    "name": "org.hl7.fhir.r4.model.OperationOutcome"
  },
  {
    "name": "org.hl7.fhir.r4.model.Organization",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Organization$OrganizationContactComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.OrganizationAffiliation"
  },
  {
    "name": "org.hl7.fhir.r4.model.ParameterDefinition",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Parameters",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Parameters$ParametersParameterComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Patient",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Patient$ContactComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Patient$PatientCommunicationComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Patient$PatientLinkComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.PaymentNotice"
  },
  {
    "name": "org.hl7.fhir.r4.model.PaymentReconciliation"
  },
  {
    "name": "org.hl7.fhir.r4.model.Period",
    "allDeclaredFields": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Person"
  },
  {
    "name": "org.hl7.fhir.r4.model.PlanDefinition",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.PlanDefinition$PlanDefinitionActionComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.PlanDefinition$PlanDefinitionActionConditionComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.PlanDefinition$PlanDefinitionActionDynamicValueComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.PlanDefinition$PlanDefinitionActionParticipantComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.PlanDefinition$PlanDefinitionActionRelatedActionComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.PlanDefinition$PlanDefinitionGoalComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.PlanDefinition$PlanDefinitionGoalTargetComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Population",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.PositiveIntType"
  },
  {
    "name": "org.hl7.fhir.r4.model.Practitioner",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Practitioner$PractitionerQualificationComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.PractitionerRole",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.PractitionerRole$PractitionerRoleAvailableTimeComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.PractitionerRole$PractitionerRoleNotAvailableComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Procedure",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Procedure$ProcedureFocalDeviceComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Procedure$ProcedurePerformerComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ProdCharacteristic",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ProductShelfLife",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Provenance",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Provenance$ProvenanceAgentComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Provenance$ProvenanceEntityComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Quantity",
    "allDeclaredFields": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Questionnaire",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Questionnaire$QuestionnaireItemAnswerOptionComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Questionnaire$QuestionnaireItemComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Questionnaire$QuestionnaireItemEnableWhenComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Questionnaire$QuestionnaireItemInitialComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.QuestionnaireResponse",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.QuestionnaireResponse$QuestionnaireResponseItemAnswerComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.QuestionnaireResponse$QuestionnaireResponseItemComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Range",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Ratio",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Reference",
    "allDeclaredFields": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.RelatedArtifact",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.RelatedPerson",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.RelatedPerson$RelatedPersonCommunicationComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.RequestGroup",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.RequestGroup$RequestGroupActionComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.RequestGroup$RequestGroupActionConditionComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.RequestGroup$RequestGroupActionRelatedActionComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ResearchDefinition"
  },
  {
    "name": "org.hl7.fhir.r4.model.ResearchElementDefinition"
  },
  {
    "name": "org.hl7.fhir.r4.model.ResearchStudy",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.ResearchStudy$ResearchStudyArmComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ResearchStudy$ResearchStudyObjectiveComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.ResearchSubject"
  },
  {
    "name": "org.hl7.fhir.r4.model.Resource",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.RiskAssessment",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.RiskAssessment$RiskAssessmentPredictionComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.RiskEvidenceSynthesis"
  },
  {
    "name": "org.hl7.fhir.r4.model.SampledData",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Schedule",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.SearchParameter"
  },
  {
    "name": "org.hl7.fhir.r4.model.ServiceRequest",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Signature",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.SimpleQuantity",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Slot",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Specimen",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Specimen$SpecimenCollectionComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Specimen$SpecimenContainerComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Specimen$SpecimenProcessingComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.SpecimenDefinition"
  },
  {
    "name": "org.hl7.fhir.r4.model.StringType",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.StructureDefinition"
  },
  {
    "name": "org.hl7.fhir.r4.model.StructureMap"
  },
  {
    "name": "org.hl7.fhir.r4.model.Subscription"
  },
  {
    "name": "org.hl7.fhir.r4.model.Substance",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Substance$SubstanceIngredientComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Substance$SubstanceInstanceComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.SubstanceAmount",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.SubstanceAmount$SubstanceAmountReferenceRangeComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.SubstanceNucleicAcid"
  },
  {
    "name": "org.hl7.fhir.r4.model.SubstancePolymer"
  },
  {
    "name": "org.hl7.fhir.r4.model.SubstanceProtein"
  },
  {
    "name": "org.hl7.fhir.r4.model.SubstanceReferenceInformation"
  },
  {
    "name": "org.hl7.fhir.r4.model.SubstanceSourceMaterial"
  },
  {
    "name": "org.hl7.fhir.r4.model.SubstanceSpecification"
  },
  {
    "name": "org.hl7.fhir.r4.model.SupplyDelivery"
  },
  {
    "name": "org.hl7.fhir.r4.model.SupplyRequest"
  },
  {
    "name": "org.hl7.fhir.r4.model.Task",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.Task$ParameterComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Task$TaskOutputComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Task$TaskRestrictionComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.TerminologyCapabilities"
  },
  {
    "name": "org.hl7.fhir.r4.model.TestReport"
  },
  {
    "name": "org.hl7.fhir.r4.model.TestScript"
  },
  {
    "name": "org.hl7.fhir.r4.model.TimeType"
  },
  {
    "name": "org.hl7.fhir.r4.model.Timing",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Timing$TimingRepeatComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.TriggerDefinition",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.Type",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.UnsignedIntType"
  },
  {
    "name": "org.hl7.fhir.r4.model.UriType",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.UrlType"
  },
  {
    "name": "org.hl7.fhir.r4.model.UsageContext",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.UuidType"
  },
  {
    "name": "org.hl7.fhir.r4.model.ValueSet"
  },
  {
    "name": "org.hl7.fhir.r4.model.VerificationResult"
  },
  {
    "name": "org.hl7.fhir.r4.model.VisionPrescription",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.hl7.fhir.r4.model.VisionPrescription$PrismComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4.model.VisionPrescription$VisionPrescriptionLensSpecificationComponent",
    "allDeclaredFields": true
  },
  {
    "name": "org.hl7.fhir.r4b.model.Constants"
  },
  {
    "name": "org.hl7.fhir.r5.model.Constants"
  },
  {
    "name": "org.hl7.fhir.utilities.xhtml.XhtmlNode"
  },
  {
    "name": "org.jboss.logging.Logger"
  },
  {
    "name": "org.jmolecules.spring.IdentifierToPrimitivesConverter"
  },
  {
    "name": "org.joda.time.ReadableInstant"
  },
  {
    "name": "org.miracum.etl.fhirgateway.AppConfig",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": ["org.springframework.beans.factory.BeanFactory"]
      }
    ]
  },
  {
    "name": "org.miracum.etl.fhirgateway.AppConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "fields": [{ "name": "CGLIB$FACTORY_DATA" }],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": ["org.springframework.cglib.proxy.Callback[]"]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": ["org.springframework.cglib.proxy.Callback[]"]
      }
    ]
  },
  {
    "name": "org.miracum.etl.fhirgateway.AppConfig$$SpringCGLIB$$FastClass$$0",
    "methods": [{ "name": "<init>", "parameterTypes": ["java.lang.Class"] }]
  },
  {
    "name": "org.miracum.etl.fhirgateway.AppConfig$$SpringCGLIB$$FastClass$$1",
    "methods": [{ "name": "<init>", "parameterTypes": ["java.lang.Class"] }]
  },
  {
    "name": "org.miracum.etl.fhirgateway.FhirGatewayApplication",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "main", "parameterTypes": ["java.lang.String[]"] },
      {
        "name": "setBeanFactory",
        "parameterTypes": ["org.springframework.beans.factory.BeanFactory"]
      }
    ]
  },
  {
    "name": "org.miracum.etl.fhirgateway.FhirGatewayApplication$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "fields": [{ "name": "CGLIB$FACTORY_DATA" }],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": ["org.springframework.cglib.proxy.Callback[]"]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": ["org.springframework.cglib.proxy.Callback[]"]
      }
    ]
  },
  {
    "name": "org.miracum.etl.fhirgateway.FhirGatewayApplication__ApplicationContextInitializer",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.miracum.etl.fhirgateway.FhirSystemsConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": ["org.springframework.beans.factory.BeanFactory"]
      },
      { "name": "setLoinc", "parameterTypes": ["java.lang.String"] }
    ]
  },
  {
    "name": "org.miracum.etl.fhirgateway.FhirSystemsConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "fields": [{ "name": "CGLIB$FACTORY_DATA" }],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": ["org.springframework.cglib.proxy.Callback[]"]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": ["org.springframework.cglib.proxy.Callback[]"]
      }
    ]
  },
  {
    "name": "org.miracum.etl.fhirgateway.controllers.FhirController",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "ca.uhn.fhir.context.FhirContext",
          "org.miracum.etl.fhirgateway.processors.ResourcePipeline"
        ]
      }
    ]
  },
  {
    "name": "org.miracum.etl.fhirgateway.processors.BaseKafkaProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "process",
        "parameterTypes": ["org.springframework.messaging.Message"]
      }
    ]
  },
  {
    "name": "org.miracum.etl.fhirgateway.processors.FhirPseudonymizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "process", "parameterTypes": ["org.hl7.fhir.r4.model.Bundle"] }
    ]
  },
  {
    "name": "org.miracum.etl.fhirgateway.processors.IPseudonymizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.miracum.etl.fhirgateway.processors.KafkaProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.miracum.etl.fhirgateway.processors.ResourcePipeline",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": ["org.springframework.beans.factory.BeanFactory"]
      }
    ]
  },
  {
    "name": "org.miracum.etl.fhirgateway.processors.KafkaProcessor$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "fields": [{ "name": "CGLIB$FACTORY_DATA" }],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": ["org.springframework.cglib.proxy.Callback[]"]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": ["org.springframework.cglib.proxy.Callback[]"]
      }
    ]
  },
  {
    "name": "org.miracum.etl.fhirgateway.processors.KafkaProcessor$$SpringCGLIB$$FastClass$$0",
    "methods": [{ "name": "<init>", "parameterTypes": ["java.lang.Class"] }]
  },
  {
    "name": "org.miracum.etl.fhirgateway.processors.KafkaProcessor$$SpringCGLIB$$FastClass$$1",
    "methods": [{ "name": "<init>", "parameterTypes": ["java.lang.Class"] }]
  },
  {
    "name": "org.miracum.etl.fhirgateway.processors.LoincHarmonizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.web.client.RestTemplate",
          "java.net.URI",
          "org.miracum.etl.fhirgateway.FhirSystemsConfig",
          "boolean",
          "org.springframework.retry.support.RetryTemplate"
        ]
      }
    ]
  },
  {
    "name": "org.miracum.etl.fhirgateway.processors.ResourcePipeline",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.miracum.etl.fhirgateway.stores.PostgresFhirResourceRepository",
          "org.miracum.etl.fhirgateway.stores.FhirServerResourceRepository",
          "org.miracum.etl.fhirgateway.processors.LoincHarmonizer",
          "org.miracum.etl.fhirgateway.processors.IPseudonymizer",
          "boolean",
          "boolean",
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.miracum.etl.fhirgateway.stores.FhirResourceRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.miracum.etl.fhirgateway.stores.FhirServerResourceRepository",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "ca.uhn.fhir.context.FhirContext",
          "ca.uhn.fhir.rest.client.api.IGenericClient"
        ]
      },
      { "name": "save", "parameterTypes": ["org.hl7.fhir.r4.model.Bundle"] }
    ]
  },
  {
    "name": "org.miracum.etl.fhirgateway.stores.PostgresFhirResourceRepository",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "ca.uhn.fhir.context.FhirContext",
          "org.springframework.jdbc.core.JdbcTemplate",
          "org.springframework.retry.support.RetryTemplate"
        ]
      },
      { "name": "save", "parameterTypes": ["org.hl7.fhir.r4.model.Bundle"] }
    ]
  },
  {
    "name": "org.miracum.kafka.serializers.KafkaFhirDeserializer",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.miracum.kafka.serializers.KafkaFhirSerializer",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.postgresql.Driver",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.postgresql.core.QueryExecutorCloseAction",
    "fields": [{ "name": "pgStream" }]
  },
  {
    "name": "org.postgresql.geometric.PGBox"
  },
  {
    "name": "org.postgresql.geometric.PGbox"
  },
  {
    "name": "org.postgresql.geometric.PGcircle"
  },
  {
    "name": "org.postgresql.geometric.PGline"
  },
  {
    "name": "org.postgresql.geometric.PGlseg"
  },
  {
    "name": "org.postgresql.geometric.PGpath"
  },
  {
    "name": "org.postgresql.geometric.PGpoint"
  },
  {
    "name": "org.postgresql.geometric.PGpolygon"
  },
  {
    "name": "org.postgresql.jdbc.PgStatement",
    "fields": [
      { "name": "cancelTimerTask" },
      { "name": "isClosed" },
      { "name": "statementState" }
    ]
  },
  {
    "name": "org.postgresql.jdbc.TypeInfoCache"
  },
  {
    "name": "org.postgresql.util.PGobject"
  },
  {
    "name": "org.reactivestreams.Publisher"
  },
  {
    "name": "org.reactivestreams.Subscriber",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.slf4j.bridge.SLF4JBridgeHandler"
  },
  {
    "name": "org.slf4j.spi.LocationAwareLogger",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.Advisor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [{ "name": "isPerInstance", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.aop.PointcutAdvisor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.SpringProxy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.framework.Advised",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.framework.AopInfrastructureBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.ProxyConfig",
    "allDeclaredFields": true,
    "methods": [
      { "name": "setProxyTargetClass", "parameterTypes": ["boolean"] }
    ]
  },
  {
    "name": "org.springframework.aop.framework.ProxyProcessorSupport",
    "allDeclaredFields": true,
    "methods": [{ "name": "setOrder", "parameterTypes": ["int"] }]
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.scope.ScopedObject"
  },
  {
    "name": "org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getAdvice", "parameterTypes": [] },
      { "name": "getAdviceBeanName", "parameterTypes": [] },
      { "name": "setAdvice", "parameterTypes": ["org.aopalliance.aop.Advice"] },
      { "name": "setAdviceBeanName", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setBeanFactory",
        "parameterTypes": ["org.springframework.beans.factory.BeanFactory"]
      },
      { "name": "toString", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.aop.support.AbstractPointcutAdvisor",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "equals", "parameterTypes": ["java.lang.Object"] },
      { "name": "getOrder", "parameterTypes": [] },
      { "name": "hashCode", "parameterTypes": [] },
      { "name": "setOrder", "parameterTypes": ["int"] }
    ]
  },
  {
    "name": "org.springframework.aot.hint.annotation.Reflective",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aot.hint.annotation.RegisterReflectionForBinding",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.Aware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanClassLoaderAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.support.DefaultListableBeanFactory"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.beans.factory.support.DefaultListableBeanFactory"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.beans.factory.support.DefaultListableBeanFactory"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.beans.factory.support.DefaultListableBeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.BeanFactoryAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanNameAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.DisposableBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.FactoryBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [{ "name": "isSingleton", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.beans.factory.InitializingBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.SmartInitializingSingleton",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Autowired",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Qualifier",
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "value", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.beans.factory.annotation.Value",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.aot.BeanRegistrationAotProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanExpressionContext",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "methods": [{ "name": "getBeanFactory", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.beans.factory.config.BeanFactoryPostProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanPostProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": ["java.lang.Object", "java.lang.String"]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": ["java.lang.Object", "java.lang.String"]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.config.DestructionAwareBeanPostProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.support.DefaultListableBeanFactory",
    "methods": [{ "name": "toBeanFactory", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.beans.factory.support.NullBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.ClearCachesApplicationListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.LazyInitializationExcludeFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.SpringApplication",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.SpringBootConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesHealthEndpointGroups",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesHealthEndpointGroupsPostProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessHealthEndpointGroups",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.HealthEndpointGroups"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnAvailableEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "match",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.ExposableEndpoint"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.MappingWebEndpointPathMapper",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getRootPath",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.EndpointId"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "getExposure", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "getInclude", "parameterTypes": [] },
      { "name": "setInclude", "parameterTypes": ["java.util.Set"] }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration$EndpointObjectMapperWebMvcConfigurer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "configureMessageConverters",
        "parameterTypes": ["java.util.List"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthContributorRegistry",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "registerContributor",
        "parameterTypes": ["java.lang.String", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthEndpointGroups",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "get", "parameterTypes": ["java.lang.String"] },
      { "name": "getNames", "parameterTypes": [] },
      { "name": "getPrimary", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredReactiveHealthContributorRegistry",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "registerContributor",
        "parameterTypes": ["java.lang.String", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupMembershipValidator",
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "afterSingletonsInstantiated", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": ["java.lang.Object", "java.lang.String"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getShowDetails", "parameterTypes": [] },
      {
        "name": "setShowDetails",
        "parameterTypes": ["org.springframework.boot.actuate.endpoint.Show"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getRoles", "parameterTypes": [] },
      { "name": "getShowComponents", "parameterTypes": [] },
      { "name": "getStatus", "parameterTypes": [] },
      { "name": "setRoles", "parameterTypes": ["java.util.Set"] },
      {
        "name": "setShowComponents",
        "parameterTypes": ["org.springframework.boot.actuate.endpoint.Show"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.ConditionalOnEnabledInfoContributor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.integration.IntegrationGraphEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["org.springframework.beans.factory.ObjectProvider"]
      },
      { "name": "afterPropertiesSet", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration$KafkaStreamsMetricsConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterSingletonsInstantiated", "parameterTypes": [] },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": ["java.lang.Object", "java.lang.String"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration$MeterRegistryCloser",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": ["org.springframework.context.ApplicationEvent"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "accept",
        "parameterTypes": ["io.micrometer.core.instrument.Meter$Id"]
      },
      {
        "name": "configure",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id",
          "io.micrometer.core.instrument.distribution.DistributionStatisticConfig"
        ]
      },
      {
        "name": "map",
        "parameterTypes": ["io.micrometer.core.instrument.Meter$Id"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.data.MetricsRepositoryMethodInvocationListenerBeanPostProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": ["java.lang.Object", "java.lang.String"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.ConditionalOnEnabledMetricsExport",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusMetricsExportAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusMetricsExportAutoConfiguration$PrometheusScrapeEndpointConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusPropertiesConfigAdapter",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "descriptions", "parameterTypes": [] },
      { "name": "get", "parameterTypes": ["java.lang.String"] },
      { "name": "histogramFlavor", "parameterTypes": [] },
      { "name": "prefix", "parameterTypes": [] },
      { "name": "step", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration$DataSourcePoolMetadataMeterBinder",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": ["io.micrometer.core.instrument.MeterRegistry"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration$HikariDataSourceMeterBinder",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": ["io.micrometer.core.instrument.MeterRegistry"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationHandlerGrouping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryPostProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": ["java.lang.Object", "java.lang.String"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.PropertiesObservationFilterPredicate",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "map",
        "parameterTypes": ["io.micrometer.observation.Observation$Context"]
      },
      {
        "name": "test",
        "parameterTypes": ["java.lang.Object", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration$ObservabilitySchedulingConfigurer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "configureTasks",
        "parameterTypes": [
          "org.springframework.scheduling.config.ScheduledTaskRegistrar"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.tracing.LogCorrelationEnvironmentPostProcessor",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.EnableManagementContext",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["org.springframework.core.env.Environment"]
      },
      { "name": "afterSingletonsInstantiated", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementServletContext",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.availability.AvailabilityStateHealthIndicator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.availability.LivenessStateHealthIndicator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.availability.ReadinessStateHealthIndicator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.beans.BeansEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.cache.CachesEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.cache.CachesEndpointWebExtension",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.EndpointFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.EndpointsSupplier",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.ShowEditor"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.DeleteOperation",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.Endpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createOperationKey",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Operation"
        ]
      },
      { "name": "getEndpoints", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointExtension",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.FilteredEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.ReadOperation",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.Selector",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.WriteOperation",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.convert.ConversionServiceParameterValueMapper",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "mapParameterValue",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.invoke.OperationParameter",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "apply",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.EndpointId",
          "org.springframework.boot.actuate.endpoint.OperationType",
          "org.springframework.boot.actuate.endpoint.invoke.OperationParameters",
          "org.springframework.boot.actuate.endpoint.invoke.OperationInvoker"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints",
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "iterator", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.PathMapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onStartup",
        "parameterTypes": ["jakarta.servlet.ServletContext"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.EndpointWebExtension",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      { "name": "getEndpoints", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$LinksHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.AdditionalHealthEndpointPathsWebMvcHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping$WebMvcLinksHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.AbstractHealthIndicator",
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "health", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.actuate.health.CompositeHealthContributor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.ContributorRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.DefaultContributorRegistry",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "registerContributor",
        "parameterTypes": ["java.lang.String", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.DefaultHealthContributorRegistry",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getContributor", "parameterTypes": ["java.lang.String"] },
      { "name": "iterator", "parameterTypes": [] },
      {
        "name": "registerContributor",
        "parameterTypes": ["java.lang.String", "java.lang.Object"]
      },
      {
        "name": "unregisterContributor",
        "parameterTypes": ["java.lang.String"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.DefaultReactiveHealthContributorRegistry",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getContributor", "parameterTypes": ["java.lang.String"] },
      { "name": "iterator", "parameterTypes": [] },
      {
        "name": "registerContributor",
        "parameterTypes": ["java.lang.String", "java.lang.Object"]
      },
      {
        "name": "unregisterContributor",
        "parameterTypes": ["java.lang.String"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthContributor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthContributorRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointGroups",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "get",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.AdditionalHealthEndpointPath"
        ]
      },
      {
        "name": "getAllWithAdditionalPath",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.WebServerNamespace"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointGroupsPostProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointSupport",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getHealth", "parameterTypes": ["java.lang.Object", "boolean"] }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointWebExtension",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthIndicator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [{ "name": "getHealth", "parameterTypes": ["boolean"] }]
  },
  {
    "name": "org.springframework.boot.actuate.health.HttpCodeStatusMapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.NamedContributors",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [{ "name": "stream", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.actuate.health.PingHealthIndicator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.SimpleHttpCodeStatusMapper",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getStatusCode",
        "parameterTypes": ["org.springframework.boot.actuate.health.Status"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.SimpleStatusAggregator",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getAggregateStatus", "parameterTypes": ["java.util.Set"] }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.StatusAggregator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getAggregateStatus",
        "parameterTypes": ["org.springframework.boot.actuate.health.Status[]"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.info.InfoEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.integration.IntegrationGraphEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator",
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "afterPropertiesSet", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.actuate.logging.LoggersEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.management.HeapDumpWebEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.management.ThreadDumpEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.MetricsEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.data.DefaultRepositoryTagsProvider",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "repositoryTags",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterInvocation",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.export.prometheus.PrometheusScrapeEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": ["org.springframework.context.ApplicationEvent"]
      },
      { "name": "supportsEventType", "parameterTypes": ["java.lang.Class"] }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": ["io.micrometer.core.instrument.MeterRegistry"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.web.client.ObservationRestClientCustomizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": ["org.springframework.web.client.RestClient$Builder"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.web.client.ObservationRestTemplateCustomizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": ["org.springframework.web.client.RestTemplate"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "destroy", "parameterTypes": [] },
      {
        "name": "onApplicationEvent",
        "parameterTypes": ["org.springframework.context.ApplicationEvent"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.MappingDescriptionProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.MappingsEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.DispatcherServletsMappingDescriptionProvider",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "describeMappings",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      },
      { "name": "getMappingName", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.FiltersMappingDescriptionProvider",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "describeMappings",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      },
      { "name": "getMappingName", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.ServletsMappingDescriptionProvider",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "describeMappings",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      },
      { "name": "getMappingName", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.boot.ansi.AnsiOutput$Enabled",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackage",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": ["java.lang.String[]"] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureAfter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureBefore",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureOrder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.EnableAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.SpringBootApplication",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnExpression",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnNotWarDeployment",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnThreading",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration$JdbcRepositoriesConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration$SpringBootJdbcConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      },
      {
        "name": "dataAccessStrategyBean",
        "parameterTypes": [
          "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations",
          "org.springframework.data.jdbc.core.convert.JdbcConverter",
          "org.springframework.data.jdbc.core.mapping.JdbcMappingContext",
          "org.springframework.data.relational.core.dialect.Dialect"
        ]
      },
      {
        "name": "jdbcAggregateTemplate",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.data.jdbc.core.mapping.JdbcMappingContext",
          "org.springframework.data.jdbc.core.convert.JdbcConverter",
          "org.springframework.data.jdbc.core.convert.DataAccessStrategy"
        ]
      },
      {
        "name": "jdbcConverter",
        "parameterTypes": [
          "org.springframework.data.jdbc.core.mapping.JdbcMappingContext",
          "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations",
          "org.springframework.data.jdbc.core.convert.RelationResolver",
          "org.springframework.data.jdbc.core.convert.JdbcCustomConversions",
          "org.springframework.data.relational.core.dialect.Dialect"
        ]
      },
      { "name": "jdbcCustomConversions", "parameterTypes": [] },
      {
        "name": "jdbcDialect",
        "parameterTypes": [
          "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations"
        ]
      },
      { "name": "jdbcManagedTypes", "parameterTypes": [] },
      {
        "name": "jdbcMappingContext",
        "parameterTypes": [
          "java.util.Optional",
          "org.springframework.data.jdbc.core.convert.JdbcCustomConversions",
          "org.springframework.data.relational.RelationalManagedTypes"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConverters",
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "iterator", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationComponentScanConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationManagementConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationManagementConfiguration$EnableIntegrationManagementConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationTaskSchedulerConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "getPoller", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationProperties$Poller",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "setFixedDelay", "parameterTypes": ["java.time.Duration"] },
      { "name": "setMaxMessagesPerPoll", "parameterTypes": ["int"] }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      },
      { "name": "getOrder", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": ["java.lang.ClassLoader"]
      },
      { "name": "setPassword", "parameterTypes": ["java.lang.String"] },
      { "name": "setUrl", "parameterTypes": ["java.lang.String"] },
      { "name": "setUsername", "parameterTypes": ["java.lang.String"] }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getDriverClassName", "parameterTypes": [] },
      { "name": "getJdbcUrl", "parameterTypes": [] },
      { "name": "getPassword", "parameterTypes": [] },
      { "name": "getUsername", "parameterTypes": [] },
      { "name": "getXaDataSourceClassName", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jmx.JmxProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.DefaultKafkaConsumerFactoryCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.DefaultKafkaProducerFactoryCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.kafka.KafkaProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration$EnableKafkaConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.kafka.KafkaProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.KafkaConnectionDetails",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [{ "name": "getAdminBootstrapServers", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.KafkaProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getBootstrapServers", "parameterTypes": [] },
      { "name": "getConsumer", "parameterTypes": [] },
      { "name": "getProducer", "parameterTypes": [] },
      { "name": "getSecurity", "parameterTypes": [] },
      { "name": "getSsl", "parameterTypes": [] },
      { "name": "setBootstrapServers", "parameterTypes": ["java.util.List"] }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "setKeyDeserializer", "parameterTypes": ["java.lang.Class"] },
      { "name": "setValueDeserializer", "parameterTypes": ["java.lang.Class"] }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "setCompressionType", "parameterTypes": ["java.lang.String"] },
      { "name": "setKeySerializer", "parameterTypes": ["java.lang.Class"] },
      { "name": "setValueSerializer", "parameterTypes": ["java.lang.Class"] }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Security",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "setProtocol", "parameterTypes": ["java.lang.String"] }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setKeyStoreLocation",
        "parameterTypes": ["org.springframework.core.io.Resource"]
      },
      { "name": "setKeyStorePassword", "parameterTypes": ["java.lang.String"] },
      { "name": "setKeyStoreType", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setTrustStoreLocation",
        "parameterTypes": ["org.springframework.core.io.Resource"]
      },
      {
        "name": "setTrustStorePassword",
        "parameterTypes": ["java.lang.String"]
      },
      { "name": "setTrustStoreType", "parameterTypes": ["java.lang.String"] }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.PropertiesKafkaConnectionDetails",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getBootstrapServers", "parameterTypes": [] },
      { "name": "getConsumerBootstrapServers", "parameterTypes": [] },
      { "name": "getProducerBootstrapServers", "parameterTypes": [] },
      { "name": "getStreamsBootstrapServers", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.StreamsBuilderFactoryBeanCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.reactor.ReactorProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.ReactorProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.service.connection.ConnectionDetails",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getSchemaLocations", "parameterTypes": [] },
      {
        "name": "setMode",
        "parameterTypes": [
          "org.springframework.boot.sql.init.DatabaseInitializationMode"
        ]
      },
      { "name": "setSchemaLocations", "parameterTypes": ["java.util.List"] }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.FileWatcher",
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "close", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.ssl.SslProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "registerBundles",
        "parameterTypes": ["org.springframework.boot.ssl.SslBundleRegistry"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": ["org.springframework.transaction.TransactionManager"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "customize",
        "parameterTypes": ["org.springframework.transaction.TransactionManager"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidatorAdapter",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      { "name": "destroy", "parameterTypes": [] },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      },
      { "name": "supports", "parameterTypes": ["java.lang.Class"] },
      { "name": "unwrap", "parameterTypes": ["java.lang.Class"] },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.AutoConfiguredRestClientSsl",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "fromBundle", "parameterTypes": ["java.lang.String"] },
      {
        "name": "fromBundle",
        "parameterTypes": ["org.springframework.boot.ssl.SslBundle"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": ["org.springframework.web.client.RestClient$Builder"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestClientSsl",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      { "name": "getOrder", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.format.WebConversionService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      { "name": "getPrefix", "parameterTypes": [] },
      { "name": "getRelativePath", "parameterTypes": ["java.lang.String"] },
      { "name": "getServletUrlMapping", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "addUrlMappings", "parameterTypes": ["java.lang.String[]"] },
      { "name": "getPath", "parameterTypes": [] },
      { "name": "setUrlMappings", "parameterTypes": ["java.util.Collection"] }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      { "name": "getOrder", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      { "name": "getOrder", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      { "name": "getOrder", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ListableBeanFactory"
        ]
      },
      { "name": "flashMapManager", "parameterTypes": [] },
      { "name": "localeResolver", "parameterTypes": [] },
      { "name": "mvcContentNegotiationManager", "parameterTypes": [] },
      { "name": "mvcConversionService", "parameterTypes": [] },
      { "name": "mvcValidator", "parameterTypes": [] },
      {
        "name": "setResourceLoader",
        "parameterTypes": ["org.springframework.core.io.ResourceLoader"]
      },
      { "name": "themeResolver", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
          "org.springframework.beans.factory.ListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "addFormatters",
        "parameterTypes": ["org.springframework.format.FormatterRegistry"]
      },
      {
        "name": "addResourceHandlers",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"
        ]
      },
      {
        "name": "configureAsyncSupport",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"
        ]
      },
      {
        "name": "configureContentNegotiation",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"
        ]
      },
      {
        "name": "configureMessageConverters",
        "parameterTypes": ["java.util.List"]
      },
      {
        "name": "configurePathMatch",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.PathMatchConfigurer"
        ]
      },
      { "name": "getMessageCodesResolver", "parameterTypes": [] },
      {
        "name": "setServletContext",
        "parameterTypes": ["jakarta.servlet.ServletContext"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageNotAcceptableHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getOrder", "parameterTypes": [] },
      {
        "name": "resolveErrorView",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "org.springframework.http.HttpStatus",
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.autoconfigure.web.WebProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getOrder", "parameterTypes": [] },
      {
        "name": "registerErrorPages",
        "parameterTypes": [
          "org.springframework.boot.web.server.ErrorPageRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$StaticView",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getContentType", "parameterTypes": [] },
      {
        "name": "render",
        "parameterTypes": [
          "java.util.Map",
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      { "name": "getOrder", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailability",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      { "name": "getLivenessState", "parameterTypes": [] },
      { "name": "getReadinessState", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailabilityBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getLastChangeEvent", "parameterTypes": ["java.lang.Class"] },
      { "name": "getState", "parameterTypes": ["java.lang.Class"] },
      {
        "name": "getState",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.boot.availability.AvailabilityState"
        ]
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": ["org.springframework.context.ApplicationEvent"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.context.FileEncodingApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory",
          "org.springframework.boot.ConfigurableBootstrapContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataNotFoundAction",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties",
    "queryAllDeclaredConstructors": true,
    "fields": [{ "name": "this$0" }],
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["org.springframework.core.io.ResourceLoader"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory",
          "org.springframework.boot.context.properties.bind.Binder",
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.SpringApplication",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.logging.LoggingApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationProperties",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinding",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.DeprecatedConfigurationProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.EnableConfigurationProperties",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.bind.Name",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.env.PropertiesPropertySourceLoader",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.env.YamlPropertySourceLoader",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.jackson.JsonComponentModule",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      {
        "name": "setBeanFactory",
        "parameterTypes": ["org.springframework.beans.factory.BeanFactory"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModule",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModuleEntries",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.loader.launch.LaunchedClassLoader",
    "methods": [{ "name": "clearCache", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.logging.LogLevelEditor"
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem.Factory"
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.Factory"
  },
  {
    "name": "org.springframework.boot.logging.logback.ColorConverter",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem.Factory"
  },
  {
    "name": "org.springframework.boot.reactor.ReactorEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      { "name": "initializeDatabase", "parameterTypes": [] },
      {
        "name": "setResourceLoader",
        "parameterTypes": ["org.springframework.core.io.ResourceLoader"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.DatabaseInitializationModeEditor"
  },
  {
    "name": "org.springframework.boot.ssl.DefaultSslBundleRegistry",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addBundleUpdateHandler",
        "parameterTypes": ["java.lang.String", "java.util.function.Consumer"]
      },
      { "name": "getBundle", "parameterTypes": ["java.lang.String"] },
      {
        "name": "registerBundle",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.boot.ssl.SslBundle"
        ]
      },
      {
        "name": "updateBundle",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.boot.ssl.SslBundle"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.ssl.SslBundleRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.ssl.SslBundles",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.TaskExecutorBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.TaskSchedulerBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.client.RestClientCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.client.RestTemplateBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.client.RestTemplateCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addConnectorCustomizers",
        "parameterTypes": [
          "org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer[]"
        ]
      },
      {
        "name": "addContextCustomizers",
        "parameterTypes": [
          "org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer[]"
        ]
      },
      {
        "name": "addEngineValves",
        "parameterTypes": ["org.apache.catalina.Valve[]"]
      },
      {
        "name": "addProtocolHandlerCustomizers",
        "parameterTypes": [
          "org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer[]"
        ]
      },
      {
        "name": "getWebServer",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.ServletContextInitializer[]"
        ]
      },
      { "name": "setBackgroundProcessorDelay", "parameterTypes": ["int"] },
      { "name": "setBaseDirectory", "parameterTypes": ["java.io.File"] },
      {
        "name": "setResourceLoader",
        "parameterTypes": ["org.springframework.core.io.ResourceLoader"]
      },
      {
        "name": "setUriEncoding",
        "parameterTypes": ["java.nio.charset.Charset"]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addErrorPages",
        "parameterTypes": ["org.springframework.boot.web.server.ErrorPage[]"]
      },
      { "name": "getAddress", "parameterTypes": [] },
      { "name": "getCompression", "parameterTypes": [] },
      { "name": "getErrorPages", "parameterTypes": [] },
      { "name": "getHttp2", "parameterTypes": [] },
      { "name": "getPort", "parameterTypes": [] },
      { "name": "getServerHeader", "parameterTypes": [] },
      { "name": "getShutdown", "parameterTypes": [] },
      { "name": "getSsl", "parameterTypes": [] },
      { "name": "getSslBundles", "parameterTypes": [] },
      { "name": "getSslStoreProvider", "parameterTypes": [] },
      { "name": "setAddress", "parameterTypes": ["java.net.InetAddress"] },
      {
        "name": "setCompression",
        "parameterTypes": ["org.springframework.boot.web.server.Compression"]
      },
      { "name": "setErrorPages", "parameterTypes": ["java.util.Set"] },
      {
        "name": "setHttp2",
        "parameterTypes": ["org.springframework.boot.web.server.Http2"]
      },
      { "name": "setPort", "parameterTypes": ["int"] },
      { "name": "setServerHeader", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setShutdown",
        "parameterTypes": ["org.springframework.boot.web.server.Shutdown"]
      },
      {
        "name": "setSsl",
        "parameterTypes": ["org.springframework.boot.web.server.Ssl"]
      },
      {
        "name": "setSslBundles",
        "parameterTypes": ["org.springframework.boot.ssl.SslBundles"]
      },
      {
        "name": "setSslStoreProvider",
        "parameterTypes": [
          "org.springframework.boot.web.server.SslStoreProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ConfigurableWebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistrar",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.AbstractFilterRegistrationBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "addServletNames", "parameterTypes": ["java.lang.String[]"] },
      {
        "name": "addServletRegistrationBeans",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.ServletRegistrationBean[]"
        ]
      },
      { "name": "addUrlPatterns", "parameterTypes": ["java.lang.String[]"] },
      { "name": "determineDispatcherTypes", "parameterTypes": [] },
      { "name": "getFilterName", "parameterTypes": [] },
      { "name": "getServletNames", "parameterTypes": [] },
      { "name": "getServletRegistrationBeans", "parameterTypes": [] },
      { "name": "getUrlPatterns", "parameterTypes": [] },
      { "name": "isMatchAfter", "parameterTypes": [] },
      {
        "name": "setDispatcherTypes",
        "parameterTypes": [
          "jakarta.servlet.DispatcherType",
          "jakarta.servlet.DispatcherType[]"
        ]
      },
      { "name": "setDispatcherTypes", "parameterTypes": ["java.util.EnumSet"] },
      { "name": "setMatchAfter", "parameterTypes": ["boolean"] },
      { "name": "setServletNames", "parameterTypes": ["java.util.Collection"] },
      {
        "name": "setServletRegistrationBeans",
        "parameterTypes": ["java.util.Collection"]
      },
      { "name": "setUrlPatterns", "parameterTypes": ["java.util.Collection"] },
      { "name": "toString", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.DynamicRegistrationBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addInitParameter",
        "parameterTypes": ["java.lang.String", "java.lang.String"]
      },
      {
        "name": "configure",
        "parameterTypes": ["jakarta.servlet.Registration$Dynamic"]
      },
      { "name": "getInitParameters", "parameterTypes": [] },
      { "name": "isAsyncSupported", "parameterTypes": [] },
      { "name": "setAsyncSupported", "parameterTypes": ["boolean"] },
      { "name": "setBeanName", "parameterTypes": ["java.lang.String"] },
      { "name": "setIgnoreRegistrationFailure", "parameterTypes": ["boolean"] },
      { "name": "setInitParameters", "parameterTypes": ["java.util.Map"] },
      { "name": "setName", "parameterTypes": ["java.lang.String"] }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.FilterRegistrationBean",
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "getFilter", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.web.servlet.RegistrationBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getOrder", "parameterTypes": [] },
      { "name": "isEnabled", "parameterTypes": [] },
      {
        "name": "onStartup",
        "parameterTypes": ["jakarta.servlet.ServletContext"]
      },
      { "name": "setEnabled", "parameterTypes": ["boolean"] },
      { "name": "setOrder", "parameterTypes": ["int"] }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.ServletContextInitializer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.ServletRegistrationBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getMultipartConfig", "parameterTypes": [] },
      { "name": "getServlet", "parameterTypes": [] },
      { "name": "getServletName", "parameterTypes": [] },
      { "name": "getUrlMappings", "parameterTypes": [] },
      { "name": "setLoadOnStartup", "parameterTypes": ["int"] },
      {
        "name": "setMultipartConfig",
        "parameterTypes": ["jakarta.servlet.MultipartConfigElement"]
      },
      { "name": "setServlet", "parameterTypes": ["jakarta.servlet.Servlet"] },
      { "name": "toString", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.WebListenerRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getError",
        "parameterTypes": ["org.springframework.web.context.request.WebRequest"]
      },
      {
        "name": "getErrorAttributes",
        "parameterTypes": [
          "org.springframework.web.context.request.WebRequest",
          "org.springframework.boot.web.error.ErrorAttributeOptions"
        ]
      },
      { "name": "getOrder", "parameterTypes": [] },
      {
        "name": "resolveException",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object",
          "java.lang.Exception"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.error.ErrorAttributes",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.error.ErrorController",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter",
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "getOrder", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedFormContentFilter",
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "getOrder", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter",
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "getOrder", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addCookieSameSiteSuppliers",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier[]"
        ]
      },
      {
        "name": "addInitializers",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.ServletContextInitializer[]"
        ]
      },
      { "name": "addWebListeners", "parameterTypes": ["java.lang.String[]"] },
      { "name": "getContextPath", "parameterTypes": [] },
      { "name": "getCookieSameSiteSuppliers", "parameterTypes": [] },
      { "name": "getDisplayName", "parameterTypes": [] },
      { "name": "getDocumentRoot", "parameterTypes": [] },
      { "name": "getInitParameters", "parameterTypes": [] },
      { "name": "getJsp", "parameterTypes": [] },
      { "name": "getLocaleCharsetMappings", "parameterTypes": [] },
      { "name": "getMimeMappings", "parameterTypes": [] },
      { "name": "getSession", "parameterTypes": [] },
      { "name": "isRegisterDefaultServlet", "parameterTypes": [] },
      { "name": "setContextPath", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setCookieSameSiteSuppliers",
        "parameterTypes": ["java.util.List"]
      },
      { "name": "setDisplayName", "parameterTypes": ["java.lang.String"] },
      { "name": "setDocumentRoot", "parameterTypes": ["java.io.File"] },
      { "name": "setInitParameters", "parameterTypes": ["java.util.Map"] },
      { "name": "setInitializers", "parameterTypes": ["java.util.List"] },
      {
        "name": "setJsp",
        "parameterTypes": ["org.springframework.boot.web.servlet.server.Jsp"]
      },
      {
        "name": "setLocaleCharsetMappings",
        "parameterTypes": ["java.util.Map"]
      },
      {
        "name": "setMimeMappings",
        "parameterTypes": ["org.springframework.boot.web.server.MimeMappings"]
      },
      { "name": "setRegisterDefaultServlet", "parameterTypes": ["boolean"] },
      {
        "name": "setSession",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.server.Session"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Encoding",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.ServletWebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.function.actuator.FunctionsEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.function.cloudevent.CloudEventsFunctionExtensionConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.function.cloudevent.CloudEventsFunctionInvocationHelper",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "isRetainOuputAsMessage",
        "parameterTypes": ["java.lang.Object"]
      },
      {
        "name": "postProcessResult",
        "parameterTypes": ["java.lang.Object", "java.lang.Object"]
      },
      {
        "name": "preProcessInput",
        "parameterTypes": ["java.lang.Object", "java.lang.Object"]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.function.context.FunctionCatalog",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "lookup",
        "parameterTypes": ["java.lang.Class", "java.lang.String"]
      },
      { "name": "lookup", "parameterTypes": ["java.lang.String"] },
      {
        "name": "lookup",
        "parameterTypes": ["java.lang.String", "java.lang.String[]"]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.function.context.FunctionProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      },
      { "name": "setDefinition", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setEnvironment",
        "parameterTypes": ["org.springframework.core.env.Environment"]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.function.context.FunctionRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.function.context.catalog.BeanFactoryAwareFunctionRegistry",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getNames", "parameterTypes": ["java.lang.Class"] },
      {
        "name": "lookup",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      },
      { "name": "size", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.cloud.function.context.catalog.FunctionAroundWrapper",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.function.context.catalog.SimpleFunctionRegistry",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addMessageConverters",
        "parameterTypes": ["java.util.Collection"]
      },
      {
        "name": "register",
        "parameterTypes": [
          "org.springframework.cloud.function.context.FunctionRegistration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.function.context.config.ContextFunctionCatalogAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.function.context.config.ContextFunctionCatalogAutoConfiguration$JsonMapperConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.function.context.config.ContextFunctionCatalogAutoConfiguration$PlainFunctionScanConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.function.context.config.ContextFunctionCatalogInitializer",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.cloud.function.context.config.FunctionsEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.function.context.config.KotlinLambdaToFunctionAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": ["org.springframework.beans.factory.BeanFactory"]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.function.context.config.KotlinLambdaToFunctionAutoConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "fields": [{ "name": "CGLIB$FACTORY_DATA" }],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": ["org.springframework.cglib.proxy.Callback[]"]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": ["org.springframework.cglib.proxy.Callback[]"]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.function.context.config.KotlinLambdaToFunctionAutoConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [{ "name": "<init>", "parameterTypes": ["java.lang.Class"] }]
  },
  {
    "name": "org.springframework.cloud.function.context.config.KotlinLambdaToFunctionAutoConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [{ "name": "<init>", "parameterTypes": ["java.lang.Class"] }]
  },
  {
    "name": "org.springframework.cloud.function.context.config.RoutingFunction",
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "apply", "parameterTypes": ["java.lang.Object"] }]
  },
  {
    "name": "org.springframework.cloud.function.core.FunctionInvocationHelper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isRetainOuputAsMessage",
        "parameterTypes": ["java.lang.Object"]
      },
      {
        "name": "postProcessResult",
        "parameterTypes": ["java.lang.Object", "java.lang.Object"]
      },
      {
        "name": "preProcessInput",
        "parameterTypes": ["java.lang.Object", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.function.json.JacksonMapper",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "toJson", "parameterTypes": ["java.lang.Object"] },
      { "name": "toString", "parameterTypes": ["java.lang.Object"] }
    ]
  },
  {
    "name": "org.springframework.cloud.function.json.JsonMapper",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "fromJson",
        "parameterTypes": ["java.lang.Object", "java.lang.reflect.Type"]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.function.observability.ObservationAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.function.observability.ObservationFunctionAroundWrapper",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.annotation.StreamRetryTemplate",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.AbstractBinder",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.AbstractExtendedBindingProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "setBindings", "parameterTypes": ["java.util.Map"] }]
  },
  {
    "name": "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.BinderChildContextInitializer",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "isBeanExcludedFromAotProcessing", "parameterTypes": [] },
      {
        "name": "processAheadOfTime",
        "parameterTypes": [
          "org.springframework.beans.factory.support.RegisteredBean"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.BinderErrorChannel",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "subscribe",
        "parameterTypes": ["org.springframework.messaging.MessageHandler"]
      },
      { "name": "subscribers", "parameterTypes": [] },
      {
        "name": "unsubscribe",
        "parameterTypes": ["org.springframework.messaging.MessageHandler"]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.BinderFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.BinderSpecificPropertiesProvider",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.BinderTypeRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.ConsumerProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      { "name": "getBackOffInitialInterval", "parameterTypes": [] },
      { "name": "getBackOffMaxInterval", "parameterTypes": [] },
      { "name": "getBackOffMultiplier", "parameterTypes": [] },
      { "name": "getConcurrency", "parameterTypes": [] },
      { "name": "getHeaderMode", "parameterTypes": [] },
      { "name": "getInstanceCount", "parameterTypes": [] },
      { "name": "getInstanceIndex", "parameterTypes": [] },
      { "name": "getInstanceIndexList", "parameterTypes": [] },
      { "name": "getMaxAttempts", "parameterTypes": [] },
      { "name": "getRetryTemplateName", "parameterTypes": [] },
      { "name": "getRetryableExceptions", "parameterTypes": [] },
      { "name": "isAutoStartup", "parameterTypes": [] },
      { "name": "isBatchMode", "parameterTypes": [] },
      { "name": "isDefaultRetryable", "parameterTypes": [] },
      { "name": "isMultiplex", "parameterTypes": [] },
      { "name": "isPartitioned", "parameterTypes": [] },
      { "name": "isUseNativeDecoding", "parameterTypes": [] },
      { "name": "setAutoStartup", "parameterTypes": ["boolean"] },
      { "name": "setBackOffInitialInterval", "parameterTypes": ["int"] },
      { "name": "setBackOffMaxInterval", "parameterTypes": ["int"] },
      { "name": "setBackOffMultiplier", "parameterTypes": ["double"] },
      { "name": "setBatchMode", "parameterTypes": ["boolean"] },
      { "name": "setConcurrency", "parameterTypes": ["int"] },
      { "name": "setDefaultRetryable", "parameterTypes": ["boolean"] },
      {
        "name": "setHeaderMode",
        "parameterTypes": ["org.springframework.cloud.stream.binder.HeaderMode"]
      },
      { "name": "setInstanceCount", "parameterTypes": ["int"] },
      { "name": "setInstanceIndex", "parameterTypes": ["int"] },
      { "name": "setInstanceIndexList", "parameterTypes": ["java.util.List"] },
      { "name": "setMaxAttempts", "parameterTypes": ["int"] },
      { "name": "setMultiplex", "parameterTypes": ["boolean"] },
      { "name": "setPartitioned", "parameterTypes": ["boolean"] },
      {
        "name": "setRetryTemplateName",
        "parameterTypes": ["java.lang.String"]
      },
      { "name": "setRetryableExceptions", "parameterTypes": ["java.util.Map"] },
      { "name": "setUseNativeDecoding", "parameterTypes": ["boolean"] }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.DefaultBinderFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "destroy", "parameterTypes": [] },
      {
        "name": "getBinder",
        "parameterTypes": ["java.lang.String", "java.lang.Class"]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.DefaultBinderFactory$Listener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.DefaultBinderTypeRegistry",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "get", "parameterTypes": ["java.lang.String"] },
      { "name": "getAll", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.ExtendedConsumerProperties",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.ExtendedProducerProperties",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.HeaderMode",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.cloud.stream.binder.LastSubscriberAwareChannel",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.ProducerProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      { "name": "getHeaderMode", "parameterTypes": [] },
      { "name": "getPartitionCount", "parameterTypes": [] },
      { "name": "getPartitionKeyExpression", "parameterTypes": [] },
      { "name": "getPartitionKeyExtractorName", "parameterTypes": [] },
      { "name": "getPartitionSelectorExpression", "parameterTypes": [] },
      { "name": "getPartitionSelectorName", "parameterTypes": [] },
      { "name": "getPoller", "parameterTypes": [] },
      { "name": "getRequiredGroups", "parameterTypes": [] },
      { "name": "isAutoStartup", "parameterTypes": [] },
      { "name": "isDynamicPartitionUpdatesEnabled", "parameterTypes": [] },
      { "name": "isErrorChannelEnabled", "parameterTypes": [] },
      { "name": "isUseNativeEncoding", "parameterTypes": [] },
      { "name": "setAutoStartup", "parameterTypes": ["boolean"] },
      {
        "name": "setDynamicPartitionUpdatesEnabled",
        "parameterTypes": ["boolean"]
      },
      { "name": "setErrorChannelEnabled", "parameterTypes": ["boolean"] },
      {
        "name": "setHeaderMode",
        "parameterTypes": ["org.springframework.cloud.stream.binder.HeaderMode"]
      },
      { "name": "setPartitionCount", "parameterTypes": ["int"] },
      {
        "name": "setPartitionKeyExpression",
        "parameterTypes": ["org.springframework.expression.Expression"]
      },
      {
        "name": "setPartitionKeyExtractorName",
        "parameterTypes": ["java.lang.String"]
      },
      {
        "name": "setPartitionSelectorExpression",
        "parameterTypes": ["org.springframework.expression.Expression"]
      },
      {
        "name": "setPartitionSelectorName",
        "parameterTypes": ["java.lang.String"]
      },
      {
        "name": "setPoller",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.ProducerProperties$PollerProperties"
        ]
      },
      { "name": "setRequiredGroups", "parameterTypes": ["java.lang.String[]"] },
      { "name": "setUseNativeEncoding", "parameterTypes": ["boolean"] }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.ProducerProperties$PollerProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.KafkaMessageChannelBinder",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.common.KafkaBinderEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.config.ExtendedBindingHandlerMappingsProviderConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.config.KafkaBinderConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.config.KafkaBinderConfiguration$KafkaBinderMetricsConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.config.KafkaBinderConfiguration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.config.KafkaBinderConfiguration$KafkaBinderMetricsConfiguration$KafkaMicrometer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.config.KafkaBinderConfiguration$KafkaBinderMetricsConfiguration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.config.KafkaBinderHealthIndicatorConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.properties.KafkaBindingProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      { "name": "getConsumer", "parameterTypes": [] },
      { "name": "getProducer", "parameterTypes": [] },
      {
        "name": "setConsumer",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.properties.KafkaConsumerProperties"
        ]
      },
      {
        "name": "setProducer",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.properties.KafkaProducerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.properties.KafkaConsumerProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      { "name": "getConfiguration", "parameterTypes": [] },
      { "name": "setConfiguration", "parameterTypes": ["java.util.Map"] },
      { "name": "setEnableDlq", "parameterTypes": ["boolean"] }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.properties.KafkaConsumerProperties$StandardHeaders",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.properties.KafkaConsumerProperties$StartOffset",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.properties.KafkaExtendedBindingProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "getBindings", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.properties.KafkaProducerProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      { "name": "getConfiguration", "parameterTypes": [] },
      { "name": "setConfiguration", "parameterTypes": ["java.util.Map"] }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.properties.KafkaProducerProperties$CompressionType",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.properties.KafkaTopicProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.cloud.stream.binding.AbstractBindableProxyFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createAndBindInputs",
        "parameterTypes": [
          "org.springframework.cloud.stream.binding.BindingService"
        ]
      },
      {
        "name": "createAndBindOutputs",
        "parameterTypes": [
          "org.springframework.cloud.stream.binding.BindingService"
        ]
      },
      { "name": "getInputs", "parameterTypes": [] },
      { "name": "getOutputs", "parameterTypes": [] },
      {
        "name": "unbindInputs",
        "parameterTypes": [
          "org.springframework.cloud.stream.binding.BindingService"
        ]
      },
      {
        "name": "unbindOutputs",
        "parameterTypes": [
          "org.springframework.cloud.stream.binding.BindingService"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binding.AbstractBindingLifecycle",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "isAutoStartup", "parameterTypes": [] },
      { "name": "isRunning", "parameterTypes": [] },
      { "name": "start", "parameterTypes": [] },
      { "name": "stop", "parameterTypes": [] },
      { "name": "stop", "parameterTypes": ["java.lang.Runnable"] }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binding.AbstractBindingTargetFactory",
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "canCreate", "parameterTypes": ["java.lang.Class"] }]
  },
  {
    "name": "org.springframework.cloud.stream.binding.Bindable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "createAndBindInputs",
        "parameterTypes": [
          "org.springframework.cloud.stream.binding.BindingService"
        ]
      },
      {
        "name": "createAndBindOutputs",
        "parameterTypes": [
          "org.springframework.cloud.stream.binding.BindingService"
        ]
      },
      { "name": "getInputs", "parameterTypes": [] },
      {
        "name": "unbindInputs",
        "parameterTypes": [
          "org.springframework.cloud.stream.binding.BindingService"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binding.BindableProxyFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getObject", "parameterTypes": [] },
      {
        "name": "invoke",
        "parameterTypes": ["org.aopalliance.intercept.MethodInvocation"]
      },
      {
        "name": "replaceInputChannel",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "org.springframework.messaging.SubscribableChannel"
        ]
      },
      {
        "name": "replaceOutputChannel",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "org.springframework.messaging.MessageChannel"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": ["org.springframework.beans.factory.BeanFactory"]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binding.BindingService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.binding.BindingTargetFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.binding.BindingsLifecycleController",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.binding.CompositeMessageChannelConfigurer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "configureInputChannel",
        "parameterTypes": [
          "org.springframework.messaging.MessageChannel",
          "java.lang.String"
        ]
      },
      {
        "name": "configureOutputChannel",
        "parameterTypes": [
          "org.springframework.messaging.MessageChannel",
          "java.lang.String"
        ]
      },
      {
        "name": "configurePolledMessageSource",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.PollableMessageSource",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binding.ContextStartAfterRefreshListener",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": ["org.springframework.context.ApplicationEvent"]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binding.DynamicDestinationsBindable",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getOutputs", "parameterTypes": [] },
      {
        "name": "unbindOutputs",
        "parameterTypes": [
          "org.springframework.cloud.stream.binding.BindingService"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binding.FluxMessageChannelBindingTargetFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "createInput", "parameterTypes": ["java.lang.String"] },
      { "name": "createOutput", "parameterTypes": ["java.lang.String"] }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binding.InputBindingLifecycle",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "getPhase", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.cloud.stream.binding.MessageChannelAndSourceConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.binding.MessageChannelConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.binding.MessageConverterConfigurer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "configureInputChannel",
        "parameterTypes": [
          "org.springframework.messaging.MessageChannel",
          "java.lang.String"
        ]
      },
      {
        "name": "configureOutputChannel",
        "parameterTypes": [
          "org.springframework.messaging.MessageChannel",
          "java.lang.String"
        ]
      },
      {
        "name": "configurePolledMessageSource",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.PollableMessageSource",
          "java.lang.String"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": ["org.springframework.beans.factory.BeanFactory"]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binding.MessageSourceBindingTargetFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "createInput", "parameterTypes": ["java.lang.String"] },
      { "name": "createOutput", "parameterTypes": ["java.lang.String"] }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binding.OutputBindingLifecycle",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "getPhase", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.cloud.stream.binding.SubscribableChannelBindingTargetFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "createInput", "parameterTypes": ["java.lang.String"] },
      { "name": "createOutput", "parameterTypes": ["java.lang.String"] }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.config.BinderFactoryAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthContributor",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getContributor", "parameterTypes": ["java.lang.String"] },
      { "name": "iterator", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthIndicatorListener",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterBinderContextInitialized",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.context.ConfigurableApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.config.BindingHandlerAdvise",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "apply",
        "parameterTypes": [
          "org.springframework.boot.context.properties.bind.BindHandler"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.config.BindingHandlerAdvise$MappingsProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.config.ExtendedBindingHandlerMappingsProviderConfiguration$$Lambda/0x00007f54c4463840"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.config.ExtendedBindingHandlerMappingsProviderConfiguration$$Lambda/0x00007f54c4463840"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.config.ExtendedBindingHandlerMappingsProviderConfiguration$$Lambda/0x00007f54c4463840"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.config.ExtendedBindingHandlerMappingsProviderConfiguration$$Lambda/0x00007f54c4463840"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.config.BindingProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      { "name": "getConsumer", "parameterTypes": [] },
      { "name": "getProducer", "parameterTypes": [] },
      {
        "name": "setConsumer",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.ConsumerProperties"
        ]
      },
      { "name": "setDestination", "parameterTypes": ["java.lang.String"] },
      { "name": "setGroup", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setProducer",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.ProducerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.config.BindingServiceConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.config.BindingServiceConfiguration$1",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": ["java.lang.Object", "java.lang.String"]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.config.BindingServiceProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      { "name": "getBindings", "parameterTypes": [] },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      },
      { "name": "setBindings", "parameterTypes": ["java.util.Map"] }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.config.BindingsEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.config.ChannelsEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.config.ContentTypeConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.config.PollerConfigEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$SpelConverter",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "convert", "parameterTypes": ["java.lang.Object"] },
      { "name": "toObject", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.config.SpringIntegrationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.cloud.stream.endpoint.BindingsEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.endpoint.ChannelsEndpoint",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.function.BindableFunctionProxyFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      { "name": "getObjectType", "parameterTypes": [] },
      { "name": "isSingleton", "parameterTypes": [] },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.function.FunctionConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.function.FunctionConfiguration$FunctionBindingRegistrar",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": ["org.springframework.core.env.Environment"]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.function.FunctionConfiguration$FunctionToDestinationBinder",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.function.PollableSourceInitializer",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.cloud.stream.function.RoutingFunctionEnvironmentPostProcessor",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.cloud.stream.function.StreamBridge",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterSingletonsInstantiated", "parameterTypes": [] },
      { "name": "destroy", "parameterTypes": [] },
      {
        "name": "send",
        "parameterTypes": ["java.lang.String", "java.lang.Object"]
      },
      {
        "name": "send",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.util.MimeType"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.util.MimeType"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.function.StreamFunctionConfigurationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.cloud.stream.function.StreamFunctionProperties",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.function.StreamOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.messaging.DirectWithAttributesChannel",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getBeanName", "parameterTypes": [] },
      {
        "name": "subscribe",
        "parameterTypes": ["org.springframework.messaging.MessageHandler"]
      }
    ]
  },
  {
    "name": "org.springframework.context.ApplicationContextAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationEventPublisherAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [{ "name": "supportsAsyncExecution", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.context.EmbeddedValueResolverAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.EnvironmentAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.Lifecycle",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.LifecycleProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.Phased",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ResourceLoaderAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.SmartLifecycle",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      { "name": "isAutoStartup", "parameterTypes": [] },
      { "name": "stop", "parameterTypes": ["java.lang.Runnable"] }
    ]
  },
  {
    "name": "org.springframework.context.annotation.Bean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ComponentScan",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Conditional",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Configuration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.DependsOn",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Import",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ImportAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ImportRuntimeHints",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Lazy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Primary",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Role",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Scope",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.event.SmartApplicationListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      { "name": "getListenerId", "parameterTypes": [] },
      { "name": "getOrder", "parameterTypes": [] },
      { "name": "supportsSourceType", "parameterTypes": ["java.lang.Class"] }
    ]
  },
  {
    "name": "org.springframework.context.support.ApplicationObjectSupport",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      }
    ]
  },
  {
    "name": "org.springframework.context.support.ConversionServiceFactoryBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      { "name": "getObjectType", "parameterTypes": [] },
      { "name": "isSingleton", "parameterTypes": [] },
      { "name": "setConverters", "parameterTypes": ["java.util.Set"] }
    ]
  },
  {
    "name": "org.springframework.context.support.DefaultLifecycleProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "isRunning", "parameterTypes": [] },
      { "name": "onClose", "parameterTypes": [] },
      { "name": "onRefresh", "parameterTypes": [] },
      {
        "name": "setBeanFactory",
        "parameterTypes": ["org.springframework.beans.factory.BeanFactory"]
      },
      { "name": "start", "parameterTypes": [] },
      { "name": "stop", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.core.DecoratingProxy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.Ordered",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.annotation.AliasFor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.annotation.Order",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.convert.ConversionService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.core.convert.converter.Converter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "andThen",
        "parameterTypes": [
          "org.springframework.core.convert.converter.Converter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.core.convert.converter.ConverterRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.support.ConfigurableConversionService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.support.DefaultConversionService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.convert.support.GenericConversionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addConverter",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class",
          "org.springframework.core.convert.converter.Converter"
        ]
      },
      {
        "name": "addConverter",
        "parameterTypes": [
          "org.springframework.core.convert.converter.Converter"
        ]
      },
      {
        "name": "addConverter",
        "parameterTypes": [
          "org.springframework.core.convert.converter.GenericConverter"
        ]
      },
      {
        "name": "addConverterFactory",
        "parameterTypes": [
          "org.springframework.core.convert.converter.ConverterFactory"
        ]
      },
      {
        "name": "canBypassConvert",
        "parameterTypes": [
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "canConvert",
        "parameterTypes": ["java.lang.Class", "java.lang.Class"]
      },
      {
        "name": "canConvert",
        "parameterTypes": [
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": ["java.lang.Object", "java.lang.Class"]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "removeConvertible",
        "parameterTypes": ["java.lang.Class", "java.lang.Class"]
      },
      { "name": "toString", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.core.env.EnvironmentCapable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.task.AsyncListenableTaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.task.AsyncTaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      { "name": "execute", "parameterTypes": ["java.lang.Runnable", "long"] },
      { "name": "submitCompletable", "parameterTypes": ["java.lang.Runnable"] },
      {
        "name": "submitCompletable",
        "parameterTypes": ["java.util.concurrent.Callable"]
      }
    ]
  },
  {
    "name": "org.springframework.core.task.TaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.convert.CustomConversions",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getCustomWriteTarget", "parameterTypes": ["java.lang.Class"] },
      {
        "name": "getCustomWriteTarget",
        "parameterTypes": ["java.lang.Class", "java.lang.Class"]
      },
      { "name": "getPropertyValueConversions", "parameterTypes": [] },
      { "name": "getSimpleTypeHolder", "parameterTypes": [] },
      {
        "name": "hasCustomReadTarget",
        "parameterTypes": ["java.lang.Class", "java.lang.Class"]
      },
      { "name": "hasCustomWriteTarget", "parameterTypes": ["java.lang.Class"] },
      {
        "name": "hasCustomWriteTarget",
        "parameterTypes": ["java.lang.Class", "java.lang.Class"]
      },
      {
        "name": "hasValueConverter",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      { "name": "isSimpleType", "parameterTypes": ["java.lang.Class"] },
      {
        "name": "registerConvertersIn",
        "parameterTypes": [
          "org.springframework.core.convert.converter.ConverterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.convert.ReadingConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.convert.WritingConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.domain.ManagedTypes",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [{ "name": "toList", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.data.domain.Unpaged"
  },
  {
    "name": "org.springframework.data.geo.GeoModule",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jdbc.core.JdbcAggregateOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "delete",
        "parameterTypes": ["java.lang.Object", "java.lang.Class"]
      },
      {
        "name": "deleteAll",
        "parameterTypes": ["java.lang.Iterable", "java.lang.Class"]
      }
    ]
  },
  {
    "name": "org.springframework.data.jdbc.core.JdbcAggregateTemplate",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "count", "parameterTypes": ["java.lang.Class"] },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.relational.core.query.Query",
          "java.lang.Class"
        ]
      },
      { "name": "delete", "parameterTypes": ["java.lang.Object"] },
      { "name": "deleteAll", "parameterTypes": ["java.lang.Class"] },
      { "name": "deleteAll", "parameterTypes": ["java.lang.Iterable"] },
      {
        "name": "deleteAllById",
        "parameterTypes": ["java.lang.Iterable", "java.lang.Class"]
      },
      {
        "name": "deleteById",
        "parameterTypes": ["java.lang.Object", "java.lang.Class"]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.relational.core.query.Query",
          "java.lang.Class"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": ["java.lang.Object", "java.lang.Class"]
      },
      { "name": "findAll", "parameterTypes": ["java.lang.Class"] },
      {
        "name": "findAll",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.relational.core.query.Query",
          "java.lang.Class"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.relational.core.query.Query",
          "java.lang.Class",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAllById",
        "parameterTypes": ["java.lang.Iterable", "java.lang.Class"]
      },
      {
        "name": "findById",
        "parameterTypes": ["java.lang.Object", "java.lang.Class"]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.relational.core.query.Query",
          "java.lang.Class"
        ]
      },
      { "name": "insert", "parameterTypes": ["java.lang.Object"] },
      { "name": "insertAll", "parameterTypes": ["java.lang.Iterable"] },
      { "name": "save", "parameterTypes": ["java.lang.Object"] },
      { "name": "saveAll", "parameterTypes": ["java.lang.Iterable"] },
      { "name": "update", "parameterTypes": ["java.lang.Object"] },
      { "name": "updateAll", "parameterTypes": ["java.lang.Iterable"] }
    ]
  },
  {
    "name": "org.springframework.data.jdbc.core.convert.DataAccessStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jdbc.core.convert.DefaultDataAccessStrategy",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "acquireLockAll",
        "parameterTypes": [
          "org.springframework.data.relational.core.sql.LockMode",
          "java.lang.Class"
        ]
      },
      {
        "name": "acquireLockById",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.data.relational.core.sql.LockMode",
          "java.lang.Class"
        ]
      },
      { "name": "count", "parameterTypes": ["java.lang.Class"] },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.relational.core.query.Query",
          "java.lang.Class"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": ["java.lang.Iterable", "java.lang.Class"]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Iterable",
          "org.springframework.data.mapping.PersistentPropertyPath"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": ["java.lang.Object", "java.lang.Class"]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.data.mapping.PersistentPropertyPath"
        ]
      },
      { "name": "deleteAll", "parameterTypes": ["java.lang.Class"] },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentPropertyPath"
        ]
      },
      {
        "name": "deleteWithVersion",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class",
          "java.lang.Number"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.relational.core.query.Query",
          "java.lang.Class"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": ["java.lang.Object", "java.lang.Class"]
      },
      { "name": "findAll", "parameterTypes": ["java.lang.Class"] },
      {
        "name": "findAll",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.relational.core.query.Query",
          "java.lang.Class"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.relational.core.query.Query",
          "java.lang.Class",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAllById",
        "parameterTypes": ["java.lang.Iterable", "java.lang.Class"]
      },
      {
        "name": "findAllByPath",
        "parameterTypes": [
          "org.springframework.data.jdbc.core.convert.Identifier",
          "org.springframework.data.mapping.PersistentPropertyPath"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": ["java.lang.Object", "java.lang.Class"]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.relational.core.query.Query",
          "java.lang.Class"
        ]
      },
      {
        "name": "insert",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class",
          "org.springframework.data.jdbc.core.convert.Identifier",
          "org.springframework.data.relational.core.conversion.IdValueSource"
        ]
      },
      {
        "name": "insert",
        "parameterTypes": [
          "java.util.List",
          "java.lang.Class",
          "org.springframework.data.relational.core.conversion.IdValueSource"
        ]
      },
      {
        "name": "update",
        "parameterTypes": ["java.lang.Object", "java.lang.Class"]
      },
      {
        "name": "updateWithVersion",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class",
          "java.lang.Number"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jdbc.core.convert.JdbcConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "mapRow",
        "parameterTypes": [
          "org.springframework.data.relational.core.mapping.PersistentPropertyPathExtension",
          "java.sql.ResultSet",
          "org.springframework.data.jdbc.core.convert.Identifier",
          "java.lang.Object"
        ]
      },
      {
        "name": "mapRow",
        "parameterTypes": [
          "org.springframework.data.relational.core.mapping.RelationalPersistentEntity",
          "java.sql.ResultSet",
          "java.lang.Object"
        ]
      },
      {
        "name": "readAndResolve",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.data.relational.domain.RowDocument"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jdbc.core.convert.JdbcCustomConversions",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jdbc.core.convert.MappingJdbcConverter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getColumnType",
        "parameterTypes": [
          "org.springframework.data.relational.core.mapping.RelationalPersistentProperty"
        ]
      },
      {
        "name": "getTargetSqlType",
        "parameterTypes": [
          "org.springframework.data.relational.core.mapping.RelationalPersistentProperty"
        ]
      },
      {
        "name": "readAndResolve",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.data.relational.domain.RowDocument",
          "org.springframework.data.jdbc.core.convert.Identifier"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "writeJdbcValue",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class",
          "java.sql.SQLType"
        ]
      },
      {
        "name": "writeValue",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.data.util.TypeInformation"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jdbc.core.convert.ReadingDataAccessStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jdbc.core.convert.RelationResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jdbc.core.dialect.JdbcDialect",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jdbc.core.dialect.JdbcPostgresDialect",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getArraySupport", "parameterTypes": [] },
      { "name": "simpleTypes", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.data.jdbc.core.mapping.JdbcMappingContext",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      }
    ]
  },
  {
    "name": "org.springframework.data.jdbc.repository.config.DialectResolver$DefaultDialectProvider",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.data.jdbc.repository.config.DialectResolver.DefaultDialectProvider"
  },
  {
    "name": "org.springframework.data.mapping.context.AbstractMappingContext",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      {
        "name": "createPersistentProperty",
        "parameterTypes": [
          "org.springframework.data.mapping.model.Property",
          "org.springframework.data.mapping.model.MutablePersistentEntity",
          "org.springframework.data.mapping.model.SimpleTypeHolder"
        ]
      },
      {
        "name": "findPersistentPropertyPaths",
        "parameterTypes": ["java.lang.Class", "java.util.function.Predicate"]
      },
      { "name": "getManagedTypes", "parameterTypes": [] },
      { "name": "getPersistentEntities", "parameterTypes": [] },
      { "name": "getPersistentEntity", "parameterTypes": ["java.lang.Class"] },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": ["org.springframework.data.util.TypeInformation"]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": ["java.lang.String", "java.lang.Class"]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": ["org.springframework.data.mapping.PropertyPath"]
      },
      {
        "name": "hasPersistentEntityFor",
        "parameterTypes": ["java.lang.Class"]
      },
      { "name": "initialize", "parameterTypes": [] },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      { "name": "setInitialEntitySet", "parameterTypes": ["java.util.Set"] },
      {
        "name": "setManagedTypes",
        "parameterTypes": ["org.springframework.data.domain.ManagedTypes"]
      },
      {
        "name": "setSimpleTypeHolder",
        "parameterTypes": [
          "org.springframework.data.mapping.model.SimpleTypeHolder"
        ]
      },
      { "name": "setStrict", "parameterTypes": ["boolean"] }
    ]
  },
  {
    "name": "org.springframework.data.mapping.context.MappingContext",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": ["org.springframework.data.util.TypeInformation"]
      },
      {
        "name": "getRequiredPersistentEntity",
        "parameterTypes": ["java.lang.Class"]
      },
      {
        "name": "getRequiredPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getRequiredPersistentEntity",
        "parameterTypes": ["org.springframework.data.util.TypeInformation"]
      }
    ]
  },
  {
    "name": "org.springframework.data.relational.RelationalManagedTypes",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "forEach", "parameterTypes": ["java.util.function.Consumer"] }
    ]
  },
  {
    "name": "org.springframework.data.relational.core.conversion.AbstractRelationalConverter",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getConversionService", "parameterTypes": [] },
      { "name": "getConversions", "parameterTypes": [] },
      { "name": "getEntityInstantiators", "parameterTypes": [] },
      { "name": "getMappingContext", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.data.relational.core.conversion.MappingRelationalConverter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createInstance",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentEntity",
          "java.util.function.Function"
        ]
      },
      {
        "name": "getPropertyAccessor",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentEntity",
          "java.lang.Object"
        ]
      },
      {
        "name": "introspectProjection",
        "parameterTypes": ["java.lang.Class", "java.lang.Class"]
      },
      {
        "name": "project",
        "parameterTypes": [
          "org.springframework.data.projection.EntityProjection",
          "org.springframework.data.relational.domain.RowDocument"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.data.relational.domain.RowDocument"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      }
    ]
  },
  {
    "name": "org.springframework.data.relational.core.conversion.RelationalConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.relational.core.dialect.AbstractDialect",
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "getSelectContext", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.data.relational.core.dialect.Dialect",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      { "name": "getIdGeneration", "parameterTypes": [] },
      { "name": "getInsertRenderContext", "parameterTypes": [] },
      { "name": "getLikeEscaper", "parameterTypes": [] },
      { "name": "orderByNullHandling", "parameterTypes": [] },
      { "name": "supportsSingleQueryLoading", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.data.relational.core.dialect.PostgresDialect",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getConverters", "parameterTypes": [] },
      { "name": "getExistsFunction", "parameterTypes": [] },
      { "name": "getIdentifierProcessing", "parameterTypes": [] },
      { "name": "limit", "parameterTypes": [] },
      { "name": "lock", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.data.relational.core.mapping.RelationalMappingContext",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createPersistentProperty",
        "parameterTypes": [
          "org.springframework.data.mapping.model.Property",
          "org.springframework.data.mapping.model.MutablePersistentEntity",
          "org.springframework.data.mapping.model.SimpleTypeHolder"
        ]
      },
      {
        "name": "getAggregatePath",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentPropertyPath"
        ]
      },
      {
        "name": "getAggregatePath",
        "parameterTypes": [
          "org.springframework.data.relational.core.mapping.RelationalPersistentEntity"
        ]
      },
      { "name": "getNamingStrategy", "parameterTypes": [] },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.relational.core.mapping.RelationalPersistentProperty"
        ]
      },
      { "name": "isForceQuote", "parameterTypes": [] },
      { "name": "isSingleQueryLoadingEnabled", "parameterTypes": [] },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      },
      { "name": "setForceQuote", "parameterTypes": ["boolean"] },
      { "name": "setSingleQueryLoadingEnabled", "parameterTypes": ["boolean"] },
      {
        "name": "setSqlIdentifierSanitizer",
        "parameterTypes": [
          "org.springframework.data.relational.core.mapping.SqlIdentifierSanitizer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryMethodInvocationListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.util.CustomCollections$EclipseCollections",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.data.util.CustomCollections$VavrCollections",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.data.util.CustomCollections.EclipseCollections"
  },
  {
    "name": "org.springframework.data.util.CustomCollections.VavrCollections"
  },
  {
    "name": "org.springframework.data.util.KotlinBeanInfoFactory",
    "queryAllPublicConstructors": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.data.web.OffsetScrollPositionArgumentResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.OffsetScrollPositionHandlerMethodArgumentResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "resolveArgument",
        "parameterTypes": [
          "org.springframework.core.MethodParameter",
          "org.springframework.web.method.support.ModelAndViewContainer",
          "org.springframework.web.context.request.NativeWebRequest",
          "org.springframework.web.bind.support.WebDataBinderFactory"
        ]
      },
      {
        "name": "supportsParameter",
        "parameterTypes": ["org.springframework.core.MethodParameter"]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.OffsetScrollPositionHandlerMethodArgumentResolverSupport",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "setOffsetParameter", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setQualifierDelimiter",
        "parameterTypes": ["java.lang.String"]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.PageableArgumentResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.PageableHandlerMethodArgumentResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "resolveArgument",
        "parameterTypes": [
          "org.springframework.core.MethodParameter",
          "org.springframework.web.method.support.ModelAndViewContainer",
          "org.springframework.web.context.request.NativeWebRequest",
          "org.springframework.web.bind.support.WebDataBinderFactory"
        ]
      },
      {
        "name": "supportsParameter",
        "parameterTypes": ["org.springframework.core.MethodParameter"]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.PageableHandlerMethodArgumentResolverSupport",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "isFallbackPageable",
        "parameterTypes": ["org.springframework.data.domain.Pageable"]
      },
      {
        "name": "setFallbackPageable",
        "parameterTypes": ["org.springframework.data.domain.Pageable"]
      },
      { "name": "setMaxPageSize", "parameterTypes": ["int"] },
      { "name": "setOneIndexedParameters", "parameterTypes": ["boolean"] },
      {
        "name": "setPageParameterName",
        "parameterTypes": ["java.lang.String"]
      },
      { "name": "setPrefix", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setQualifierDelimiter",
        "parameterTypes": ["java.lang.String"]
      },
      { "name": "setSizeParameterName", "parameterTypes": ["java.lang.String"] }
    ]
  },
  {
    "name": "org.springframework.data.web.SortArgumentResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.SortHandlerMethodArgumentResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "resolveArgument",
        "parameterTypes": [
          "org.springframework.core.MethodParameter",
          "org.springframework.web.method.support.ModelAndViewContainer",
          "org.springframework.web.context.request.NativeWebRequest",
          "org.springframework.web.bind.support.WebDataBinderFactory"
        ]
      },
      {
        "name": "supportsParameter",
        "parameterTypes": ["org.springframework.core.MethodParameter"]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.SortHandlerMethodArgumentResolverSupport",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getPropertyDelimiter", "parameterTypes": [] },
      {
        "name": "setFallbackSort",
        "parameterTypes": ["org.springframework.data.domain.Sort"]
      },
      {
        "name": "setPropertyDelimiter",
        "parameterTypes": ["java.lang.String"]
      },
      {
        "name": "setQualifierDelimiter",
        "parameterTypes": ["java.lang.String"]
      },
      { "name": "setSortParameter", "parameterTypes": ["java.lang.String"] }
    ]
  },
  {
    "name": "org.springframework.data.web.config.EnableSpringDataWebSupport",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": ["java.lang.Object", "java.lang.String"]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": ["java.lang.Object", "java.lang.String"]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": ["java.lang.ClassLoader"]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": ["org.springframework.beans.factory.BeanFactory"]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonModules",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataWebConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectFactory"
        ]
      },
      { "name": "addArgumentResolvers", "parameterTypes": ["java.util.List"] },
      {
        "name": "addFormatters",
        "parameterTypes": ["org.springframework.format.FormatterRegistry"]
      },
      {
        "name": "extendMessageConverters",
        "parameterTypes": ["java.util.List"]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": ["java.lang.ClassLoader"]
      }
    ]
  },
  {
    "name": "org.springframework.expression.EvaluationContext",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "assignVariable",
        "parameterTypes": ["java.lang.String", "java.util.function.Supplier"]
      }
    ]
  },
  {
    "name": "org.springframework.expression.spel.support.StandardEvaluationContext",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getBeanResolver", "parameterTypes": [] },
      { "name": "getConstructorResolvers", "parameterTypes": [] },
      { "name": "getMethodResolvers", "parameterTypes": [] },
      { "name": "getOperatorOverloader", "parameterTypes": [] },
      { "name": "getPropertyAccessors", "parameterTypes": [] },
      { "name": "getRootObject", "parameterTypes": [] },
      { "name": "getTypeComparator", "parameterTypes": [] },
      { "name": "getTypeConverter", "parameterTypes": [] },
      { "name": "getTypeLocator", "parameterTypes": [] },
      { "name": "lookupVariable", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setVariable",
        "parameterTypes": ["java.lang.String", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "org.springframework.format.FormatterRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.format.support.DefaultFormattingConversionService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.format.support.FormattingConversionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addFormatter",
        "parameterTypes": ["org.springframework.format.Formatter"]
      },
      {
        "name": "addFormatterForFieldAnnotation",
        "parameterTypes": [
          "org.springframework.format.AnnotationFormatterFactory"
        ]
      },
      {
        "name": "addFormatterForFieldType",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.format.Formatter"
        ]
      },
      {
        "name": "addFormatterForFieldType",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.format.Printer",
          "org.springframework.format.Parser"
        ]
      },
      {
        "name": "addParser",
        "parameterTypes": ["org.springframework.format.Parser"]
      },
      {
        "name": "addPrinter",
        "parameterTypes": ["org.springframework.format.Printer"]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": ["org.springframework.util.StringValueResolver"]
      }
    ]
  },
  {
    "name": "org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter"
  },
  {
    "name": "org.springframework.http.client.support.HttpAccessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getClientHttpRequestInitializers", "parameterTypes": [] },
      {
        "name": "setClientHttpRequestInitializers",
        "parameterTypes": ["java.util.List"]
      }
    ]
  },
  {
    "name": "org.springframework.http.client.support.InterceptingHttpAccessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getInterceptors", "parameterTypes": [] },
      { "name": "getRequestFactory", "parameterTypes": [] },
      { "name": "setInterceptors", "parameterTypes": ["java.util.List"] },
      {
        "name": "setRequestFactory",
        "parameterTypes": [
          "org.springframework.http.client.ClientHttpRequestFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.AbstractGenericHttpMessageConverter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Type",
          "org.springframework.http.MediaType",
          "org.springframework.http.HttpOutputMessage"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.AbstractHttpMessageConverter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addDefaultHeaders",
        "parameterTypes": [
          "org.springframework.http.HttpHeaders",
          "java.lang.Object",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "getContentLength",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.http.MediaType"
        ]
      },
      { "name": "getDefaultCharset", "parameterTypes": [] },
      { "name": "getSupportedMediaTypes", "parameterTypes": [] },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.HttpInputMessage"
        ]
      },
      {
        "name": "setDefaultCharset",
        "parameterTypes": ["java.nio.charset.Charset"]
      },
      {
        "name": "setSupportedMediaTypes",
        "parameterTypes": ["java.util.List"]
      },
      {
        "name": "supportsRepeatableWrites",
        "parameterTypes": ["java.lang.Object"]
      },
      {
        "name": "write",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.http.MediaType",
          "org.springframework.http.HttpOutputMessage"
        ]
      },
      {
        "name": "writeInternal",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.http.HttpOutputMessage"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.GenericHttpMessageConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.converter.HttpMessageConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getSupportedMediaTypes",
        "parameterTypes": ["java.lang.Class"]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.StringHttpMessageConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      { "name": "getObjectMapper", "parameterTypes": [] },
      {
        "name": "getObjectMappersForType",
        "parameterTypes": ["java.lang.Class"]
      },
      {
        "name": "getSupportedMediaTypes",
        "parameterTypes": ["java.lang.Class"]
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.HttpInputMessage"
        ]
      },
      {
        "name": "registerObjectMappersForType",
        "parameterTypes": ["java.lang.Class", "java.util.function.Consumer"]
      },
      {
        "name": "setObjectMapper",
        "parameterTypes": ["com.fasterxml.jackson.databind.ObjectMapper"]
      },
      { "name": "setPrettyPrint", "parameterTypes": ["boolean"] },
      { "name": "setSupportedMediaTypes", "parameterTypes": ["java.util.List"] }
    ]
  },
  {
    "name": "org.springframework.http.converter.json.GsonHttpMessageConverter"
  },
  {
    "name": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.integration.IntegrationPattern",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.integration.channel.AbstractExecutorChannel",
    "queryAllDeclaredMethods": true,
    "fields": [{ "name": "hasExecutorInterceptors" }],
    "methods": [
      {
        "name": "addInterceptor",
        "parameterTypes": [
          "int",
          "org.springframework.messaging.support.ChannelInterceptor"
        ]
      },
      {
        "name": "addInterceptor",
        "parameterTypes": [
          "org.springframework.messaging.support.ChannelInterceptor"
        ]
      },
      { "name": "hasExecutorInterceptors", "parameterTypes": [] },
      { "name": "removeInterceptor", "parameterTypes": ["int"] },
      {
        "name": "removeInterceptor",
        "parameterTypes": [
          "org.springframework.messaging.support.ChannelInterceptor"
        ]
      },
      { "name": "setInterceptors", "parameterTypes": ["java.util.List"] },
      { "name": "setMaxSubscribers", "parameterTypes": ["int"] }
    ]
  },
  {
    "name": "org.springframework.integration.channel.AbstractMessageChannel",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addInterceptor",
        "parameterTypes": [
          "int",
          "org.springframework.messaging.support.ChannelInterceptor"
        ]
      },
      {
        "name": "addInterceptor",
        "parameterTypes": [
          "org.springframework.messaging.support.ChannelInterceptor"
        ]
      },
      { "name": "destroy", "parameterTypes": [] },
      { "name": "getComponentType", "parameterTypes": [] },
      { "name": "getFullChannelName", "parameterTypes": [] },
      { "name": "getIntegrationPatternType", "parameterTypes": [] },
      { "name": "getInterceptors", "parameterTypes": [] },
      { "name": "getOverrides", "parameterTypes": [] },
      { "name": "isLoggingEnabled", "parameterTypes": [] },
      { "name": "isObserved", "parameterTypes": [] },
      {
        "name": "registerMetricsCaptor",
        "parameterTypes": [
          "org.springframework.integration.support.management.metrics.MetricsCaptor"
        ]
      },
      {
        "name": "registerObservationRegistry",
        "parameterTypes": ["io.micrometer.observation.ObservationRegistry"]
      },
      { "name": "removeInterceptor", "parameterTypes": ["int"] },
      {
        "name": "removeInterceptor",
        "parameterTypes": [
          "org.springframework.messaging.support.ChannelInterceptor"
        ]
      },
      {
        "name": "send",
        "parameterTypes": ["org.springframework.messaging.Message"]
      },
      {
        "name": "send",
        "parameterTypes": ["org.springframework.messaging.Message", "long"]
      },
      { "name": "setDatatypes", "parameterTypes": ["java.lang.Class[]"] },
      { "name": "setInterceptors", "parameterTypes": ["java.util.List"] },
      { "name": "setLoggingEnabled", "parameterTypes": ["boolean"] },
      {
        "name": "setMessageConverter",
        "parameterTypes": [
          "org.springframework.messaging.converter.MessageConverter"
        ]
      },
      {
        "name": "setObservationConvention",
        "parameterTypes": [
          "org.springframework.integration.support.management.observation.MessageSenderObservationConvention"
        ]
      },
      { "name": "setShouldTrack", "parameterTypes": ["boolean"] }
    ]
  },
  {
    "name": "org.springframework.integration.channel.AbstractSubscribableChannel",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getSubscriberCount", "parameterTypes": [] },
      {
        "name": "subscribe",
        "parameterTypes": ["org.springframework.messaging.MessageHandler"]
      },
      {
        "name": "unsubscribe",
        "parameterTypes": ["org.springframework.messaging.MessageHandler"]
      }
    ]
  },
  {
    "name": "org.springframework.integration.channel.BroadcastCapableChannel",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [{ "name": "isBroadcast", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.integration.channel.DefaultHeaderChannelRegistry",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "channelNameToChannel",
        "parameterTypes": ["java.lang.String"]
      },
      {
        "name": "channelToChannelName",
        "parameterTypes": ["java.lang.Object"]
      },
      {
        "name": "channelToChannelName",
        "parameterTypes": ["java.lang.Object", "long"]
      },
      { "name": "isRunning", "parameterTypes": [] },
      { "name": "run", "parameterTypes": [] },
      { "name": "runReaper", "parameterTypes": [] },
      { "name": "size", "parameterTypes": [] },
      { "name": "start", "parameterTypes": [] },
      { "name": "stop", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.integration.channel.DirectChannel",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "setFailover", "parameterTypes": ["boolean"] },
      { "name": "setMaxSubscribers", "parameterTypes": ["int"] }
    ]
  },
  {
    "name": "org.springframework.integration.channel.ExecutorChannelInterceptorAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.integration.channel.MessagePublishingErrorHandler",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "handleError", "parameterTypes": ["java.lang.Throwable"] }
    ]
  },
  {
    "name": "org.springframework.integration.channel.NullChannel",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "destroy", "parameterTypes": [] },
      { "name": "getBeanName", "parameterTypes": [] },
      { "name": "getComponentName", "parameterTypes": [] },
      { "name": "getComponentType", "parameterTypes": [] },
      { "name": "getIntegrationPatternType", "parameterTypes": [] },
      { "name": "getOverrides", "parameterTypes": [] },
      { "name": "isLoggingEnabled", "parameterTypes": [] },
      { "name": "receive", "parameterTypes": [] },
      { "name": "receive", "parameterTypes": ["long"] },
      {
        "name": "registerMetricsCaptor",
        "parameterTypes": [
          "org.springframework.integration.support.management.metrics.MetricsCaptor"
        ]
      },
      {
        "name": "send",
        "parameterTypes": ["org.springframework.messaging.Message"]
      },
      {
        "name": "send",
        "parameterTypes": ["org.springframework.messaging.Message", "long"]
      },
      { "name": "setBeanName", "parameterTypes": ["java.lang.String"] },
      { "name": "setLoggingEnabled", "parameterTypes": ["boolean"] }
    ]
  },
  {
    "name": "org.springframework.integration.channel.PublishSubscribeChannel",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      { "name": "<init>", "parameterTypes": ["boolean"] },
      { "name": "getComponentType", "parameterTypes": [] },
      { "name": "getIntegrationPatternType", "parameterTypes": [] },
      { "name": "setApplySequence", "parameterTypes": ["boolean"] },
      {
        "name": "setErrorHandler",
        "parameterTypes": ["org.springframework.util.ErrorHandler"]
      },
      { "name": "setIgnoreFailures", "parameterTypes": ["boolean"] },
      { "name": "setMinSubscribers", "parameterTypes": ["int"] }
    ]
  },
  {
    "name": "org.springframework.integration.config.AbstractEvaluationContextFactoryBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getFunctions", "parameterTypes": [] },
      { "name": "getPropertyAccessors", "parameterTypes": [] },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      },
      { "name": "setFunctions", "parameterTypes": ["java.util.Map"] },
      { "name": "setPropertyAccessors", "parameterTypes": ["java.util.Map"] }
    ]
  },
  {
    "name": "org.springframework.integration.config.ConsumerEndpointFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      { "name": "destroy", "parameterTypes": [] },
      { "name": "getObject", "parameterTypes": [] },
      { "name": "getObjectType", "parameterTypes": [] },
      { "name": "getPhase", "parameterTypes": [] },
      { "name": "isAutoStartup", "parameterTypes": [] },
      { "name": "isRunning", "parameterTypes": [] },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": ["java.lang.ClassLoader"]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": ["org.springframework.beans.factory.BeanFactory"]
      },
      { "name": "setBeanName", "parameterTypes": ["java.lang.String"] },
      { "name": "setHandler", "parameterTypes": ["java.lang.Object"] },
      { "name": "setInputChannelName", "parameterTypes": ["java.lang.String"] },
      { "name": "start", "parameterTypes": [] },
      { "name": "stop", "parameterTypes": [] },
      { "name": "stop", "parameterTypes": ["java.lang.Runnable"] }
    ]
  },
  {
    "name": "org.springframework.integration.config.ConverterRegistrar",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      }
    ]
  },
  {
    "name": "org.springframework.integration.config.ConverterRegistrar$IntegrationConverterRegistration",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "<init>", "parameterTypes": ["java.lang.Object"] },
      { "name": "equals", "parameterTypes": ["java.lang.Object"] },
      { "name": "hashCode", "parameterTypes": [] },
      { "name": "toString", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.integration.config.CustomConversionServiceFactoryBean",
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "getObject", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.integration.config.EnableIntegration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.integration.config.EnableIntegrationManagement",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.integration.config.GlobalChannelInterceptorProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterSingletonsInstantiated", "parameterTypes": [] },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": ["java.lang.Object", "java.lang.String"]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": ["org.springframework.beans.factory.BeanFactory"]
      }
    ]
  },
  {
    "name": "org.springframework.integration.config.IdGeneratorConfigurer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": ["org.springframework.context.ApplicationEvent"]
      }
    ]
  },
  {
    "name": "org.springframework.integration.config.IntegrationConfigurationReport",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": ["org.springframework.context.ApplicationEvent"]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      }
    ]
  },
  {
    "name": "org.springframework.integration.config.IntegrationConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.integration.config.IntegrationEvaluationContextFactoryBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      { "name": "getObject", "parameterTypes": [] },
      { "name": "getObjectType", "parameterTypes": [] },
      { "name": "isSingleton", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.integration.config.IntegrationManagementConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setEnvironment",
        "parameterTypes": ["org.springframework.core.env.Environment"]
      },
      {
        "name": "setImportMetadata",
        "parameterTypes": ["org.springframework.core.type.AnnotationMetadata"]
      }
    ]
  },
  {
    "name": "org.springframework.integration.config.IntegrationManagementConfigurer",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterSingletonsInstantiated", "parameterTypes": [] },
      {
        "name": "onApplicationEvent",
        "parameterTypes": ["org.springframework.context.ApplicationEvent"]
      },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": ["java.lang.Object", "java.lang.String"]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      },
      { "name": "setBeanName", "parameterTypes": ["java.lang.String"] }
    ]
  },
  {
    "name": "org.springframework.integration.config.IntegrationSimpleEvaluationContextFactoryBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      { "name": "getObject", "parameterTypes": [] },
      { "name": "getObjectType", "parameterTypes": [] },
      { "name": "isSingleton", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.integration.config.MessagingAnnotationBeanPostProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterSingletonsInstantiated", "parameterTypes": [] },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": ["java.lang.Object", "java.lang.String"]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": ["org.springframework.beans.factory.BeanFactory"]
      }
    ]
  },
  {
    "name": "org.springframework.integration.config.MessagingAnnotationPostProcessor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.integration.context.ExpressionCapable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.integration.context.IntegrationContextUtils",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getIntegrationProperties",
        "parameterTypes": ["org.springframework.beans.factory.BeanFactory"]
      }
    ]
  },
  {
    "name": "org.springframework.integration.context.IntegrationObjectSupport",
    "queryAllDeclaredMethods": true,
    "fields": [{ "name": "toString" }],
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      { "name": "getApplicationContextId", "parameterTypes": [] },
      { "name": "getBeanDescription", "parameterTypes": [] },
      { "name": "getBeanName", "parameterTypes": [] },
      { "name": "getComponentName", "parameterTypes": [] },
      { "name": "getComponentType", "parameterTypes": [] },
      { "name": "getConversionService", "parameterTypes": [] },
      { "name": "getExpression", "parameterTypes": [] },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": ["org.springframework.beans.factory.BeanFactory"]
      },
      { "name": "setBeanName", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setChannelResolver",
        "parameterTypes": [
          "org.springframework.messaging.core.DestinationResolver"
        ]
      },
      { "name": "setComponentName", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setConversionService",
        "parameterTypes": ["org.springframework.core.convert.ConversionService"]
      },
      {
        "name": "setMessageBuilderFactory",
        "parameterTypes": [
          "org.springframework.integration.support.MessageBuilderFactory"
        ]
      },
      {
        "name": "setTaskScheduler",
        "parameterTypes": ["org.springframework.scheduling.TaskScheduler"]
      },
      { "name": "toString", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.integration.context.IntegrationProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [{ "name": "toProperties", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.integration.context.Orderable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.integration.core.ErrorMessagePublisher",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getChannel", "parameterTypes": [] },
      { "name": "getErrorMessageStrategy", "parameterTypes": [] },
      {
        "name": "publish",
        "parameterTypes": [
          "java.lang.Throwable",
          "org.springframework.core.AttributeAccessor"
        ]
      },
      {
        "name": "publish",
        "parameterTypes": [
          "org.springframework.messaging.Message",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "publish",
        "parameterTypes": [
          "org.springframework.messaging.Message",
          "org.springframework.messaging.Message",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "publish",
        "parameterTypes": [
          "org.springframework.messaging.Message",
          "org.springframework.messaging.MessagingException"
        ]
      },
      {
        "name": "publish",
        "parameterTypes": ["org.springframework.messaging.MessagingException"]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": ["org.springframework.beans.factory.BeanFactory"]
      },
      { "name": "setChannelName", "parameterTypes": ["java.lang.String"] }
    ]
  },
  {
    "name": "org.springframework.integration.dsl.BaseIntegrationFlowDefinition$ReplyProducerCleaner",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessBeforeDestruction",
        "parameterTypes": ["java.lang.Object", "java.lang.String"]
      },
      { "name": "requiresDestruction", "parameterTypes": ["java.lang.Object"] }
    ]
  },
  {
    "name": "org.springframework.integration.dsl.context.IntegrationFlowBeanPostProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterSingletonsInstantiated", "parameterTypes": [] },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": ["java.lang.Object", "java.lang.String"]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      }
    ]
  },
  {
    "name": "org.springframework.integration.dsl.context.IntegrationFlowContext",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.integration.dsl.context.StandardIntegrationFlowContext",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getRegistrationById", "parameterTypes": ["java.lang.String"] },
      { "name": "getRegistry", "parameterTypes": [] },
      { "name": "isUseIdAsPrefix", "parameterTypes": ["java.lang.String"] },
      {
        "name": "messagingTemplateFor",
        "parameterTypes": ["java.lang.String"]
      },
      {
        "name": "registration",
        "parameterTypes": [
          "org.springframework.integration.dsl.IntegrationFlow"
        ]
      },
      { "name": "remove", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setBeanFactory",
        "parameterTypes": ["org.springframework.beans.factory.BeanFactory"]
      }
    ]
  },
  {
    "name": "org.springframework.integration.endpoint.AbstractEndpoint",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "destroy", "parameterTypes": [] },
      { "name": "getPhase", "parameterTypes": [] },
      { "name": "getRole", "parameterTypes": [] },
      { "name": "isActive", "parameterTypes": [] },
      { "name": "isAutoStartup", "parameterTypes": [] },
      { "name": "isRunning", "parameterTypes": [] },
      { "name": "setAutoStartup", "parameterTypes": ["boolean"] },
      { "name": "setPhase", "parameterTypes": ["int"] },
      { "name": "setRole", "parameterTypes": ["java.lang.String"] },
      { "name": "start", "parameterTypes": [] },
      { "name": "stop", "parameterTypes": [] },
      { "name": "stop", "parameterTypes": ["java.lang.Runnable"] }
    ]
  },
  {
    "name": "org.springframework.integration.endpoint.EventDrivenConsumer",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getHandler", "parameterTypes": [] },
      { "name": "getInputChannel", "parameterTypes": [] },
      { "name": "getOutputChannel", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.integration.endpoint.IntegrationConsumer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.integration.expression.SpelPropertyAccessorRegistrar",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.integration.graph.IntegrationGraphServer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": ["org.springframework.context.ApplicationEvent"]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      }
    ]
  },
  {
    "name": "org.springframework.integration.handler.AbstractMessageHandler",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "handleMessage",
        "parameterTypes": ["org.springframework.messaging.Message"]
      },
      { "name": "onComplete", "parameterTypes": [] },
      { "name": "onError", "parameterTypes": ["java.lang.Throwable"] },
      { "name": "onNext", "parameterTypes": ["java.lang.Object"] },
      {
        "name": "onNext",
        "parameterTypes": ["org.springframework.messaging.Message"]
      },
      {
        "name": "onSubscribe",
        "parameterTypes": ["org.reactivestreams.Subscription"]
      },
      {
        "name": "setObservationConvention",
        "parameterTypes": [
          "org.springframework.integration.support.management.observation.MessageReceiverObservationConvention"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.handler.LoggingHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.integration.handler.LoggingHandler$Level"
        ]
      },
      { "name": "getComponentType", "parameterTypes": [] },
      { "name": "toMessageHandler", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.integration.handler.LoggingHandler$Level",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.integration.handler.MessageHandlerSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "destroy", "parameterTypes": [] },
      { "name": "getIntegrationPatternType", "parameterTypes": [] },
      { "name": "getManagedName", "parameterTypes": [] },
      { "name": "getManagedType", "parameterTypes": [] },
      { "name": "getOrder", "parameterTypes": [] },
      { "name": "getOverrides", "parameterTypes": [] },
      { "name": "isLoggingEnabled", "parameterTypes": [] },
      { "name": "isObserved", "parameterTypes": [] },
      {
        "name": "registerMetricsCaptor",
        "parameterTypes": [
          "org.springframework.integration.support.management.metrics.MetricsCaptor"
        ]
      },
      {
        "name": "registerObservationRegistry",
        "parameterTypes": ["io.micrometer.observation.ObservationRegistry"]
      },
      { "name": "setLoggingEnabled", "parameterTypes": ["boolean"] },
      { "name": "setManagedName", "parameterTypes": ["java.lang.String"] },
      { "name": "setManagedType", "parameterTypes": ["java.lang.String"] },
      { "name": "setOrder", "parameterTypes": ["int"] },
      { "name": "setShouldTrack", "parameterTypes": ["boolean"] }
    ]
  },
  {
    "name": "org.springframework.integration.handler.support.IntegrationMessageHandlerMethodFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      { "name": "<init>", "parameterTypes": ["boolean"] },
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      {
        "name": "createInvocableHandlerMethod",
        "parameterTypes": ["java.lang.Object", "java.lang.reflect.Method"]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": ["org.springframework.beans.factory.BeanFactory"]
      },
      {
        "name": "setMessageConverter",
        "parameterTypes": [
          "org.springframework.messaging.converter.MessageConverter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.scheduling.PollerMetadata",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.integration.support.DefaultMessageBuilderFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "fromMessage",
        "parameterTypes": ["org.springframework.messaging.Message"]
      },
      {
        "name": "setReadOnlyHeaders",
        "parameterTypes": ["java.lang.String[]"]
      },
      { "name": "withPayload", "parameterTypes": ["java.lang.Object"] }
    ]
  },
  {
    "name": "org.springframework.integration.support.MessageBuilderFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.integration.support.SmartLifecycleRoleController",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": ["org.springframework.context.ApplicationEvent"]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      }
    ]
  },
  {
    "name": "org.springframework.integration.support.channel.BeanFactoryChannelResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "resolveDestination", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setBeanFactory",
        "parameterTypes": ["org.springframework.beans.factory.BeanFactory"]
      }
    ]
  },
  {
    "name": "org.springframework.integration.support.channel.HeaderChannelRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.integration.support.context.NamedComponent",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.integration.support.converter.DefaultDatatypeChannelMessageConverter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "fromMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message",
          "java.lang.Class"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": ["org.springframework.beans.factory.BeanFactory"]
      },
      {
        "name": "toMessage",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.MessageHeaders"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.support.management.IntegrationManagedResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.integration.support.management.IntegrationManagement",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      { "name": "getManagedName", "parameterTypes": [] },
      { "name": "getManagedType", "parameterTypes": [] },
      { "name": "getThisAs", "parameterTypes": [] },
      { "name": "isObserved", "parameterTypes": [] },
      {
        "name": "registerObservationRegistry",
        "parameterTypes": ["io.micrometer.observation.ObservationRegistry"]
      },
      { "name": "setManagedName", "parameterTypes": ["java.lang.String"] },
      { "name": "setManagedType", "parameterTypes": ["java.lang.String"] }
    ]
  },
  {
    "name": "org.springframework.integration.support.management.ManageableLifecycle",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.integration.support.management.ManageableSmartLifecycle",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.integration.support.management.SubscribableChannelManagement",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.integration.support.management.TrackableComponent",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.integration.support.management.metrics.MetricsCaptor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.integration.support.management.micrometer.MicrometerMetricsCaptor",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "counterBuilder", "parameterTypes": ["java.lang.String"] },
      {
        "name": "gaugeBuilder",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.util.function.ToDoubleFunction"
        ]
      },
      {
        "name": "removeMeter",
        "parameterTypes": [
          "org.springframework.integration.support.management.metrics.MeterFacade"
        ]
      },
      { "name": "start", "parameterTypes": [] },
      { "name": "timerBuilder", "parameterTypes": ["java.lang.String"] }
    ]
  },
  {
    "name": "org.springframework.integration.support.management.micrometer.MicrometerMetricsCaptorConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.JdbcOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.JdbcTemplate",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection",
          "int",
          "org.springframework.jdbc.core.ParameterizedPreparedStatementSetter"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": ["java.lang.String", "java.util.List"]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": ["java.lang.String", "java.util.List", "int[]"]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.BatchPreparedStatementSetter"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.BatchPreparedStatementSetter",
          "org.springframework.jdbc.support.KeyHolder"
        ]
      },
      { "name": "batchUpdate", "parameterTypes": ["java.lang.String[]"] },
      {
        "name": "call",
        "parameterTypes": [
          "org.springframework.jdbc.core.CallableStatementCreator",
          "java.util.List"
        ]
      },
      { "name": "execute", "parameterTypes": ["java.lang.String"] },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.CallableStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.CallableStatementCreator",
          "org.springframework.jdbc.core.CallableStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": ["org.springframework.jdbc.core.ConnectionCallback"]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": ["org.springframework.jdbc.core.StatementCallback"]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.ResultSetExtractor",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowCallbackHandler",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      { "name": "queryForList", "parameterTypes": ["java.lang.String"] },
      {
        "name": "queryForList",
        "parameterTypes": ["java.lang.String", "java.lang.Class"]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": ["java.lang.String", "java.lang.Object[]"]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": ["java.lang.String", "java.lang.Object[]", "int[]"]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "java.lang.Class"
        ]
      },
      { "name": "queryForMap", "parameterTypes": ["java.lang.String"] },
      {
        "name": "queryForMap",
        "parameterTypes": ["java.lang.String", "java.lang.Object[]"]
      },
      {
        "name": "queryForMap",
        "parameterTypes": ["java.lang.String", "java.lang.Object[]", "int[]"]
      },
      {
        "name": "queryForObject",
        "parameterTypes": ["java.lang.String", "java.lang.Class"]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      { "name": "queryForRowSet", "parameterTypes": ["java.lang.String"] },
      {
        "name": "queryForRowSet",
        "parameterTypes": ["java.lang.String", "java.lang.Object[]"]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": ["java.lang.String", "java.lang.Object[]", "int[]"]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      { "name": "update", "parameterTypes": ["java.lang.String"] },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter"
        ]
      },
      {
        "name": "update",
        "parameterTypes": ["java.lang.String", "java.lang.Object[]"]
      },
      {
        "name": "update",
        "parameterTypes": ["java.lang.String", "java.lang.Object[]", "int[]"]
      },
      {
        "name": "update",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.support.KeyHolder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "batchUpdate",
        "parameterTypes": ["java.lang.String", "java.util.Map[]"]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource[]"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource[]",
          "org.springframework.jdbc.support.KeyHolder"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource[]",
          "org.springframework.jdbc.support.KeyHolder",
          "java.lang.String[]"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      { "name": "getJdbcOperations", "parameterTypes": [] },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": ["java.lang.String", "java.util.Map"]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": ["java.lang.String", "java.util.Map"]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": ["java.lang.String", "java.util.Map"]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "update",
        "parameterTypes": ["java.lang.String", "java.util.Map"]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.support.KeyHolder"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.support.KeyHolder",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.core.simple.DefaultJdbcClient",
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "sql", "parameterTypes": ["java.lang.String"] }]
  },
  {
    "name": "org.springframework.jdbc.core.simple.JdbcClient",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.datasource.DataSourceTransactionManager",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getDataSource", "parameterTypes": [] },
      { "name": "getResourceFactory", "parameterTypes": [] },
      { "name": "isEnforceReadOnly", "parameterTypes": [] },
      { "name": "setDataSource", "parameterTypes": ["javax.sql.DataSource"] },
      { "name": "setEnforceReadOnly", "parameterTypes": ["boolean"] }
    ]
  },
  {
    "name": "org.springframework.jdbc.datasource.DelegatingDataSource"
  },
  {
    "name": "org.springframework.jdbc.support.JdbcAccessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      { "name": "getDataSource", "parameterTypes": [] },
      { "name": "getExceptionTranslator", "parameterTypes": [] },
      { "name": "isLazyInit", "parameterTypes": [] },
      { "name": "setDataSource", "parameterTypes": ["javax.sql.DataSource"] },
      {
        "name": "setDatabaseProductName",
        "parameterTypes": ["java.lang.String"]
      },
      {
        "name": "setExceptionTranslator",
        "parameterTypes": [
          "org.springframework.jdbc.support.SQLExceptionTranslator"
        ]
      },
      { "name": "setLazyInit", "parameterTypes": ["boolean"] }
    ]
  },
  {
    "name": "org.springframework.jdbc.support.JdbcTransactionManager",
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "afterPropertiesSet", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.jmx.export.annotation.ManagedAttribute",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jmx.export.annotation.ManagedMetric",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jmx.export.annotation.ManagedOperation",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.kafka.annotation.EnableKafka",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.kafka.config.AbstractKafkaListenerContainerFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createContainer",
        "parameterTypes": ["java.util.regex.Pattern"]
      },
      { "name": "createContainer", "parameterTypes": ["java.lang.String[]"] },
      {
        "name": "createContainer",
        "parameterTypes": [
          "org.springframework.kafka.support.TopicPartitionOffset[]"
        ]
      },
      {
        "name": "createListenerContainer",
        "parameterTypes": [
          "org.springframework.kafka.config.KafkaListenerEndpoint"
        ]
      },
      { "name": "getConsumerFactory", "parameterTypes": [] },
      { "name": "getContainerProperties", "parameterTypes": [] },
      {
        "name": "initializeContainer",
        "parameterTypes": [
          "org.springframework.kafka.listener.AbstractMessageListenerContainer",
          "org.springframework.kafka.config.KafkaListenerEndpoint"
        ]
      },
      { "name": "isBatchListener", "parameterTypes": [] },
      { "name": "setAckDiscarded", "parameterTypes": ["java.lang.Boolean"] },
      {
        "name": "setAfterRollbackProcessor",
        "parameterTypes": [
          "org.springframework.kafka.listener.AfterRollbackProcessor"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      { "name": "setAutoStartup", "parameterTypes": ["java.lang.Boolean"] },
      {
        "name": "setBatchInterceptor",
        "parameterTypes": [
          "org.springframework.kafka.listener.BatchInterceptor"
        ]
      },
      { "name": "setBatchListener", "parameterTypes": ["java.lang.Boolean"] },
      {
        "name": "setBatchMessageConverter",
        "parameterTypes": [
          "org.springframework.kafka.support.converter.BatchMessageConverter"
        ]
      },
      {
        "name": "setBatchToRecordAdapter",
        "parameterTypes": [
          "org.springframework.kafka.listener.adapter.BatchToRecordAdapter"
        ]
      },
      { "name": "setChangeConsumerThreadName", "parameterTypes": ["boolean"] },
      {
        "name": "setCommonErrorHandler",
        "parameterTypes": [
          "org.springframework.kafka.listener.CommonErrorHandler"
        ]
      },
      {
        "name": "setConsumerFactory",
        "parameterTypes": ["org.springframework.kafka.core.ConsumerFactory"]
      },
      {
        "name": "setContainerCustomizer",
        "parameterTypes": [
          "org.springframework.kafka.config.ContainerCustomizer"
        ]
      },
      {
        "name": "setCorrelationHeaderName",
        "parameterTypes": ["java.lang.String"]
      },
      { "name": "setMissingTopicsFatal", "parameterTypes": ["boolean"] },
      { "name": "setPhase", "parameterTypes": ["int"] },
      {
        "name": "setRecordFilterStrategy",
        "parameterTypes": [
          "org.springframework.kafka.listener.adapter.RecordFilterStrategy"
        ]
      },
      {
        "name": "setRecordInterceptor",
        "parameterTypes": [
          "org.springframework.kafka.listener.RecordInterceptor"
        ]
      },
      {
        "name": "setRecordMessageConverter",
        "parameterTypes": [
          "org.springframework.kafka.support.converter.RecordMessageConverter"
        ]
      },
      {
        "name": "setReplyHeadersConfigurer",
        "parameterTypes": [
          "org.springframework.kafka.listener.adapter.ReplyHeadersConfigurer"
        ]
      },
      {
        "name": "setReplyTemplate",
        "parameterTypes": ["org.springframework.kafka.core.KafkaTemplate"]
      },
      {
        "name": "setThreadNameSupplier",
        "parameterTypes": ["java.util.function.Function"]
      }
    ]
  },
  {
    "name": "org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.kafka.config.KafkaListenerContainerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "createContainer",
        "parameterTypes": ["java.util.regex.Pattern"]
      },
      { "name": "createContainer", "parameterTypes": ["java.lang.String[]"] }
    ]
  },
  {
    "name": "org.springframework.kafka.config.KafkaListenerEndpointRegistry",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "destroy", "parameterTypes": [] },
      { "name": "getAllListenerContainers", "parameterTypes": [] },
      {
        "name": "getListenerContainer",
        "parameterTypes": ["java.lang.String"]
      },
      { "name": "getListenerContainerIds", "parameterTypes": [] },
      { "name": "getListenerContainers", "parameterTypes": [] },
      { "name": "getPhase", "parameterTypes": [] },
      {
        "name": "getUnregisteredListenerContainer",
        "parameterTypes": ["java.lang.String"]
      },
      { "name": "isAutoStartup", "parameterTypes": [] },
      { "name": "isRunning", "parameterTypes": [] },
      {
        "name": "onApplicationEvent",
        "parameterTypes": ["org.springframework.context.ApplicationEvent"]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      },
      { "name": "start", "parameterTypes": [] },
      { "name": "stop", "parameterTypes": [] },
      { "name": "stop", "parameterTypes": ["java.lang.Runnable"] }
    ]
  },
  {
    "name": "org.springframework.kafka.core.ConsumerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      { "name": "createConsumer", "parameterTypes": [] },
      { "name": "createConsumer", "parameterTypes": ["java.lang.String"] },
      {
        "name": "createConsumer",
        "parameterTypes": ["java.lang.String", "java.lang.String"]
      },
      {
        "name": "createConsumer",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.kafka.core.DefaultKafkaConsumerFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addListener",
        "parameterTypes": [
          "int",
          "org.springframework.kafka.core.ConsumerFactory$Listener"
        ]
      },
      {
        "name": "addListener",
        "parameterTypes": [
          "org.springframework.kafka.core.ConsumerFactory$Listener"
        ]
      },
      {
        "name": "addPostProcessor",
        "parameterTypes": [
          "org.springframework.kafka.core.ConsumerPostProcessor"
        ]
      },
      {
        "name": "createConsumer",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.util.Properties"
        ]
      },
      { "name": "getConfigurationProperties", "parameterTypes": [] },
      { "name": "getKeyDeserializer", "parameterTypes": [] },
      { "name": "getListeners", "parameterTypes": [] },
      { "name": "getPostProcessors", "parameterTypes": [] },
      { "name": "getValueDeserializer", "parameterTypes": [] },
      { "name": "isAutoCommit", "parameterTypes": [] },
      { "name": "removeConfig", "parameterTypes": ["java.lang.String"] },
      {
        "name": "removeListener",
        "parameterTypes": [
          "org.springframework.kafka.core.ConsumerFactory$Listener"
        ]
      },
      {
        "name": "removePostProcessor",
        "parameterTypes": [
          "org.springframework.kafka.core.ConsumerPostProcessor"
        ]
      },
      { "name": "setBeanName", "parameterTypes": ["java.lang.String"] },
      { "name": "updateConfigs", "parameterTypes": ["java.util.Map"] }
    ]
  },
  {
    "name": "org.springframework.kafka.core.DefaultKafkaProducerFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addListener",
        "parameterTypes": [
          "int",
          "org.springframework.kafka.core.ProducerFactory$Listener"
        ]
      },
      {
        "name": "addListener",
        "parameterTypes": [
          "org.springframework.kafka.core.ProducerFactory$Listener"
        ]
      },
      {
        "name": "addPostProcessor",
        "parameterTypes": [
          "org.springframework.kafka.core.ProducerPostProcessor"
        ]
      },
      { "name": "closeThreadBoundProducer", "parameterTypes": [] },
      {
        "name": "copyWithConfigurationOverride",
        "parameterTypes": ["java.util.Map"]
      },
      { "name": "createNonTransactionalProducer", "parameterTypes": [] },
      { "name": "createProducer", "parameterTypes": [] },
      { "name": "createProducer", "parameterTypes": ["java.lang.String"] },
      { "name": "destroy", "parameterTypes": [] },
      { "name": "getConfigurationProperties", "parameterTypes": [] },
      { "name": "getKeySerializer", "parameterTypes": [] },
      { "name": "getKeySerializerSupplier", "parameterTypes": [] },
      { "name": "getListeners", "parameterTypes": [] },
      { "name": "getPhase", "parameterTypes": [] },
      { "name": "getPhysicalCloseTimeout", "parameterTypes": [] },
      { "name": "getPostProcessors", "parameterTypes": [] },
      { "name": "getTransactionIdPrefix", "parameterTypes": [] },
      { "name": "getValueSerializer", "parameterTypes": [] },
      { "name": "getValueSerializerSupplier", "parameterTypes": [] },
      { "name": "isProducerPerThread", "parameterTypes": [] },
      { "name": "isRunning", "parameterTypes": [] },
      {
        "name": "onApplicationEvent",
        "parameterTypes": ["org.springframework.context.ApplicationEvent"]
      },
      { "name": "removeConfig", "parameterTypes": ["java.lang.String"] },
      {
        "name": "removeListener",
        "parameterTypes": [
          "org.springframework.kafka.core.ProducerFactory$Listener"
        ]
      },
      {
        "name": "removePostProcessor",
        "parameterTypes": [
          "org.springframework.kafka.core.ProducerPostProcessor"
        ]
      },
      { "name": "reset", "parameterTypes": [] },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      },
      { "name": "setBeanName", "parameterTypes": ["java.lang.String"] },
      { "name": "start", "parameterTypes": [] },
      { "name": "stop", "parameterTypes": [] },
      { "name": "transactionCapable", "parameterTypes": [] },
      { "name": "updateConfigs", "parameterTypes": ["java.util.Map"] }
    ]
  },
  {
    "name": "org.springframework.kafka.core.KafkaAdmin",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterSingletonsInstantiated", "parameterTypes": [] },
      { "name": "clusterId", "parameterTypes": [] },
      {
        "name": "createOrModifyTopics",
        "parameterTypes": ["org.apache.kafka.clients.admin.NewTopic[]"]
      },
      { "name": "describeTopics", "parameterTypes": ["java.lang.String[]"] },
      { "name": "getConfigurationProperties", "parameterTypes": [] },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      }
    ]
  },
  {
    "name": "org.springframework.kafka.core.KafkaAdminOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.kafka.core.KafkaOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "receive",
        "parameterTypes": ["java.lang.String", "int", "long"]
      },
      { "name": "receive", "parameterTypes": ["java.util.Collection"] }
    ]
  },
  {
    "name": "org.springframework.kafka.core.KafkaResourceFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBootstrapServersSupplier",
        "parameterTypes": ["java.util.function.Supplier"]
      }
    ]
  },
  {
    "name": "org.springframework.kafka.core.KafkaTemplate",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterSingletonsInstantiated", "parameterTypes": [] },
      { "name": "destroy", "parameterTypes": [] },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.kafka.core.KafkaOperations$ProducerCallback"
        ]
      },
      {
        "name": "executeInTransaction",
        "parameterTypes": [
          "org.springframework.kafka.core.KafkaOperations$OperationsCallback"
        ]
      },
      { "name": "flush", "parameterTypes": [] },
      { "name": "getProducerFactory", "parameterTypes": [] },
      { "name": "inTransaction", "parameterTypes": [] },
      { "name": "isAllowNonTransactional", "parameterTypes": [] },
      { "name": "isTransactional", "parameterTypes": [] },
      { "name": "metrics", "parameterTypes": [] },
      {
        "name": "onApplicationEvent",
        "parameterTypes": ["org.springframework.context.ApplicationEvent"]
      },
      { "name": "partitionsFor", "parameterTypes": ["java.lang.String"] },
      {
        "name": "receive",
        "parameterTypes": [
          "java.lang.String",
          "int",
          "long",
          "java.time.Duration"
        ]
      },
      {
        "name": "receive",
        "parameterTypes": ["java.util.Collection", "java.time.Duration"]
      },
      {
        "name": "send",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Integer",
          "java.lang.Long",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Integer",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "send",
        "parameterTypes": ["java.lang.String", "java.lang.Object"]
      },
      {
        "name": "send",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "send",
        "parameterTypes": ["org.apache.kafka.clients.producer.ProducerRecord"]
      },
      {
        "name": "send",
        "parameterTypes": ["org.springframework.messaging.Message"]
      },
      {
        "name": "sendDefault",
        "parameterTypes": [
          "java.lang.Integer",
          "java.lang.Long",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "sendDefault",
        "parameterTypes": [
          "java.lang.Integer",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      { "name": "sendDefault", "parameterTypes": ["java.lang.Object"] },
      {
        "name": "sendDefault",
        "parameterTypes": ["java.lang.Object", "java.lang.Object"]
      },
      {
        "name": "sendOffsetsToTransaction",
        "parameterTypes": [
          "java.util.Map",
          "org.apache.kafka.clients.consumer.ConsumerGroupMetadata"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      },
      { "name": "setBeanName", "parameterTypes": ["java.lang.String"] }
    ]
  },
  {
    "name": "org.springframework.kafka.core.ProducerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.kafka.listener.ConsumerProperties",
    "methods": [
      { "name": "getAuthExceptionRetryInterval", "parameterTypes": [] },
      { "name": "getClientId", "parameterTypes": [] },
      { "name": "getCommitCallback", "parameterTypes": [] },
      { "name": "getCommitLogLevel", "parameterTypes": [] },
      { "name": "getCommitRetries", "parameterTypes": [] },
      { "name": "getConsumerRebalanceListener", "parameterTypes": [] },
      { "name": "getGroupId", "parameterTypes": [] },
      { "name": "getKafkaConsumerProperties", "parameterTypes": [] },
      { "name": "getOffsetAndMetadataProvider", "parameterTypes": [] },
      { "name": "getPollTimeout", "parameterTypes": [] },
      { "name": "getSyncCommitTimeout", "parameterTypes": [] },
      { "name": "isCheckDeserExWhenKeyNull", "parameterTypes": [] },
      { "name": "isCheckDeserExWhenValueNull", "parameterTypes": [] },
      { "name": "isFixTxOffsets", "parameterTypes": [] },
      { "name": "isSyncCommits", "parameterTypes": [] },
      {
        "name": "setAuthExceptionRetryInterval",
        "parameterTypes": ["java.time.Duration"]
      },
      { "name": "setCheckDeserExWhenKeyNull", "parameterTypes": ["boolean"] },
      { "name": "setCheckDeserExWhenValueNull", "parameterTypes": ["boolean"] },
      { "name": "setClientId", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setCommitCallback",
        "parameterTypes": [
          "org.apache.kafka.clients.consumer.OffsetCommitCallback"
        ]
      },
      {
        "name": "setCommitLogLevel",
        "parameterTypes": [
          "org.springframework.kafka.support.LogIfLevelEnabled$Level"
        ]
      },
      { "name": "setCommitRetries", "parameterTypes": ["int"] },
      {
        "name": "setConsumerRebalanceListener",
        "parameterTypes": [
          "org.apache.kafka.clients.consumer.ConsumerRebalanceListener"
        ]
      },
      { "name": "setFixTxOffsets", "parameterTypes": ["boolean"] },
      { "name": "setGroupId", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setKafkaConsumerProperties",
        "parameterTypes": ["java.util.Properties"]
      },
      {
        "name": "setOffsetAndMetadataProvider",
        "parameterTypes": [
          "org.springframework.kafka.listener.OffsetAndMetadataProvider"
        ]
      },
      { "name": "setPollTimeout", "parameterTypes": ["long"] },
      { "name": "setSyncCommits", "parameterTypes": ["boolean"] }
    ]
  },
  {
    "name": "org.springframework.kafka.listener.ContainerProperties",
    "queryAllPublicMethods": true,
    "fields": [{ "name": "isSubBatchPerPartition" }, { "name": "toString" }],
    "methods": [
      { "name": "getAckMode", "parameterTypes": [] },
      { "name": "getAdviceChain", "parameterTypes": [] },
      { "name": "getAssignmentCommitOption", "parameterTypes": [] },
      { "name": "getConsumerStartTimeout", "parameterTypes": [] },
      { "name": "getEosMode", "parameterTypes": [] },
      { "name": "getIdleBeforeDataMultiplier", "parameterTypes": [] },
      { "name": "getIdleBetweenPolls", "parameterTypes": [] },
      { "name": "getIdleEventInterval", "parameterTypes": [] },
      { "name": "getIdlePartitionEventInterval", "parameterTypes": [] },
      { "name": "getListenerTaskExecutor", "parameterTypes": [] },
      { "name": "getMessageListener", "parameterTypes": [] },
      { "name": "getMicrometerTags", "parameterTypes": [] },
      { "name": "getMicrometerTagsProvider", "parameterTypes": [] },
      { "name": "getMonitorInterval", "parameterTypes": [] },
      { "name": "getNoPollThreshold", "parameterTypes": [] },
      { "name": "getObservationConvention", "parameterTypes": [] },
      { "name": "getPollTimeoutWhilePaused", "parameterTypes": [] },
      { "name": "getScheduler", "parameterTypes": [] },
      { "name": "getShutdownTimeout", "parameterTypes": [] },
      { "name": "getTransactionDefinition", "parameterTypes": [] },
      { "name": "getTransactionManager", "parameterTypes": [] },
      { "name": "isAsyncAcks", "parameterTypes": [] },
      { "name": "isDeliveryAttemptHeader", "parameterTypes": [] },
      { "name": "isLogContainerConfig", "parameterTypes": [] },
      { "name": "isMicrometerEnabled", "parameterTypes": [] },
      { "name": "isMissingTopicsFatal", "parameterTypes": [] },
      { "name": "isObservationEnabled", "parameterTypes": [] },
      { "name": "isPauseImmediate", "parameterTypes": [] },
      { "name": "isRestartAfterAuthExceptions", "parameterTypes": [] },
      { "name": "isStopContainerWhenFenced", "parameterTypes": [] },
      { "name": "isStopImmediate", "parameterTypes": [] },
      {
        "name": "setAckMode",
        "parameterTypes": [
          "org.springframework.kafka.listener.ContainerProperties$AckMode"
        ]
      },
      {
        "name": "setAdviceChain",
        "parameterTypes": ["org.aopalliance.aop.Advice[]"]
      },
      {
        "name": "setAssignmentCommitOption",
        "parameterTypes": [
          "org.springframework.kafka.listener.ContainerProperties$AssignmentCommitOption"
        ]
      },
      { "name": "setAsyncAcks", "parameterTypes": ["boolean"] },
      {
        "name": "setConsumerStartTimeout",
        "parameterTypes": ["java.time.Duration"]
      },
      { "name": "setDeliveryAttemptHeader", "parameterTypes": ["boolean"] },
      {
        "name": "setEosMode",
        "parameterTypes": [
          "org.springframework.kafka.listener.ContainerProperties$EOSMode"
        ]
      },
      { "name": "setIdleBeforeDataMultiplier", "parameterTypes": ["double"] },
      { "name": "setIdleBetweenPolls", "parameterTypes": ["long"] },
      { "name": "setIdleEventInterval", "parameterTypes": ["java.lang.Long"] },
      {
        "name": "setIdlePartitionEventInterval",
        "parameterTypes": ["java.lang.Long"]
      },
      {
        "name": "setListenerTaskExecutor",
        "parameterTypes": ["org.springframework.core.task.AsyncTaskExecutor"]
      },
      { "name": "setLogContainerConfig", "parameterTypes": ["boolean"] },
      { "name": "setMessageListener", "parameterTypes": ["java.lang.Object"] },
      { "name": "setMicrometerEnabled", "parameterTypes": ["boolean"] },
      { "name": "setMicrometerTags", "parameterTypes": ["java.util.Map"] },
      {
        "name": "setMicrometerTagsProvider",
        "parameterTypes": ["java.util.function.Function"]
      },
      { "name": "setMissingTopicsFatal", "parameterTypes": ["boolean"] },
      { "name": "setMonitorInterval", "parameterTypes": ["int"] },
      { "name": "setNoPollThreshold", "parameterTypes": ["float"] },
      {
        "name": "setObservationConvention",
        "parameterTypes": [
          "org.springframework.kafka.support.micrometer.KafkaListenerObservationConvention"
        ]
      },
      { "name": "setObservationEnabled", "parameterTypes": ["boolean"] },
      { "name": "setPauseImmediate", "parameterTypes": ["boolean"] },
      {
        "name": "setPollTimeoutWhilePaused",
        "parameterTypes": ["java.time.Duration"]
      },
      {
        "name": "setRestartAfterAuthExceptions",
        "parameterTypes": ["boolean"]
      },
      {
        "name": "setScheduler",
        "parameterTypes": ["org.springframework.scheduling.TaskScheduler"]
      },
      { "name": "setShutdownTimeout", "parameterTypes": ["long"] },
      { "name": "setStopContainerWhenFenced", "parameterTypes": ["boolean"] },
      { "name": "setStopImmediate", "parameterTypes": ["boolean"] },
      {
        "name": "setSyncCommitTimeout",
        "parameterTypes": ["java.time.Duration"]
      },
      {
        "name": "setTransactionDefinition",
        "parameterTypes": [
          "org.springframework.transaction.TransactionDefinition"
        ]
      },
      {
        "name": "setTransactionManager",
        "parameterTypes": [
          "org.springframework.transaction.PlatformTransactionManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.kafka.listener.ContainerProperties$AckMode",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.kafka.listener.ListenerContainerRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.kafka.support.LoggingProducerListener",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onError",
        "parameterTypes": [
          "org.apache.kafka.clients.producer.ProducerRecord",
          "org.apache.kafka.clients.producer.RecordMetadata",
          "java.lang.Exception"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.kafka.support.ProducerListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "onSuccess",
        "parameterTypes": [
          "org.apache.kafka.clients.producer.ProducerRecord",
          "org.apache.kafka.clients.producer.RecordMetadata"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.MessageChannel",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.MessageHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.integration.handler.LoggingHandler"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.integration.handler.LoggingHandler"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.integration.handler.LoggingHandler"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.integration.handler.LoggingHandler"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.MessageHeaders",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.messaging.PollableChannel",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.SubscribableChannel",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.converter.CompositeMessageConverter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "fromMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message",
          "java.lang.Class"
        ]
      },
      {
        "name": "fromMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message",
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "toMessage",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.MessageHeaders"
        ]
      },
      {
        "name": "toMessage",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.MessageHeaders",
          "java.lang.Object"
        ]
      },
      { "name": "toMessageConverter", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.messaging.converter.MessageConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.messaging.converter.CompositeMessageConverter"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.messaging.converter.CompositeMessageConverter"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.messaging.converter.CompositeMessageConverter"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.messaging.converter.CompositeMessageConverter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.converter.SmartMessageConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.core.DestinationResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      {
        "name": "createInvocableHandlerMethod",
        "parameterTypes": ["java.lang.Object", "java.lang.reflect.Method"]
      },
      { "name": "setArgumentResolvers", "parameterTypes": ["java.util.List"] },
      {
        "name": "setBeanFactory",
        "parameterTypes": ["org.springframework.beans.factory.BeanFactory"]
      },
      {
        "name": "setConversionService",
        "parameterTypes": ["org.springframework.core.convert.ConversionService"]
      },
      {
        "name": "setCustomArgumentResolvers",
        "parameterTypes": ["java.util.List"]
      },
      {
        "name": "setValidator",
        "parameterTypes": ["org.springframework.validation.Validator"]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.handler.annotation.support.MessageHandlerMethodFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.support.InterceptableChannel",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.retry.RetryOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.retry.support.RetryTemplate",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "execute",
        "parameterTypes": ["org.springframework.retry.RetryCallback"]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.retry.RetryCallback",
          "org.springframework.retry.RecoveryCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.retry.RetryCallback",
          "org.springframework.retry.RecoveryCallback",
          "org.springframework.retry.RetryState"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.retry.RetryCallback",
          "org.springframework.retry.RetryState"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.SchedulingTaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [{ "name": "prefersShortLivedTasks", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.scheduling.TaskScheduler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "schedule",
        "parameterTypes": ["java.lang.Runnable", "java.util.Date"]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": ["java.lang.Runnable", "long"]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": ["java.lang.Runnable", "java.util.Date", "long"]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": ["java.lang.Runnable", "long"]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": ["java.lang.Runnable", "java.util.Date", "long"]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.annotation.SchedulingConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.scheduling.concurrent.CustomizableThreadFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "newThread", "parameterTypes": ["java.lang.Runnable"] }
    ]
  },
  {
    "name": "org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      { "name": "destroy", "parameterTypes": [] },
      { "name": "getPhase", "parameterTypes": [] },
      { "name": "initialize", "parameterTypes": [] },
      { "name": "initiateShutdown", "parameterTypes": [] },
      { "name": "isRunning", "parameterTypes": [] },
      {
        "name": "onApplicationEvent",
        "parameterTypes": ["org.springframework.context.ApplicationEvent"]
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.event.ContextClosedEvent"
        ]
      },
      {
        "name": "setAcceptTasksAfterContextClose",
        "parameterTypes": ["boolean"]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      },
      { "name": "setAwaitTerminationMillis", "parameterTypes": ["long"] },
      { "name": "setAwaitTerminationSeconds", "parameterTypes": ["int"] },
      { "name": "setBeanName", "parameterTypes": ["java.lang.String"] },
      { "name": "setPhase", "parameterTypes": ["int"] },
      {
        "name": "setRejectedExecutionHandler",
        "parameterTypes": ["java.util.concurrent.RejectedExecutionHandler"]
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": ["java.util.concurrent.ThreadFactory"]
      },
      { "name": "setThreadNamePrefix", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setWaitForTasksToCompleteOnShutdown",
        "parameterTypes": ["boolean"]
      },
      { "name": "shutdown", "parameterTypes": [] },
      { "name": "start", "parameterTypes": [] },
      { "name": "stop", "parameterTypes": [] },
      { "name": "stop", "parameterTypes": ["java.lang.Runnable"] }
    ]
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "execute", "parameterTypes": ["java.lang.Runnable"] },
      { "name": "submit", "parameterTypes": ["java.lang.Runnable"] },
      { "name": "submit", "parameterTypes": ["java.util.concurrent.Callable"] },
      { "name": "submitListenable", "parameterTypes": ["java.lang.Runnable"] },
      {
        "name": "submitListenable",
        "parameterTypes": ["java.util.concurrent.Callable"]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "execute", "parameterTypes": ["java.lang.Runnable"] },
      { "name": "getClock", "parameterTypes": [] },
      {
        "name": "schedule",
        "parameterTypes": ["java.lang.Runnable", "java.time.Instant"]
      },
      {
        "name": "schedule",
        "parameterTypes": [
          "java.lang.Runnable",
          "org.springframework.scheduling.Trigger"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": ["java.lang.Runnable", "java.time.Duration"]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Instant",
          "java.time.Duration"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": ["java.lang.Runnable", "java.time.Duration"]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Instant",
          "java.time.Duration"
        ]
      },
      { "name": "submit", "parameterTypes": ["java.lang.Runnable"] },
      { "name": "submit", "parameterTypes": ["java.util.concurrent.Callable"] },
      { "name": "submitListenable", "parameterTypes": ["java.lang.Runnable"] },
      {
        "name": "submitListenable",
        "parameterTypes": ["java.util.concurrent.Callable"]
      }
    ]
  },
  {
    "name": "org.springframework.stereotype.Component",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Controller",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Indexed",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Service",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.ConfigurableTransactionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "addListener",
        "parameterTypes": [
          "org.springframework.transaction.TransactionExecutionListener"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.PlatformTransactionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.TransactionDefinition",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.TransactionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setImportMetadata",
        "parameterTypes": ["org.springframework.core.type.AnnotationMetadata"]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.AnnotationTransactionAttributeSource",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "isCandidateClass", "parameterTypes": ["java.lang.Class"] }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.EnableTransactionManagement",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getTransactionAttribute",
        "parameterTypes": ["java.lang.reflect.Method", "java.lang.Class"]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": ["org.springframework.util.StringValueResolver"]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
    "queryAllDeclaredMethods": true,
    "methods": [{ "name": "getPointcut", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAspectSupport",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      { "name": "getTransactionAttributeSource", "parameterTypes": [] },
      { "name": "getTransactionManager", "parameterTypes": [] },
      {
        "name": "setBeanFactory",
        "parameterTypes": ["org.springframework.beans.factory.BeanFactory"]
      },
      {
        "name": "setTransactionAttributeSource",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource"
        ]
      },
      {
        "name": "setTransactionAttributeSources",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource[]"
        ]
      },
      {
        "name": "setTransactionAttributes",
        "parameterTypes": ["java.util.Properties"]
      },
      {
        "name": "setTransactionManager",
        "parameterTypes": ["org.springframework.transaction.TransactionManager"]
      },
      {
        "name": "setTransactionManagerBeanName",
        "parameterTypes": ["java.lang.String"]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAttributeSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionInterceptor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": ["org.aopalliance.intercept.MethodInvocation"]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.support.AbstractPlatformTransactionManager",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "commit",
        "parameterTypes": ["org.springframework.transaction.TransactionStatus"]
      },
      {
        "name": "getTransaction",
        "parameterTypes": [
          "org.springframework.transaction.TransactionDefinition"
        ]
      },
      { "name": "getTransactionExecutionListeners", "parameterTypes": [] },
      {
        "name": "rollback",
        "parameterTypes": ["org.springframework.transaction.TransactionStatus"]
      },
      {
        "name": "setTransactionExecutionListeners",
        "parameterTypes": ["java.util.Collection"]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.support.DefaultTransactionDefinition",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getIsolationLevel", "parameterTypes": [] },
      { "name": "getName", "parameterTypes": [] },
      { "name": "getPropagationBehavior", "parameterTypes": [] },
      { "name": "getTimeout", "parameterTypes": [] },
      { "name": "hashCode", "parameterTypes": [] },
      { "name": "isReadOnly", "parameterTypes": [] },
      { "name": "toString", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.transaction.support.ResourceTransactionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.support.TransactionOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "executeWithoutResult",
        "parameterTypes": ["java.util.function.Consumer"]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.support.TransactionTemplate",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      { "name": "equals", "parameterTypes": ["java.lang.Object"] },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.transaction.support.TransactionCallback"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.util.AntPathMatcher",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "combine",
        "parameterTypes": ["java.lang.String", "java.lang.String"]
      },
      {
        "name": "extractPathWithinPattern",
        "parameterTypes": ["java.lang.String", "java.lang.String"]
      },
      {
        "name": "extractUriTemplateVariables",
        "parameterTypes": ["java.lang.String", "java.lang.String"]
      },
      {
        "name": "getPatternComparator",
        "parameterTypes": ["java.lang.String"]
      },
      { "name": "isPattern", "parameterTypes": ["java.lang.String"] },
      {
        "name": "match",
        "parameterTypes": ["java.lang.String", "java.lang.String"]
      },
      {
        "name": "matchStart",
        "parameterTypes": ["java.lang.String", "java.lang.String"]
      }
    ]
  },
  {
    "name": "org.springframework.util.CustomizableThreadCreator",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "createThread", "parameterTypes": ["java.lang.Runnable"] },
      { "name": "getThreadGroup", "parameterTypes": [] },
      { "name": "getThreadNamePrefix", "parameterTypes": [] },
      { "name": "getThreadPriority", "parameterTypes": [] },
      { "name": "isDaemon", "parameterTypes": [] },
      { "name": "setDaemon", "parameterTypes": ["boolean"] },
      { "name": "setThreadGroup", "parameterTypes": ["java.lang.ThreadGroup"] },
      { "name": "setThreadGroupName", "parameterTypes": ["java.lang.String"] },
      { "name": "setThreadPriority", "parameterTypes": ["int"] }
    ]
  },
  {
    "name": "org.springframework.util.ErrorHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.util.PathMatcher",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.validation.SmartValidator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "validateValue",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.validation.Validator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      { "name": "validateObject", "parameterTypes": ["java.lang.Object"] }
    ]
  },
  {
    "name": "org.springframework.validation.annotation.Validated",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      { "name": "close", "parameterTypes": [] },
      { "name": "destroy", "parameterTypes": [] },
      { "name": "getClockProvider", "parameterTypes": [] },
      { "name": "getConstraintValidatorFactory", "parameterTypes": [] },
      { "name": "getMessageInterpolator", "parameterTypes": [] },
      { "name": "getParameterNameProvider", "parameterTypes": [] },
      { "name": "getTraversableResolver", "parameterTypes": [] },
      { "name": "getValidator", "parameterTypes": [] },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      },
      { "name": "unwrap", "parameterTypes": ["java.lang.Class"] },
      { "name": "usingContext", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.validation.beanvalidation.SpringValidatorAdapter",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "forExecutables", "parameterTypes": [] },
      {
        "name": "getConstraintsForClass",
        "parameterTypes": ["java.lang.Class"]
      },
      { "name": "supports", "parameterTypes": ["java.lang.Class"] },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": ["java.lang.Object", "java.lang.Class[]"]
      },
      {
        "name": "validateProperty",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "validateValue",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "validateValue",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.accept.ContentNegotiationManager",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getAllFileExtensions", "parameterTypes": [] },
      {
        "name": "resolveFileExtensions",
        "parameterTypes": ["org.springframework.http.MediaType"]
      },
      {
        "name": "resolveMediaTypes",
        "parameterTypes": [
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.accept.ContentNegotiationStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.accept.MediaTypeFileExtensionResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.DeleteMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ExceptionHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.GetMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.Mapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PathVariable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PostMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PutMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestBody",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ResponseBody",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RestController",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.client.RestOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.client.RestTemplate",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "delete",
        "parameterTypes": ["java.lang.String", "java.util.Map"]
      },
      {
        "name": "delete",
        "parameterTypes": ["java.lang.String", "java.lang.Object[]"]
      },
      { "name": "delete", "parameterTypes": ["java.net.URI"] },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "org.springframework.core.ParameterizedTypeReference",
          "java.util.Map"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "org.springframework.core.ParameterizedTypeReference",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.net.URI",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "java.lang.Class"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.net.URI",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "org.springframework.http.RequestEntity",
          "java.lang.Class"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "org.springframework.http.RequestEntity",
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.web.client.RequestCallback",
          "org.springframework.web.client.ResponseExtractor",
          "java.util.Map"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.web.client.RequestCallback",
          "org.springframework.web.client.ResponseExtractor",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.net.URI",
          "org.springframework.http.HttpMethod",
          "org.springframework.web.client.RequestCallback",
          "org.springframework.web.client.ResponseExtractor"
        ]
      },
      {
        "name": "getForEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "getForEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "getForEntity",
        "parameterTypes": ["java.net.URI", "java.lang.Class"]
      },
      {
        "name": "getForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "getForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "getForObject",
        "parameterTypes": ["java.net.URI", "java.lang.Class"]
      },
      {
        "name": "headForHeaders",
        "parameterTypes": ["java.lang.String", "java.util.Map"]
      },
      {
        "name": "headForHeaders",
        "parameterTypes": ["java.lang.String", "java.lang.Object[]"]
      },
      { "name": "headForHeaders", "parameterTypes": ["java.net.URI"] },
      {
        "name": "optionsForAllow",
        "parameterTypes": ["java.lang.String", "java.util.Map"]
      },
      {
        "name": "optionsForAllow",
        "parameterTypes": ["java.lang.String", "java.lang.Object[]"]
      },
      { "name": "optionsForAllow", "parameterTypes": ["java.net.URI"] },
      {
        "name": "patchForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "patchForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "patchForObject",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "postForEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "postForEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "postForEntity",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "postForLocation",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "postForLocation",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "postForLocation",
        "parameterTypes": ["java.net.URI", "java.lang.Object"]
      },
      {
        "name": "postForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "postForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "postForObject",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object[]"
        ]
      },
      { "name": "put", "parameterTypes": ["java.net.URI", "java.lang.Object"] }
    ]
  },
  {
    "name": "org.springframework.web.context.ConfigurableWebApplicationContext"
  },
  {
    "name": "org.springframework.web.context.ServletContextAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.context.support.WebApplicationObjectSupport",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setServletContext",
        "parameterTypes": ["jakarta.servlet.ServletContext"]
      }
    ]
  },
  {
    "name": "org.springframework.web.filter.CharacterEncodingFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getEncoding", "parameterTypes": [] },
      { "name": "isForceRequestEncoding", "parameterTypes": [] },
      { "name": "isForceResponseEncoding", "parameterTypes": [] },
      { "name": "setEncoding", "parameterTypes": ["java.lang.String"] },
      { "name": "setForceEncoding", "parameterTypes": ["boolean"] },
      { "name": "setForceRequestEncoding", "parameterTypes": ["boolean"] },
      { "name": "setForceResponseEncoding", "parameterTypes": ["boolean"] }
    ]
  },
  {
    "name": "org.springframework.web.filter.FormContentFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "setCharset", "parameterTypes": ["java.nio.charset.Charset"] },
      {
        "name": "setFormConverter",
        "parameterTypes": [
          "org.springframework.http.converter.FormHttpMessageConverter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.filter.GenericFilterBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      { "name": "destroy", "parameterTypes": [] },
      { "name": "getEnvironment", "parameterTypes": [] },
      { "name": "getFilterConfig", "parameterTypes": [] },
      { "name": "init", "parameterTypes": ["jakarta.servlet.FilterConfig"] },
      { "name": "setBeanName", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setEnvironment",
        "parameterTypes": ["org.springframework.core.env.Environment"]
      },
      {
        "name": "setServletContext",
        "parameterTypes": ["jakarta.servlet.ServletContext"]
      }
    ]
  },
  {
    "name": "org.springframework.web.filter.OncePerRequestFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.filter.RequestContextFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "setThreadContextInheritable", "parameterTypes": ["boolean"] }
    ]
  },
  {
    "name": "org.springframework.web.filter.ServerHttpObservationFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.method.support.CompositeUriComponentsContributor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "contributeMethodArgument",
        "parameterTypes": [
          "org.springframework.core.MethodParameter",
          "java.lang.Object",
          "org.springframework.web.util.UriComponentsBuilder",
          "java.util.Map",
          "org.springframework.core.convert.ConversionService"
        ]
      },
      {
        "name": "supportsParameter",
        "parameterTypes": ["org.springframework.core.MethodParameter"]
      }
    ]
  },
  {
    "name": "org.springframework.web.method.support.HandlerMethodArgumentResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.method.support.UriComponentsContributor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.multipart.MultipartResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.multipart.support.StandardServletMultipartResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "cleanupMultipart",
        "parameterTypes": [
          "org.springframework.web.multipart.MultipartHttpServletRequest"
        ]
      },
      {
        "name": "isMultipart",
        "parameterTypes": ["jakarta.servlet.http.HttpServletRequest"]
      },
      {
        "name": "resolveMultipart",
        "parameterTypes": ["jakarta.servlet.http.HttpServletRequest"]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.DispatcherHandler"
  },
  {
    "name": "org.springframework.web.servlet.DispatcherServlet",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.FlashMapManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.FrameworkServlet",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "destroy", "parameterTypes": [] },
      { "name": "getContextAttribute", "parameterTypes": [] },
      { "name": "getContextClass", "parameterTypes": [] },
      { "name": "getContextConfigLocation", "parameterTypes": [] },
      { "name": "getContextId", "parameterTypes": [] },
      { "name": "getNamespace", "parameterTypes": [] },
      { "name": "getServletContextAttributeName", "parameterTypes": [] },
      { "name": "isEnableLoggingRequestDetails", "parameterTypes": [] },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.event.ContextRefreshedEvent"
        ]
      },
      { "name": "refresh", "parameterTypes": [] },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      },
      { "name": "setContextAttribute", "parameterTypes": ["java.lang.String"] },
      { "name": "setContextClass", "parameterTypes": ["java.lang.Class"] },
      {
        "name": "setContextConfigLocation",
        "parameterTypes": ["java.lang.String"]
      },
      { "name": "setContextId", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setContextInitializerClasses",
        "parameterTypes": ["java.lang.String"]
      },
      {
        "name": "setContextInitializers",
        "parameterTypes": [
          "org.springframework.context.ApplicationContextInitializer[]"
        ]
      },
      { "name": "setDispatchOptionsRequest", "parameterTypes": ["boolean"] },
      { "name": "setDispatchTraceRequest", "parameterTypes": ["boolean"] },
      {
        "name": "setEnableLoggingRequestDetails",
        "parameterTypes": ["boolean"]
      },
      { "name": "setNamespace", "parameterTypes": ["java.lang.String"] },
      { "name": "setPublishContext", "parameterTypes": ["boolean"] },
      { "name": "setPublishEvents", "parameterTypes": ["boolean"] },
      { "name": "setThreadContextInheritable", "parameterTypes": ["boolean"] }
    ]
  },
  {
    "name": "org.springframework.web.servlet.HandlerAdapter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerExceptionResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerMapping",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HttpServletBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getEnvironment", "parameterTypes": [] },
      { "name": "getServletName", "parameterTypes": [] },
      { "name": "init", "parameterTypes": [] },
      {
        "name": "setEnvironment",
        "parameterTypes": ["org.springframework.core.env.Environment"]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.LocaleResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.RequestToViewNameTranslator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.ThemeResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.View",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.ViewResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "setConfigurers", "parameterTypes": ["java.util.List"] }
    ]
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "beanNameHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      { "name": "defaultServletHandlerMapping", "parameterTypes": [] },
      {
        "name": "handlerExceptionResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      { "name": "handlerFunctionAdapter", "parameterTypes": [] },
      { "name": "httpRequestHandlerAdapter", "parameterTypes": [] },
      { "name": "mvcHandlerMappingIntrospector", "parameterTypes": [] },
      { "name": "mvcPathMatcher", "parameterTypes": [] },
      { "name": "mvcPatternParser", "parameterTypes": [] },
      { "name": "mvcResourceUrlProvider", "parameterTypes": [] },
      {
        "name": "mvcUriComponentsContributor",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
        ]
      },
      { "name": "mvcUrlPathHelper", "parameterTypes": [] },
      {
        "name": "mvcViewResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "requestMappingHandlerAdapter",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "requestMappingHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "resourceHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "routerFunctionMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      },
      {
        "name": "setServletContext",
        "parameterTypes": ["jakarta.servlet.ServletContext"]
      },
      { "name": "simpleControllerHandlerAdapter", "parameterTypes": [] },
      {
        "name": "viewControllerHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      { "name": "viewNameTranslator", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      { "name": "addArgumentResolvers", "parameterTypes": ["java.util.List"] },
      {
        "name": "addCorsMappings",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.CorsRegistry"
        ]
      },
      {
        "name": "addFormatters",
        "parameterTypes": ["org.springframework.format.FormatterRegistry"]
      },
      {
        "name": "addInterceptors",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.InterceptorRegistry"
        ]
      },
      {
        "name": "addResourceHandlers",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"
        ]
      },
      {
        "name": "addReturnValueHandlers",
        "parameterTypes": ["java.util.List"]
      },
      {
        "name": "addViewControllers",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ViewControllerRegistry"
        ]
      },
      {
        "name": "configureAsyncSupport",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"
        ]
      },
      {
        "name": "configureContentNegotiation",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"
        ]
      },
      {
        "name": "configureDefaultServletHandling",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer"
        ]
      },
      {
        "name": "configureHandlerExceptionResolvers",
        "parameterTypes": ["java.util.List"]
      },
      {
        "name": "configureMessageConverters",
        "parameterTypes": ["java.util.List"]
      },
      {
        "name": "configurePathMatch",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.PathMatchConfigurer"
        ]
      },
      {
        "name": "configureViewResolvers",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ViewResolverRegistry"
        ]
      },
      {
        "name": "extendHandlerExceptionResolvers",
        "parameterTypes": ["java.util.List"]
      },
      {
        "name": "extendMessageConverters",
        "parameterTypes": ["java.util.List"]
      },
      { "name": "getMessageCodesResolver", "parameterTypes": [] },
      { "name": "getValidator", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getLastModified",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.Object"
        ]
      },
      { "name": "getOrder", "parameterTypes": [] },
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      },
      { "name": "supports", "parameterTypes": ["java.lang.Object"] }
    ]
  },
  {
    "name": "org.springframework.web.servlet.function.support.RouterFunctionMapping",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      {
        "name": "match",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "initApplicationContext", "parameterTypes": [] },
      {
        "name": "setDetectHandlersInAncestorContexts",
        "parameterTypes": ["boolean"]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractHandlerMapping",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getCorsConfigurationSource", "parameterTypes": [] },
      { "name": "getCorsProcessor", "parameterTypes": [] },
      { "name": "getDefaultHandler", "parameterTypes": [] },
      {
        "name": "getHandler",
        "parameterTypes": ["jakarta.servlet.http.HttpServletRequest"]
      },
      { "name": "getOrder", "parameterTypes": [] },
      { "name": "getPathMatcher", "parameterTypes": [] },
      { "name": "getPatternParser", "parameterTypes": [] },
      { "name": "getUrlPathHelper", "parameterTypes": [] },
      { "name": "setAlwaysUseFullPath", "parameterTypes": ["boolean"] },
      { "name": "setBeanName", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setCorsConfigurationSource",
        "parameterTypes": [
          "org.springframework.web.cors.CorsConfigurationSource"
        ]
      },
      { "name": "setCorsConfigurations", "parameterTypes": ["java.util.Map"] },
      {
        "name": "setCorsProcessor",
        "parameterTypes": ["org.springframework.web.cors.CorsProcessor"]
      },
      { "name": "setDefaultHandler", "parameterTypes": ["java.lang.Object"] },
      { "name": "setInterceptors", "parameterTypes": ["java.lang.Object[]"] },
      { "name": "setOrder", "parameterTypes": ["int"] },
      {
        "name": "setPathMatcher",
        "parameterTypes": ["org.springframework.util.PathMatcher"]
      },
      {
        "name": "setPatternParser",
        "parameterTypes": [
          "org.springframework.web.util.pattern.PathPatternParser"
        ]
      },
      { "name": "setRemoveSemicolonContent", "parameterTypes": ["boolean"] },
      { "name": "setUrlDecode", "parameterTypes": ["boolean"] },
      {
        "name": "setUrlPathHelper",
        "parameterTypes": ["org.springframework.web.util.UrlPathHelper"]
      },
      { "name": "usesPathPatterns", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getDirectPaths", "parameterTypes": ["java.lang.Object"] },
      { "name": "getHandlerMethods", "parameterTypes": [] },
      {
        "name": "getHandlerMethodsForMappingName",
        "parameterTypes": ["java.lang.String"]
      },
      {
        "name": "getMappingPathPatterns",
        "parameterTypes": ["java.lang.Object"]
      },
      {
        "name": "getMatchingMapping",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      { "name": "getNamingStrategy", "parameterTypes": [] },
      {
        "name": "handleMatch",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "initCorsConfiguration",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerHandlerMethod",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "setDetectHandlerMethodsInAncestorContexts",
        "parameterTypes": ["boolean"]
      },
      {
        "name": "setHandlerMethodMappingNamingStrategy",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy"
        ]
      },
      {
        "name": "setPatternParser",
        "parameterTypes": [
          "org.springframework.web.util.pattern.PathPatternParser"
        ]
      },
      { "name": "unregisterMapping", "parameterTypes": ["java.lang.Object"] }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler",
    "methods": [{ "name": "handle", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractUrlHandlerMapping",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getRootHandler", "parameterTypes": [] },
      {
        "name": "match",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String"
        ]
      },
      { "name": "setLazyInitHandlers", "parameterTypes": ["boolean"] },
      {
        "name": "setPatternParser",
        "parameterTypes": [
          "org.springframework.web.util.pattern.PathPatternParser"
        ]
      },
      { "name": "setRootHandler", "parameterTypes": ["java.lang.Object"] },
      { "name": "setUseTrailingSlashMatch", "parameterTypes": ["boolean"] },
      { "name": "useTrailingSlashMatch", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.HandlerExceptionResolverComposite",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getOrder", "parameterTypes": [] },
      {
        "name": "resolveException",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object",
          "java.lang.Exception"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.MatchableHandlerMapping",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.SimpleUrlHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.i18n.AbstractLocaleResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "setDefaultLocale", "parameterTypes": ["java.util.Locale"] }
    ]
  },
  {
    "name": "org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "resolveLocale",
        "parameterTypes": ["jakarta.servlet.http.HttpServletRequest"]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.util.Locale"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getLastModified",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.Object"
        ]
      },
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      },
      { "name": "supports", "parameterTypes": ["java.lang.Object"] }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getLastModified",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.Object"
        ]
      },
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      },
      { "name": "supports", "parameterTypes": ["java.lang.Object"] }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getLastModified",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.Object"
        ]
      },
      { "name": "getOrder", "parameterTypes": [] },
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      },
      { "name": "setOrder", "parameterTypes": ["int"] },
      { "name": "supports", "parameterTypes": ["java.lang.Object"] }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "initCorsConfiguration",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerHandlerMethod",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler",
    "methods": [{ "name": "handle", "parameterTypes": [] }]
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      {
        "name": "setBeanFactory",
        "parameterTypes": ["org.springframework.beans.factory.BeanFactory"]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      { "name": "getBuilderConfiguration", "parameterTypes": [] },
      { "name": "getContentNegotiationManager", "parameterTypes": [] },
      { "name": "getFileExtensions", "parameterTypes": [] },
      { "name": "getPathPrefixes", "parameterTypes": [] },
      {
        "name": "initCorsConfiguration",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "match",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String"
        ]
      },
      {
        "name": "registerHandlerMethod",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "org.springframework.web.servlet.mvc.method.RequestMappingInfo",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "setContentNegotiationManager",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": ["org.springframework.util.StringValueResolver"]
      },
      { "name": "setPathPrefixes", "parameterTypes": ["java.util.Map"] },
      {
        "name": "setPatternParser",
        "parameterTypes": [
          "org.springframework.web.util.pattern.PathPatternParser"
        ]
      },
      {
        "name": "setUseRegisteredSuffixPatternMatch",
        "parameterTypes": ["boolean"]
      },
      { "name": "setUseSuffixPatternMatch", "parameterTypes": ["boolean"] },
      { "name": "setUseTrailingSlashMatch", "parameterTypes": ["boolean"] },
      { "name": "useRegisteredSuffixPatternMatch", "parameterTypes": [] },
      { "name": "useSuffixPatternMatch", "parameterTypes": [] },
      { "name": "useTrailingSlashMatch", "parameterTypes": [] }
    ]
  },
  {
    "name": "org.springframework.web.servlet.resource.ResourceUrlProvider",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": ["org.springframework.context.ApplicationEvent"]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.support.AbstractFlashMapManager",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getFlashMapTimeout", "parameterTypes": [] },
      { "name": "getUrlPathHelper", "parameterTypes": [] },
      {
        "name": "retrieveAndUpdate",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "saveOutputFlashMap",
        "parameterTypes": [
          "org.springframework.web.servlet.FlashMap",
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      { "name": "setFlashMapTimeout", "parameterTypes": ["int"] },
      {
        "name": "setUrlPathHelper",
        "parameterTypes": ["org.springframework.web.util.UrlPathHelper"]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.support.SessionFlashMapManager",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.support.WebContentGenerator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.theme.AbstractThemeResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getDefaultThemeName", "parameterTypes": [] },
      { "name": "setDefaultThemeName", "parameterTypes": ["java.lang.String"] }
    ]
  },
  {
    "name": "org.springframework.web.servlet.theme.FixedThemeResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "resolveThemeName",
        "parameterTypes": ["jakarta.servlet.http.HttpServletRequest"]
      },
      {
        "name": "setThemeName",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.AbstractCachingViewResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "clearCache", "parameterTypes": [] },
      { "name": "getCacheFilter", "parameterTypes": [] },
      { "name": "getCacheLimit", "parameterTypes": [] },
      { "name": "isCache", "parameterTypes": [] },
      { "name": "isCacheUnresolved", "parameterTypes": [] },
      {
        "name": "removeFromCache",
        "parameterTypes": ["java.lang.String", "java.util.Locale"]
      },
      {
        "name": "resolveViewName",
        "parameterTypes": ["java.lang.String", "java.util.Locale"]
      },
      { "name": "setCache", "parameterTypes": ["boolean"] },
      {
        "name": "setCacheFilter",
        "parameterTypes": [
          "org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter"
        ]
      },
      { "name": "setCacheLimit", "parameterTypes": ["int"] },
      { "name": "setCacheUnresolved", "parameterTypes": ["boolean"] }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.BeanNameViewResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getOrder", "parameterTypes": [] },
      {
        "name": "resolveViewName",
        "parameterTypes": ["java.lang.String", "java.util.Locale"]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.ContentNegotiatingViewResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      { "name": "getOrder", "parameterTypes": [] },
      {
        "name": "resolveViewName",
        "parameterTypes": ["java.lang.String", "java.util.Locale"]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getViewName",
        "parameterTypes": ["jakarta.servlet.http.HttpServletRequest"]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.InternalResourceViewResolver",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.view.UrlBasedViewResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "getAttributesMap", "parameterTypes": [] },
      { "name": "getOrder", "parameterTypes": [] },
      { "name": "getRedirectHosts", "parameterTypes": [] },
      { "name": "setAttributes", "parameterTypes": ["java.util.Properties"] },
      { "name": "setAttributesMap", "parameterTypes": ["java.util.Map"] },
      { "name": "setContentType", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setExposeContextBeansAsAttributes",
        "parameterTypes": ["boolean"]
      },
      {
        "name": "setExposePathVariables",
        "parameterTypes": ["java.lang.Boolean"]
      },
      {
        "name": "setExposedContextBeanNames",
        "parameterTypes": ["java.lang.String[]"]
      },
      { "name": "setOrder", "parameterTypes": ["int"] },
      { "name": "setPrefix", "parameterTypes": ["java.lang.String"] },
      { "name": "setRedirectContextRelative", "parameterTypes": ["boolean"] },
      { "name": "setRedirectHosts", "parameterTypes": ["java.lang.String[]"] },
      { "name": "setRedirectHttp10Compatible", "parameterTypes": ["boolean"] },
      {
        "name": "setRequestContextAttribute",
        "parameterTypes": ["java.lang.String"]
      },
      { "name": "setSuffix", "parameterTypes": ["java.lang.String"] },
      { "name": "setViewClass", "parameterTypes": ["java.lang.Class"] },
      { "name": "setViewNames", "parameterTypes": ["java.lang.String[]"] }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.ViewResolverComposite",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "afterPropertiesSet", "parameterTypes": [] },
      { "name": "getOrder", "parameterTypes": [] },
      {
        "name": "resolveViewName",
        "parameterTypes": ["java.lang.String", "java.util.Locale"]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": ["org.springframework.context.ApplicationContext"]
      },
      {
        "name": "setServletContext",
        "parameterTypes": ["jakarta.servlet.ServletContext"]
      }
    ]
  },
  {
    "name": "org.springframework.web.util.UrlPathHelper",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.util.pattern.PathPatternParser",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.thymeleaf.spring6.SpringTemplateEngine"
  },
  {
    "name": "org.xmlbeam.XBProjector"
  },
  {
    "name": "org.yaml.snakeyaml.Yaml"
  },
  {
    "name": "reactor.core.CoreSubscriber",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "fields": [{ "name": "currentContext" }],
    "methods": [{ "name": "currentContext", "parameterTypes": [] }]
  },
  {
    "name": "reactor.core.publisher.Flux"
  },
  {
    "name": "reactor.core.publisher.Mono"
  },
  {
    "name": "reactor.tools.agent.ReactorDebugAgent"
  },
  {
    "name": "scala.Option"
  },
  {
    "name": "sun.management.ClassLoadingImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.CompilationImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.ManagementFactoryHelper$1",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryManagerImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryPoolImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.RuntimeImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.misc.Unsafe",
    "fields": [{ "name": "theUnsafe" }]
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.provider.NativePRNG",
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      {
        "name": "<init>",
        "parameterTypes": ["java.security.SecureRandomParameters"]
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.provider.SHA2$SHA256",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.provider.X509Factory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.rsa.RSAKeyFactory$Legacy",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.ssl.SSLContextImpl$TLSContext",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.util.ObjectIdentifier"
  },
  {
    "name": "sun.security.x509.AuthorityInfoAccessExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.Boolean", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "sun.security.x509.AuthorityKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.Boolean", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "sun.security.x509.BasicConstraintsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.Boolean", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "sun.security.x509.CRLDistributionPointsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.Boolean", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "sun.security.x509.CertificateExtensions"
  },
  {
    "name": "sun.security.x509.CertificatePoliciesExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.Boolean", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "sun.security.x509.ExtendedKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.Boolean", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "sun.security.x509.IssuerAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.Boolean", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "sun.security.x509.KeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.Boolean", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "sun.security.x509.NetscapeCertTypeExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.Boolean", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "sun.security.x509.PrivateKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.Boolean", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.Boolean", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.Boolean", "java.lang.Object"]
      }
    ]
  }
]
